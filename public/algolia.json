[{"author":null,"categories":null,"content":null,"date":1556409600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":["kubernetes","课程","优惠","51"],"kind":"page","lang":"en","lastmod":1556409600,"objectID":"c4807b532d3fbdf3c437840a9592c0f3","permalink":"https://qnxr.xyz/post/promotion-51/","publishdate":"2019-04-28T00:00:00Z","readingtime":0,"relpermalink":"/post/promotion-51/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/promotion-51\"\u003e\n  \u003cimg src=\"https://sdn.youdianzhishi.com/images/2019/10/24/65f2cfb229184268a18745fe202b281b.jpg?imageView2/2/format/webp\" alt=\"Kubernetes 进阶训练营\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e","tags":["kubernetes","课程"],"title":"Kubernetes 进阶训练营","type":"post","url":"/post/promotion-51/","weight":1,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1613174400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1613174400,"objectID":"","permalink":"https://qnxr.xyz/tags/kubernetes/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kubernetes/","section":"tags","summary":"","tags":null,"title":"Kubernetes","type":"tags","url":"/tags/kubernetes/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1613174400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":1613174400,"objectID":"","permalink":"https://qnxr.xyz/post/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/post/","section":"post","summary":"","tags":null,"title":"Posts","type":"post","url":"/post/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1613174400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1613174400,"objectID":"","permalink":"https://qnxr.xyz/tags/service-api/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/service-api/","section":"tags","summary":"","tags":null,"title":"Service API","type":"tags","url":"/tags/service-api/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1613174400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1613174400,"objectID":"","permalink":"https://qnxr.xyz/tags/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/","section":"tags","summary":"","tags":null,"title":"Tags","type":"tags","url":"/tags/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1613174400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1613174400,"objectID":"","permalink":"https://qnxr.xyz/tags/traefik/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/traefik/","section":"tags","summary":"","tags":null,"title":"traefik","type":"tags","url":"/tags/traefik/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1613174400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":["kubernetes","traefik","ingress","ingressroute","Service API"],"kind":"page","lang":"en","lastmod":1613174400,"objectID":"68d3a18fd9a08418fa3254d156b135fb","permalink":"https://qnxr.xyz/post/use-kubernetes-service-apis-with-traefik/","publishdate":"2021-02-13T00:00:00Z","readingtime":5,"relpermalink":"/post/use-kubernetes-service-apis-with-traefik/","section":"post","summary":"\u003cp\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20210212151242.png\" alt=\"\"\u003e\n\n\u003c/p\u003e\n\u003cp\u003e[前面我们已经介绍了 Kubernetes 社区内部为 Kubernetes 开发了一种改进的定义和管理入口流量的新接口](* \u003ca href=\"/post/kubernetes-service-apis-intro/\"\u003eKubernetes Service APIs 简介\u003c/a\u003e)，也就是新的 \u003ccode\u003eKubernetes Service APIs\u003c/code\u003e。Traefik 在2.4 版本中引入了对 Service APIs 的初始支持。本文我们将演示如何通过 Traefik 来使用新的 \u003ccode\u003eGateway\u003c/code\u003e、\u003ccode\u003eGatewayClass\u003c/code\u003e 和 \u003ccode\u003eHTTPRoute API\u003c/code\u003e 将请求路由到后端的服务 Pod。\u003c/p\u003e","tags":["kubernetes","traefik","Service API"],"title":"通过 Traefik 使用 Kubernetes Service APIs 进行流量路由","type":"post","url":"/post/use-kubernetes-service-apis-with-traefik/","weight":0,"wordcount":2084},{"author":null,"categories":null,"content":null,"date":1613174400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"home","lang":"en","lastmod":1613174400,"objectID":"","permalink":"https://qnxr.xyz/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/","section":"","summary":"","tags":null,"title":"青年夏日IT","type":"page","url":"/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1608681600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":["网络","kubernetes","ingress","ingressroute","Service API"],"kind":"page","lang":"en","lastmod":1608681600,"objectID":"3a1b413f3fe0816dbd0d77853f0baf2d","permalink":"https://qnxr.xyz/post/kubernetes-service-apis-intro/","publishdate":"2020-12-23T00:00:00Z","readingtime":5,"relpermalink":"/post/kubernetes-service-apis-intro/","section":"post","summary":"\u003cp\u003eKubernetes 服务 APIs（Service APIs）是由 \u003ccode\u003eSIG-NETWORK\u003c/code\u003e 社区管理的开源项目，项目地址：\u003ca href=\"https://github.com/kubernetes-sigs/service-apis\"\u003ehttps://github.com/kubernetes-sigs/service-apis\u003c/a\u003e。该项目的目标是在 Kubernetes 生态系统中发展服务网络API，服务 API提供了暴露 Kubernetes 应用的接口 - Services、Ingress 等。\u003c/p\u003e","tags":["kubernetes","traefik","Service API"],"title":"Kubernetes Service APIs 简介","type":"post","url":"/post/kubernetes-service-apis-intro/","weight":0,"wordcount":2471},{"author":null,"categories":null,"content":null,"date":1606435200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1606435200,"objectID":"","permalink":"https://qnxr.xyz/tags/coredns/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/coredns/","section":"tags","summary":"","tags":null,"title":"coredns","type":"tags","url":"/tags/coredns/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1606435200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":["Pod","kubernetes","DNS","CoreDNS"],"kind":"page","lang":"en","lastmod":1606435200,"objectID":"7b9066d95a448b2600d34cb6730fcf58","permalink":"https://qnxr.xyz/post/add-dns-record-for-pod/","publishdate":"2020-11-27T00:00:00Z","readingtime":4,"relpermalink":"/post/add-dns-record-for-pod/","section":"post","summary":"\u003cp\u003e我们都知道 StatefulSet 中的 Pod 是拥有单独的 DNS 记录的，比如一个 StatefulSet 名称为 etcd，而它关联的 Headless SVC 名称为 etcd-headless，那么 CoreDNS 就会为它的每个 Pod 解析如下的 A 记录：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eetcd-0.etcd-headless.default.svc.cluster.local\u003c/li\u003e\n\u003cli\u003eetcd-1.etcd-headless.default.svc.cluster.local\u003c/li\u003e\n\u003cli\u003e\u0026hellip;\u0026hellip;\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e那么除了 StatefulSet 管理的 Pod 之外，其他的 Pod 是否也可以生成 DNS 记录呢？\u003c/p\u003e\n\u003cp\u003e如下所示，我们这里只有一个 Headless 的 SVC，并没有 StatefulSet 管理的 Pod，而是 ReplicaSet 管理的 Pod，我们可以看到貌似也生成了类似于 StatefulSet 中的解析记录。\u003c/p\u003e\n\u003cp\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20201125113752.png\" alt=\"\"\u003e\n\n\u003c/p\u003e","tags":["CoreDNS","kubernetes"],"title":"给 Pod 添加 DNS 记录","type":"post","url":"/post/add-dns-record-for-pod/","weight":0,"wordcount":1902},{"author":null,"categories":null,"content":null,"date":1606348800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3700,"html":null,"keywords":["网络","kubernetes","命名空间"],"kind":"page","lang":"en","lastmod":1606348800,"objectID":"1cb567c4ce7c04f5a4f4f9bba5a5fd94","permalink":"https://qnxr.xyz/post/learn-linux-net-namespace/","publishdate":"2020-11-26T00:00:00Z","readingtime":8,"relpermalink":"/post/learn-linux-net-namespace/","section":"post","summary":"\u003cp\u003e如果你使用过 Docker 和 Kubernetes，那么可能应该听说过 network namespace（网络命名空间），最近在我们的 \u003ca href=\"https://youdianzhishi.com/web/course/1021\"\u003e《Kubernetes 网络训练营》\u003c/a\u003e课程中学习到了 Linux 下面的 \u003ccode\u003eip\u003c/code\u003e 命令的使用，本文我将演示如何使用命令通过一对 \u003ccode\u003eveth\u003c/code\u003e 接口连接不同子网中的网络命名空间的进程。\u003c/p\u003e","tags":["网络","kubernetes"],"title":"理解 Linux 网络命名空间","type":"post","url":"/post/learn-linux-net-namespace/","weight":0,"wordcount":3631},{"author":null,"categories":null,"content":null,"date":1606348800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1606348800,"objectID":"","permalink":"https://qnxr.xyz/tags/%E7%BD%91%E7%BB%9C/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BD%91%E7%BB%9C/","section":"tags","summary":"","tags":null,"title":"网络","type":"tags","url":"/tags/%E7%BD%91%E7%BB%9C/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1604793600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1604793600,"objectID":"","permalink":"https://qnxr.xyz/tags/go/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/go/","section":"tags","summary":"","tags":null,"title":"go","type":"tags","url":"/tags/go/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1604793600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1604793600,"objectID":"","permalink":"https://qnxr.xyz/tags/helm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/helm/","section":"tags","summary":"","tags":null,"title":"Helm","type":"tags","url":"/tags/helm/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1604793600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1604793600,"objectID":"","permalink":"https://qnxr.xyz/tags/kustomize/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kustomize/","section":"tags","summary":"","tags":null,"title":"kustomize","type":"tags","url":"/tags/kustomize/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1604793600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1604793600,"objectID":"","permalink":"https://qnxr.xyz/tags/yaml/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/yaml/","section":"tags","summary":"","tags":null,"title":"yaml","type":"tags","url":"/tags/yaml/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1604793600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":["kubernetes","yaml","go","helm","kustomize","模板"],"kind":"page","lang":"en","lastmod":1604793600,"objectID":"b3eb20e3dd2652180057376afa38acab","permalink":"https://qnxr.xyz/post/code-k8s-yaml-templating/","publishdate":"2020-11-08T00:00:00Z","readingtime":4,"relpermalink":"/post/code-k8s-yaml-templating/","section":"post","summary":"\u003cp\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/use-go-code-k8s-yaml-template.png\" alt=\"自己动手写一个 Kubernetes YAML 模板化工具\"\u003e\n\n\u003c/p\u003e\n\u003cp\u003e我们在使用 Kubernetes 编写资源清单文件的时候，往往会使用类似于 \u003ccode\u003eHelm\u003c/code\u003e 或者 \u003ccode\u003eKustomize\u003c/code\u003e 这样的工具来进行模板化处理，一来是提高了资源清单的灵活性，另一方面也确实降低了我们安装复杂的 Kubernetes 应用的门槛。本文我们尝试自己使用 Golang 来实现一个 YAML 资源清单文件模板化的方案。\u003c/p\u003e","tags":["kubernetes","yaml","go","helm","kustomize"],"title":"自己动手写一个 Kubernetes YAML 模板化工具","type":"post","url":"/post/code-k8s-yaml-templating/","weight":0,"wordcount":1552},{"author":null,"categories":null,"content":null,"date":1604620800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1604620800,"objectID":"","permalink":"https://qnxr.xyz/tags/ingress/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ingress/","section":"tags","summary":"","tags":null,"title":"ingress","type":"tags","url":"/tags/ingress/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1604620800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3100,"html":null,"keywords":["kubernetes","ingress"],"kind":"page","lang":"en","lastmod":1604620800,"objectID":"a0a2179c0fb3ae9f8d6acc0dca4dcd3b","permalink":"https://qnxr.xyz/post/visually-explained-k8s-ingress/","publishdate":"2020-11-06T00:00:00Z","readingtime":7,"relpermalink":"/post/visually-explained-k8s-ingress/","section":"post","summary":"\u003cp\u003eKubernetes Ingress 只是 Kubernetes 中的一个普通资源对象，需要一个对应的 Ingress Controller 来解析 Ingress 的规则，暴露服务到外部，比如 ingress-nginx，本质上来说它只是一个 Nginx Pod，然后将请求重定向到其他内部（ClusterIP）服务去，这个 Pod 本身也是通过 Kubernetes 服务暴露出去，最常见的方式是通过 LoadBalancer 来实现的。\u003c/p\u003e\n\u003cp\u003e同样本文希望用一个简单清晰的概述，让你来了解 Kubernetes Ingress 背后的东西，让你更容易理解使用的 Ingress。\u003c/p\u003e","tags":["kubernetes","ingress"],"title":"图解 Kubernetes Ingress","type":"post","url":"/post/visually-explained-k8s-ingress/","weight":0,"wordcount":3020},{"author":null,"categories":null,"content":null,"date":1604534400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1604534400,"objectID":"","permalink":"https://qnxr.xyz/tags/service/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/service/","section":"tags","summary":"","tags":null,"title":"service","type":"tags","url":"/tags/service/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1604534400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":["kubernetes","service"],"kind":"page","lang":"en","lastmod":1604534400,"objectID":"683d6ebf37349e1a0f4e40be155a6263","permalink":"https://qnxr.xyz/post/visually-explained-k8s-service/","publishdate":"2020-11-05T00:00:00Z","readingtime":4,"relpermalink":"/post/visually-explained-k8s-service/","section":"post","summary":"\u003cp\u003e在 Kubernetes 中 Service 主要有4种不同的类型，其中的 ClusterIP 是最基础的。\u003c/p\u003e\n\u003cp\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20201105105016.png\" alt=\"\"\u003e\n\n\u003c/p\u003e\n\u003cp\u003e上图解释了 Kubernetes 的 Service 的基本关系，当我们创建一个 NodePort 的 Service 时，它也会创建一个 ClusterIP，而如果你创建一个 LoadBalancer，它就会创建一个 NodePort，然后创建一个 ClusterIP\u003c/p\u003e\n\u003cp\u003e此外我们还需要明白 Service 是指向 pods 的，Service 不是直接指向 Deployments 或 ReplicaSets，而是直接使用 labels 标签指向 Pod，这种方式就提供了极大的灵活性，因为通过什么方式创建的 Pod 其实并不重要。接下来我们通过一个简单的例子开始，我们用不同的 Service 类型来逐步扩展，看看这些 Service 是如何建立的。\u003c/p\u003e","tags":["kubernetes","service"],"title":"图解 Kubernetes Service","type":"post","url":"/post/visually-explained-k8s-service/","weight":0,"wordcount":1817},{"author":null,"categories":null,"content":null,"date":1604188800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1604188800,"objectID":"","permalink":"https://qnxr.xyz/tags/kafka/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kafka/","section":"tags","summary":"","tags":null,"title":"Kafka","type":"tags","url":"/tags/kafka/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1604188800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1604188800,"objectID":"","permalink":"https://qnxr.xyz/tags/pod/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pod/","section":"tags","summary":"","tags":null,"title":"Pod","type":"tags","url":"/tags/pod/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1604188800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":["kubernetes","pod","kafka","helm","operator"],"kind":"page","lang":"en","lastmod":1604188800,"objectID":"437af2728e077848a2d10b6f577378ff","permalink":"https://qnxr.xyz/post/deploy-kafka-ha-on-k8s/","publishdate":"2020-11-01T00:00:00Z","readingtime":4,"relpermalink":"/post/deploy-kafka-ha-on-k8s/","section":"post","summary":"\u003cp\u003eApache Kafka 是目前最流行的分布式消息发布订阅系统，虽然 Kafka 非常强大，但它同样复杂，需要一个高可用的强大平台来运行。在微服务盛行，大多数公司都采用分布式计算的今天，将 Kafka 作为核心的消息系统使用还是非常有优势的。\u003c/p\u003e\n\u003cp\u003e如果你在 Kubernetes 集群中运行你的微服务，那么在 Kubernetes 中运行 Kafka 集群也是很有意义的，这样可以利用其内置的弹性和高可用，我们可以使用内置的 Kubernetes 服务发现轻松地与集群内的 Kafka Pods 进行交互。\u003c/p\u003e\n\u003cp\u003e下面我们将来介绍下如何在 Kubernetes 上构建分布式的 Kafka 集群，这里我们将使用 Helm Chart 和 StatefulSet 来进行部署，当然如果想要动态生成持久化数据卷，还需要提前配置一个 StorageClass 资源，比如基于 Ceph RBD 的，如果你集群中没有配置动态卷，则需要提前创建3个未绑定的 PV 用于数据持久化。\u003c/p\u003e\n\u003cp\u003e当前基于 Helm 官方仓库的 \u003ccode\u003echartincubator/kafka\u003c/code\u003e 在 Kubernetes 上部署的 Kafka，使用的镜像是 \u003ccode\u003econfluentinc/cp-kafka:5.0.1\u003c/code\u003e，即部署的是Confluent 公司提供的 Kafka 版本，Confluent Platform Kafka(简称CP Kafka)提供了一些 Apache Kafka 没有的高级特性，例如跨数据中心备份、Schema 注册中心以及集群监控工具等。\u003c/p\u003e","tags":["kubernetes","Pod","Kafka","Helm"],"title":"在 Kubernetes 上运行高可用的 Kafka 集群","type":"post","url":"/post/deploy-kafka-ha-on-k8s/","weight":0,"wordcount":1686},{"author":null,"categories":null,"content":null,"date":1602115200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1602115200,"objectID":"","permalink":"https://qnxr.xyz/tags/docker/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/docker/","section":"tags","summary":"","tags":null,"title":"Docker","type":"tags","url":"/tags/docker/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1602115200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1602115200,"objectID":"","permalink":"https://qnxr.xyz/tags/kind/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kind/","section":"tags","summary":"","tags":null,"title":"KinD","type":"tags","url":"/tags/kind/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1602115200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":["kubeadm","kubernetes","docker","KinD","github","CI/CD"],"kind":"page","lang":"en","lastmod":1602115200,"objectID":"e1ad4fcbf834cecd2fa4e0c267b9f4d7","permalink":"https://qnxr.xyz/post/accelerate-ci-cd-pipelines-with-kind/","publishdate":"2020-10-08T00:00:00Z","readingtime":5,"relpermalink":"/post/accelerate-ci-cd-pipelines-with-kind/","section":"post","summary":"\u003cp\u003e现在安装 Kubernetes 集群已经变得越来越简单了，出现了很多方案，各种方案都有自己适合的使用场景。虽然我们可以很快速在云环境下面启动一个 Kubernetes 集群，但是对于开发人员通常更喜欢能够快速上手的东西，\u003ca href=\"https://kind.sigs.k8s.io/\"\u003eKubernetes in Docker（KinD）\u003c/a\u003e这个工具就可以通过创建容器来作为 Kubernetes 的节点，我们只需要在机器上安装 Docker 就可以使用，它允许我们在很短的时间内就启动一个多节点的集群，而不依赖任何其他工具或云服务商，这就使得它不仅对本地开发非常有用，而且对 CI/CD 也很有帮助。\u003c/p\u003e","tags":["kubernetes","docker","KinD"],"title":"使用 KinD 加速 CI/CD 流水线","type":"post","url":"/post/accelerate-ci-cd-pipelines-with-kind/","weight":0,"wordcount":2104},{"author":null,"categories":null,"content":null,"date":1601251200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1601251200,"objectID":"","permalink":"https://qnxr.xyz/tags/goland/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/goland/","section":"tags","summary":"","tags":null,"title":"goland","type":"tags","url":"/tags/goland/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1601251200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1601251200,"objectID":"","permalink":"https://qnxr.xyz/tags/golang/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/golang/","section":"tags","summary":"","tags":null,"title":"golang","type":"tags","url":"/tags/golang/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1601251200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1601251200,"objectID":"","permalink":"https://qnxr.xyz/tags/vscode/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/vscode/","section":"tags","summary":"","tags":null,"title":"vscode","type":"tags","url":"/tags/vscode/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1601251200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":["vscode","goland","ssh","调试","goland"],"kind":"page","lang":"en","lastmod":1601251200,"objectID":"be534081ff6ad41f52a73b325d6afda1","permalink":"https://qnxr.xyz/post/use-vscode-remote-dev-debug/","publishdate":"2020-09-28T00:00:00Z","readingtime":6,"relpermalink":"/post/use-vscode-remote-dev-debug/","section":"post","summary":"\u003cp\u003e对于大型的 Golang 项目往往我都会使用 Goland 这样的专业 IDE，但是由于我本地开发环境硬件资源偏低，不能很顺畅的使用 Goland，这个时候我们就可以使用 VSCode 来代替 Goland，另外 VSCode 同样还支持远程开发，所以我索性将开发环境放在远程机器上，然后用 VSCode 远程开发模式进行连接，最主要的是大部分我们的项目都是直接跑在 Linux 上面的，这个时候我们就可以直接在 VSCode 中运行 Linux 环境下面的应用，而且我们还可以很好地进行调试。\u003c/p\u003e","tags":["vscode","goland","golang"],"title":"真香！使用 VSCode 远程开发调试","type":"post","url":"/post/use-vscode-remote-dev-debug/","weight":0,"wordcount":2641},{"author":null,"categories":null,"content":null,"date":1600819200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":["Kustomize","kubernetes","Helm"],"kind":"page","lang":"en","lastmod":1600819200,"objectID":"f781c27329ceba1067a505bcbd8e7f11","permalink":"https://qnxr.xyz/post/use-kustomize-custom-helm-charts/","publishdate":"2020-09-23T00:00:00Z","readingtime":4,"relpermalink":"/post/use-kustomize-custom-helm-charts/","section":"post","summary":"\u003cp\u003e如果你经常使用 Kubernetes，那么应该对 Helm 和 Kustomize 不陌生，这两个工具都是用来管理 Kubernetes 的资源清单的，但是二者有着不同的工作方式。\u003c/p\u003e\n\u003cp\u003eHelm 使用的是模板，一个 Helm Chart 包中包含了很多模板和值文件，当被渲染时模板中的变量会使用值文件中对应的值替换。而 Kustomize 使用的是一种无模板的方式，它对 YAML 文件进行修补和合并操作，此外 Kustomize 也已经被原生内置到 kubectl 中了。这两个工具在 Kubernetes 的生态系统中都被广泛使用，而且这两个工具也可以一起结合使用。\u003c/p\u003e","tags":["kubernetes","Kustomize","Helm"],"title":"使用 Kustomize 定制 Helm Charts","type":"post","url":"/post/use-kustomize-custom-helm-charts/","weight":0,"wordcount":1687},{"author":null,"categories":null,"content":null,"date":1598400000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1598400000,"objectID":"","permalink":"https://qnxr.xyz/tags/kubeadm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kubeadm/","section":"tags","summary":"","tags":null,"title":"kubeadm","type":"tags","url":"/tags/kubeadm/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1598400000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2400,"html":null,"keywords":["kubernetes","kubeadm","证书","10年","有效期"],"kind":"page","lang":"en","lastmod":1598400000,"objectID":"aa0d9bbc0e1cbfdc2c133d329569cc83","permalink":"https://qnxr.xyz/post/update-k8s-10y-expire-certs/","publishdate":"2020-08-26T00:00:00Z","readingtime":5,"relpermalink":"/post/update-k8s-10y-expire-certs/","section":"post","summary":"\u003cp\u003e使用 kubeadm 安装 kubernetes 集群非常方便，但是也有一个比较烦人的问题就是默认的证书有效期只有一年时间，所以需要考虑证书升级的问题，本文的演示集群版本为 v1.16.2 版本，不保证下面的操作对其他版本也适用，\u003cstrong\u003e在操作之前一定要先对证书目录进行备份，防止操作错误进行回滚\u003c/strong\u003e。本文主要介绍两种方式来更新集群证书。\u003c/p\u003e","tags":["kubernetes","kubeadm","证书"],"title":"更新一个10年有效期的 Kubernetes 证书","type":"post","url":"/post/update-k8s-10y-expire-certs/","weight":0,"wordcount":2386},{"author":null,"categories":null,"content":null,"date":1598400000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1598400000,"objectID":"","permalink":"https://qnxr.xyz/tags/%E8%AF%81%E4%B9%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AF%81%E4%B9%A6/","section":"tags","summary":"","tags":null,"title":"证书","type":"tags","url":"/tags/%E8%AF%81%E4%B9%A6/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1597795200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1597795200,"objectID":"","permalink":"https://qnxr.xyz/tags/grafana/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/grafana/","section":"tags","summary":"","tags":null,"title":"grafana","type":"tags","url":"/tags/grafana/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1597795200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":9400,"html":null,"keywords":["kubernetes","Loki","Grafana","日志"],"kind":"page","lang":"en","lastmod":1597795200,"objectID":"9ca1399fbca0b8cedb72b2bae4aee22b","permalink":"https://qnxr.xyz/post/grafana-loki-usage/","publishdate":"2020-08-19T00:00:00Z","readingtime":19,"relpermalink":"/post/grafana-loki-usage/","section":"post","summary":"\u003cp\u003eLoki 是 Grafana Labs 团队最新的开源项目，是一个水平可扩展，高可用性，多租户的日志聚合系统。它的设计非常经济高效且易于操作，因为它不会为日志内容编制索引，而是为每个日志流配置一组标签。项目受 Prometheus 启发，官方的介绍就是：\u003ccode\u003eLike Prometheus, but for logs\u003c/code\u003e，类似于 Prometheus 的日志系统。\u003c/p\u003e","tags":["kubernetes","Loki","grafana"],"title":"Grafana Loki 简明教程","type":"post","url":"/post/grafana-loki-usage/","weight":0,"wordcount":9397},{"author":null,"categories":null,"content":null,"date":1597795200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1597795200,"objectID":"","permalink":"https://qnxr.xyz/tags/loki/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/loki/","section":"tags","summary":"","tags":null,"title":"loki","type":"tags","url":"/tags/loki/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594771200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1594771200,"objectID":"","permalink":"https://qnxr.xyz/tags/argo/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/argo/","section":"tags","summary":"","tags":null,"title":"Argo","type":"tags","url":"/tags/argo/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594771200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1594771200,"objectID":"","permalink":"https://qnxr.xyz/tags/devops/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/devops/","section":"tags","summary":"","tags":null,"title":"devops","type":"tags","url":"/tags/devops/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594771200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1594771200,"objectID":"","permalink":"https://qnxr.xyz/tags/gitlab/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gitlab/","section":"tags","summary":"","tags":null,"title":"gitlab","type":"tags","url":"/tags/gitlab/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594771200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1594771200,"objectID":"","permalink":"https://qnxr.xyz/tags/gitops/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gitops/","section":"tags","summary":"","tags":null,"title":"gitops","type":"tags","url":"/tags/gitops/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594771200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3300,"html":null,"keywords":["argo","kubernetes","gitops"],"kind":"page","lang":"en","lastmod":1594771200,"objectID":"5bb1cd6d9a0983b15103ff766b47efe3","permalink":"https://qnxr.xyz/post/gitlab-ci-argo-cd-gitops/","publishdate":"2020-07-15T00:00:00Z","readingtime":7,"relpermalink":"/post/gitlab-ci-argo-cd-gitops/","section":"post","summary":"\u003cp\u003e在现在的云原生世界里面 GitOps 不断的被提及，这种持续交付的模式越来越受到了大家的青睐，我们前面也有文章详细讲解了 GitOps 的相关概念，在网上也可以找到很多关于它的资源，但是关于 GitOps 相关的工作流实践的示例却并不多见，我们这里就将详细介绍一个使用示例，希望对大家实践 GitOps 有所帮助。\u003c/p\u003e","tags":["argo","gitlab","gitops","devops"],"title":"使用 GitLab CI 与 Argo CD 进行 GitOps 实践","type":"post","url":"/post/gitlab-ci-argo-cd-gitops/","weight":0,"wordcount":3242},{"author":null,"categories":null,"content":null,"date":1594252800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1594252800,"objectID":"","permalink":"https://qnxr.xyz/tags/apm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/apm/","section":"tags","summary":"","tags":null,"title":"APM","type":"tags","url":"/tags/apm/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594252800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1594252800,"objectID":"","permalink":"https://qnxr.xyz/tags/elastic/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/elastic/","section":"tags","summary":"","tags":null,"title":"elastic","type":"tags","url":"/tags/elastic/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594252800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1594252800,"objectID":"","permalink":"https://qnxr.xyz/tags/filebeat/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/filebeat/","section":"tags","summary":"","tags":null,"title":"filebeat","type":"tags","url":"/tags/filebeat/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594252800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1594252800,"objectID":"","permalink":"https://qnxr.xyz/tags/kibana/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kibana/","section":"tags","summary":"","tags":null,"title":"kibana","type":"tags","url":"/tags/kibana/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594252800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1594252800,"objectID":"","permalink":"https://qnxr.xyz/tags/metricbeat/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/metricbeat/","section":"tags","summary":"","tags":null,"title":"metricbeat","type":"tags","url":"/tags/metricbeat/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594252800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1594252800,"objectID":"","permalink":"https://qnxr.xyz/tags/opentracing/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/opentracing/","section":"tags","summary":"","tags":null,"title":"OpenTracing","type":"tags","url":"/tags/opentracing/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1594252800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3500,"html":null,"keywords":["elastic","kubernetes"],"kind":"page","lang":"en","lastmod":1594252800,"objectID":"2d0c2d3ffa6eb649fd11691cfa83d594","permalink":"https://qnxr.xyz/post/k8s-monitor-use-elastic-stack-1/","publishdate":"2020-07-09T00:00:00Z","readingtime":7,"relpermalink":"/post/k8s-monitor-use-elastic-stack-1/","section":"post","summary":"\u003cp\u003e在本系列文章中，我们将学习如何使用 Elastic 技术栈来为 Kubernetes 构建监控环境。可观测性的目标是为生产环境提供运维工具来检测服务不可用的情况（比如服务宕机、错误或者响应变慢等），并且保留一些可以排查的信息，以帮助我们定位问题。总的来说主要包括3个方面：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e监控指标提供系统各个组件的时间序列数据，比如 CPU、内存、磁盘、网络等信息，通常可以用来显示系统的整体状况以及检测某个时间的异常行为\u003c/li\u003e\n\u003cli\u003e日志为运维人员提供了一个数据来分析系统的一些错误行为，通常将系统、服务和应用的日志集中收集在同一个数据库中\u003c/li\u003e\n\u003cli\u003e追踪或者 APM（应用性能监控）提供了一个更加详细的应用视图，可以将服务执行的每一个请求和步骤都记录下来（比如 HTTP 调用、数据库查询等），通过追踪这些数据，我们可以检测到服务的性能，并相应地改进或修复我们的系统。\u003c/li\u003e\n\u003c/ul\u003e","tags":["elastic","kubernetes","kibana"],"title":"使用 Elastic 技术栈构建 K8S 全栈监控(1/4)","type":"post","url":"/post/k8s-monitor-use-elastic-stack-1/","weight":0,"wordcount":3487},{"author":null,"categories":null,"content":null,"date":1594252800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":["elastic","kubernetes"],"kind":"page","lang":"en","lastmod":1594252800,"objectID":"9f6b8ecc97b37ca4aeb625e6474b8aee","permalink":"https://qnxr.xyz/post/k8s-monitor-use-elastic-stack-2/","publishdate":"2020-07-09T00:00:00Z","readingtime":4,"relpermalink":"/post/k8s-monitor-use-elastic-stack-2/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/k8s-monitor-use-elastic-stack-1/\"\u003e前面文章我们已经安装配置了 ElasticSearch 的集群\u003c/a\u003e，本文我们将来使用 Metricbeat 对 Kubernetes 集群进行监控。Metricbeat 是一个服务器上的轻量级采集器，用于定期收集主机和服务的监控指标。这也是我们构建 Kubernetes 全栈监控的第一个部分。\u003c/p\u003e\n\u003cp\u003eMetribeat 默认采集系统的指标，但是也包含了大量的其他模块来采集有关服务的指标，比如 Nginx、Kafka、MySQL、Redis 等等，支持的完整模块可以在 Elastic 官方网站上查看到 \u003ca href=\"https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-modules.html\"\u003ehttps://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-modules.html\u003c/a\u003e。\u003c/p\u003e","tags":["elastic","kubernetes","metricbeat"],"title":"使用 Elastic 技术栈构建 K8S 全栈监控(2/4)","type":"post","url":"/post/k8s-monitor-use-elastic-stack-2/","weight":0,"wordcount":1963},{"author":null,"categories":null,"content":null,"date":1594252800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":["elastic","kubernetes","filebeat"],"kind":"page","lang":"en","lastmod":1594252800,"objectID":"5494d28549d76dfaacd44b2f42d9f242","permalink":"https://qnxr.xyz/post/k8s-monitor-use-elastic-stack-3/","publishdate":"2020-07-09T00:00:00Z","readingtime":3,"relpermalink":"/post/k8s-monitor-use-elastic-stack-3/","section":"post","summary":"\u003cp\u003e在本节中我们将要安装配置 \u003ca href=\"https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-overview.html\"\u003eFilebeat\u003c/a\u003e 来收集 Kubernetes 集群中的日志数据，然后发送到 ElasticSearch 去中，Filebeat 是一个轻量级的日志采集代理，还可以配置特定的\u003ca href=\"https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-modules.html\"\u003e模块\u003c/a\u003e来解析和可视化应用（比如数据库、Nginx 等）的日志格式。\u003c/p\u003e","tags":["elastic","kubernetes","filebeat"],"title":"使用 Elastic 技术栈构建 K8S 全栈监控(3/4)","type":"post","url":"/post/k8s-monitor-use-elastic-stack-3/","weight":0,"wordcount":1161},{"author":null,"categories":null,"content":null,"date":1594252800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":["elastic","kubernetes"],"kind":"page","lang":"en","lastmod":1594252800,"objectID":"ab787548aa89ebc4161b5c9913e1dc9d","permalink":"https://qnxr.xyz/post/k8s-monitor-use-elastic-stack-4/","publishdate":"2020-07-09T00:00:00Z","readingtime":3,"relpermalink":"/post/k8s-monitor-use-elastic-stack-4/","section":"post","summary":"\u003cp\u003e\u003cstrong\u003eElastic APM\u003c/strong\u003e 是 Elastic Stack 上用于应用性能监控的工具，它允许我们通过收集传入请求、数据库查询、缓存调用等方式来实时监控应用性能。这可以让我们更加轻松快速定位性能问题。\u003c/p\u003e\n\u003cp\u003eElastic APM 是兼容 OpenTracing 的，所以我们可以使用大量现有的库来跟踪应用程序性能。\u003c/p\u003e","tags":["elastic","kubernetes","APM","OpenTracing"],"title":"使用 Elastic 技术栈构建 K8S 全栈监控(4/4)","type":"post","url":"/post/k8s-monitor-use-elastic-stack-4/","weight":0,"wordcount":1163},{"author":null,"categories":null,"content":null,"date":1593388800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1593388800,"objectID":"","permalink":"https://qnxr.xyz/tags/prometheus/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/prometheus/","section":"tags","summary":"","tags":null,"title":"prometheus","type":"tags","url":"/tags/prometheus/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1593388800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":["kubernetes","prometheus","监控","token","secret"],"kind":"page","lang":"en","lastmod":1593388800,"objectID":"28dce6261fa1d5c6e835dcb095f248c0","permalink":"https://qnxr.xyz/post/monitor-external-k8s-on-prometheus/","publishdate":"2020-06-29T00:00:00Z","readingtime":3,"relpermalink":"/post/monitor-external-k8s-on-prometheus/","section":"post","summary":"\u003cp\u003e前面我们的文章中都是将 Prometheus 安装在 Kubernetes 集群中来采集数据，但是在实际环境中很多企业是将 Prometheus 单独部署在集群外部的，甚至直接监控多个 Kubernetes 集群，虽然不推荐这样去做，因为 Prometheus 采集的数据量太大，或大量消耗资源，比较推荐的做法是用不同的 Prometheus 实例监控不同的集群，然后用联邦的方式进行汇总。但是使用 Prometheus 监控外部的 Kubernetes 集群这个需求还是非常有必要的。\u003c/p\u003e","tags":["kubernetes","prometheus"],"title":"Prometheus 监控外部 Kubernetes 集群","type":"post","url":"/post/monitor-external-k8s-on-prometheus/","weight":0,"wordcount":1101},{"author":null,"categories":null,"content":null,"date":1592611200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1592611200,"objectID":"","permalink":"https://qnxr.xyz/tags/ops/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ops/","section":"tags","summary":"","tags":null,"title":"ops","type":"tags","url":"/tags/ops/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1592611200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1592611200,"objectID":"","permalink":"https://qnxr.xyz/tags/sealed/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/sealed/","section":"tags","summary":"","tags":null,"title":"sealed","type":"tags","url":"/tags/sealed/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1592611200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1592611200,"objectID":"","permalink":"https://qnxr.xyz/tags/secrets/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/secrets/","section":"tags","summary":"","tags":null,"title":"secrets","type":"tags","url":"/tags/secrets/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1592611200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3400,"html":null,"keywords":["kubernetes","sealed","secrets","ops","gitops","加密"],"kind":"page","lang":"en","lastmod":1592611200,"objectID":"4c065c45f5460015cc3d09b95743d6ca","permalink":"https://qnxr.xyz/post/encrypt-k8s-secrets-with-sealed-secrets/","publishdate":"2020-06-20T00:00:00Z","readingtime":7,"relpermalink":"/post/encrypt-k8s-secrets-with-sealed-secrets/","section":"post","summary":"\u003cp\u003e前面我们和大家提到过 GitOps 的实践，我们知道 GitOps 是提倡通过 Git 来管理所有的配置，通过声明式代码来对环境配置和基础设施进行版本管理。\u003c/p\u003e\n\u003cp\u003e在 Kubernetes 中我们知道可以使用资源清单文件来管理集群中的一资源对象，但是讲 Kubernetes 的 Secrets 数据存储在 Git 仓库中还是非常不妥的，毕竟也是非常不安全的。\u003c/p\u003e\n\u003cp\u003eKubernetes Secrets 是用来帮助我们存储敏感信息的资源对象，比如密码、密钥、证书、OAuth Token、SSH KEY 等等。管理员可以通过创建 Secrets 对象，然后开发人员就可以在资源清单文件中非常方便的引用 Secrets 对象，而不用直接将这些敏感信息硬编码。\u003c/p\u003e\n\u003cp\u003e虽然这看上去非常方便，但是有 Secrets 的问题是它们只是简单的将这些敏感信息做了一次 base64 编码而已，任何人都可以非常容易对其进行解密获得原始的数据。所以我们说 Secrets 清单文件不能直接存储在 Git 源码仓库中，但是如果每次都去手工创建的话，这又使得我们的 GitOps 不是很流畅了。\u003c/p\u003e\n\u003cp\u003e为此 Bitnami Labs 创建了一个名为 \u003ca href=\"https://github.com/bitnami-labs/sealed-secrets\"\u003eSealed Secrets\u003c/a\u003e 的开源工具来解决这个问题。\u003c/p\u003e","tags":["kubernetes","sealed","secrets","ops"],"title":"使用 Sealed Secrets 加密 Kubernetes Secrets","type":"post","url":"/post/encrypt-k8s-secrets-with-sealed-secrets/","weight":0,"wordcount":3345},{"author":null,"categories":null,"content":null,"date":1592092800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":["kubernetes","pv","pvc","status","状态变化"],"kind":"page","lang":"en","lastmod":1592092800,"objectID":"3b0c30720a521be9dffec94cd357f3ca","permalink":"https://qnxr.xyz/post/status-in-pv-pvc/","publishdate":"2020-06-14T00:00:00Z","readingtime":3,"relpermalink":"/post/status-in-pv-pvc/","section":"post","summary":"\u003cp\u003e我们对 PV 和 PVC 的几种状态应该不算陌生，但是在使用过程中可能也会产生一些疑问，比如为什么 PV 变成 Failed 状态了，新创建的 PVC 如何能够绑定之前的 PV，我可以恢复之前的 PV 吗？这里我们就来对 PV 和 PVC 中的几种状态变化再次进行说明。\u003c/p\u003e","tags":["kubernetes","pv","pvc"],"title":"Kubernetes 中 PV 和 PVC 的状态变化","type":"post","url":"/post/status-in-pv-pvc/","weight":0,"wordcount":1486},{"author":null,"categories":null,"content":null,"date":1592092800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1592092800,"objectID":"","permalink":"https://qnxr.xyz/tags/pv/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pv/","section":"tags","summary":"","tags":null,"title":"pv","type":"tags","url":"/tags/pv/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1592092800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1592092800,"objectID":"","permalink":"https://qnxr.xyz/tags/pvc/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pvc/","section":"tags","summary":"","tags":null,"title":"pvc","type":"tags","url":"/tags/pvc/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1591920000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1591920000,"objectID":"","permalink":"https://qnxr.xyz/tags/wsl/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/wsl/","section":"tags","summary":"","tags":null,"title":"wsl","type":"tags","url":"/tags/wsl/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1591920000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4300,"html":null,"keywords":["kubernetes","windows","wsl","kind","cgroup"],"kind":"page","lang":"en","lastmod":1591920000,"objectID":"c09a64fb03b10887e7036e15bfac31b4","permalink":"https://qnxr.xyz/post/k8s-in-k8s/","publishdate":"2020-06-12T00:00:00Z","readingtime":9,"relpermalink":"/post/k8s-in-k8s/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/deploy-k8s-on-win-use-wsl2/\"\u003e前面其实我们在 Windows 系统的 WSL2 下面使用 KinD 搭建了一套 Kubernetes 集群\u003c/a\u003e，KinD 是一个非常轻量级的 Kubernetes 安装工具，他将 Docker 容器当成 Kubernetes 的节点，使用非常方便。既然在 Docker 容器中可以运行 Kubernetes 集群，那么我们自然就会想到是否可以在 Pod 中来运行呢？在 Pod 中运行会遇到哪些问题呢？\u003c/p\u003e","tags":["kubernetes","wsl","kind","docker"],"title":"在 Kubernetes 中运行 Kubernetes","type":"post","url":"/post/k8s-in-k8s/","weight":0,"wordcount":4213},{"author":null,"categories":null,"content":null,"date":1591747200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3100,"html":null,"keywords":["kubernetes","windows","wsl","kind","minikube"],"kind":"page","lang":"en","lastmod":1591747200,"objectID":"66e364206f0a572c48c30e43ad89b383","permalink":"https://qnxr.xyz/post/deploy-k8s-on-win-use-wsl2/","publishdate":"2020-06-10T00:00:00Z","readingtime":7,"relpermalink":"/post/deploy-k8s-on-win-use-wsl2/","section":"post","summary":"\u003cp\u003e本文我们将介绍如何在 Windows10 下使用 WSL2 和 KinD 来搭建一套 Kubernetes 集群。在过去几年，Kubernetes 已经成为了容器编排领域事实上的标准。虽然现在已经有各种各样的 Kubernetes 发行版本和安装程序来部署 Kubernetes 环境了，除了云环境或者裸机环境下面之外，我们仍然需要在本地部署和运行 Kubernetes 集群，特别是对于相关的开发人员。\u003c/p\u003e\n\u003cp\u003e但是 Kubernetes 最开始是被设计在 Linux 环境中来部署和使用的，然而还是有不少用户平时工作还是使用的是 Windows 操作系统，为了降低 Windows 用户使用 Linux 的困难程度，微软推出了 WSL (Windows Subsystem for Linux)，该工具相当于一个运行在 Windows 下面的 Linux 子系统，这让 Windows 和 Linux 之间的环境界限变得更加不明显了，特别是 WSL2 版本推出以后，完全具有了在 WSL2 中运行 Docker 的能力了，所以现在我们几乎可以无缝地在 WSL2 上面运行 Kubernetes。\u003c/p\u003e","tags":["kubernetes","wsl","kind"],"title":"在 Windows 下使用 WSL2 搭建 Kubernetes 集群","type":"post","url":"/post/deploy-k8s-on-win-use-wsl2/","weight":0,"wordcount":3051},{"author":null,"categories":null,"content":null,"date":1591401600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1591401600,"objectID":"","permalink":"https://qnxr.xyz/tags/alertmanager/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/alertmanager/","section":"tags","summary":"","tags":null,"title":"alertmanager","type":"tags","url":"/tags/alertmanager/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1591401600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":["kubernetes","loki","prometheus","alertmanager","EFK","ELK"],"kind":"page","lang":"en","lastmod":1591401600,"objectID":"768ae729c7f84bc1cb988f3cc07cdf9e","permalink":"https://qnxr.xyz/post/use-loki-monitor-alert/","publishdate":"2020-06-06T00:00:00Z","readingtime":4,"relpermalink":"/post/use-loki-monitor-alert/","section":"post","summary":"\u003cp\u003e对于生产环境以及一个有追求的运维人员来说，哪怕是毫秒级别的宕机也是不能容忍的。对基础设施及应用进行适当的日志记录和监控非常有助于解决问题，还可以帮助优化成本和资源，以及帮助检测以后可能会发生的一些问题。前面我们介绍了使用 EFK 技术栈来收集和监控日志，本文我们将使用更加轻量级的 Grafana Loki 来实现日志的监控和报警，一般来说 Grafana Loki 包括3个主要的组件：Promtail、Loki 和 Grafana（简称 PLG），最为关键的是如果你熟悉使用 Prometheus 的话，对于 Loki 的使用也完全没问题，因为他们的使用方法基本一致的，如果是在 Kubernetes 集群中自动发现的还具有相同的 Label 标签。\u003c/p\u003e","tags":["kubernetes","loki","prometheus","alertmanager"],"title":"使用 Loki 进行日志监控和报警","type":"post","url":"/post/use-loki-monitor-alert/","weight":0,"wordcount":1998},{"author":null,"categories":null,"content":null,"date":1590710400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1590710400,"objectID":"","permalink":"https://qnxr.xyz/tags/tekton/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tekton/","section":"tags","summary":"","tags":null,"title":"tekton","type":"tags","url":"/tags/tekton/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1590710400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":["kubernetes","tekton","github","git","gitlab","流水线"],"kind":"page","lang":"en","lastmod":1590710400,"objectID":"cb4affccafea982c52ff567b19327bab","permalink":"https://qnxr.xyz/post/create-ci-pipeline-with-tekton-3/","publishdate":"2020-05-29T00:00:00Z","readingtime":5,"relpermalink":"/post/create-ci-pipeline-with-tekton-3/","section":"post","summary":"\u003cp\u003e前面我们都是通过手动创建一个 \u003ccode\u003eTaskRun\u003c/code\u003e 或者一个 \u003ccode\u003ePipelineRun\u003c/code\u003e 对象来触发任务。但是在实际的工作中更多的是开发人员提交代码过后来触发任务，这个时候就需要用到 Tekton 里面的 Triggers 了。\u003c/p\u003e\n\u003cp\u003eTriggers 同样通过下面的几个 CRD 对象对 Tekton 进行了一些扩展：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTriggerTemplate: 创建资源的模板，比如用来创建 PipelineResource 和 PipelineRun\u003c/li\u003e\n\u003cli\u003eTriggerBinding: 校验事件并提取相关字段属性\u003c/li\u003e\n\u003cli\u003eClusterTriggerBinding: 和 TriggerBinding 类似，只是是全局的\u003c/li\u003e\n\u003cli\u003eEventListener: 连接 TriggerBinding 和 TriggerTemplate 到事件接收器，使用从各个 TriggerBinding 中提取的参数来创建 TriggerTemplate 中指定的 resources，同样通过 \u003ccode\u003einterceptor\u003c/code\u003e 字段来指定外部服务对事件属性进行预处理\u003c/li\u003e\n\u003c/ul\u003e","tags":["kubernetes","tekton"],"title":"使用 Tekton 创建 CI/CD 流水线（3/4）","type":"post","url":"/post/create-ci-pipeline-with-tekton-3/","weight":0,"wordcount":2212},{"author":null,"categories":null,"content":null,"date":1590537600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":["gitops","kubernetes","k8s","helm","devops","流水线"],"kind":"page","lang":"en","lastmod":1590537600,"objectID":"7b5e60f6d5cefef9efdd70a42c247888","permalink":"https://qnxr.xyz/post/gitops-devops-on-k8s/","publishdate":"2020-05-27T00:00:00Z","readingtime":6,"relpermalink":"/post/gitops-devops-on-k8s/","section":"post","summary":"\u003cp\u003e从我们第一次听到持续交付这个词，到现在估计差不多有10年时间了吧。Humble Jez 和 Farley David 在2010年的时候，通过他们的新书《Continuous Delivery: Reliable Software Releases Through Build, Test and Deployment Automation》提出的。在过去10年中，持续交付改变了我们软件发布的方式。现在随着围绕 Kubernetes 生态系统不断演变出的一套新的工具，让我们在持续交付的旅程中实现了又一次飞跃。这些工具基本上都是围绕着 GitOps 这个概念展开的，本文将尝试来解释下 “GitOps” 的 Why? What? 以及 How?\u003c/p\u003e","tags":["gitops","kubernetes","helm","devops"],"title":"GitOps - 在 Kubernetes 中进行 DevOps 的方式","type":"post","url":"/post/gitops-devops-on-k8s/","weight":0,"wordcount":2940},{"author":null,"categories":null,"content":null,"date":1589932800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1589932800,"objectID":"","permalink":"https://qnxr.xyz/tags/jenkins/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/jenkins/","section":"tags","summary":"","tags":null,"title":"jenkins","type":"tags","url":"/tags/jenkins/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1589932800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["jenkins"],"kind":"page","lang":"en","lastmod":1589932800,"objectID":"1099945c343297bd7b5581f584cbdceb","permalink":"https://qnxr.xyz/post/jenkins-shared-library-demo/","publishdate":"2020-05-20T00:00:00Z","readingtime":3,"relpermalink":"/post/jenkins-shared-library-demo/","section":"post","summary":"\u003cp\u003e如果你经常使用 Jenkins Pipeline 一定会遇到多个不同流水线中有大量重复代码的情况，很多时候为了方便我们都是直接复制粘贴到不同的管道中去的，但是长期下去这些代码的维护就会越来越麻烦。为了解决这个问题，Jenkins 中提供了共享库的概念来解决重复代码的问题，我们只需要将公共部分提取出来，然后就可以在所有的 Pipeline 中引用这些共享库下面的代码了。\u003c/p\u003e","tags":["jenkins","shared library","共享库"],"title":"Jenkins 共享库示例","type":"post","url":"/post/jenkins-shared-library-demo/","weight":0,"wordcount":1247},{"author":null,"categories":null,"content":null,"date":1589932800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1589932800,"objectID":"","permalink":"https://qnxr.xyz/tags/shared-library/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/shared-library/","section":"tags","summary":"","tags":null,"title":"shared library","type":"tags","url":"/tags/shared-library/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1589932800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1589932800,"objectID":"","permalink":"https://qnxr.xyz/tags/%E5%85%B1%E4%BA%AB%E5%BA%93/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%85%B1%E4%BA%AB%E5%BA%93/","section":"tags","summary":"","tags":null,"title":"共享库","type":"tags","url":"/tags/%E5%85%B1%E4%BA%AB%E5%BA%93/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1589414400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1589414400,"objectID":"","permalink":"https://qnxr.xyz/tags/efk/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/efk/","section":"tags","summary":"","tags":null,"title":"efk","type":"tags","url":"/tags/efk/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1589414400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1589414400,"objectID":"","permalink":"https://qnxr.xyz/tags/elk/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/elk/","section":"tags","summary":"","tags":null,"title":"elk","type":"tags","url":"/tags/elk/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1589414400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":["kubernetes","coredns","hosts","rewrite","插件","A 记录"],"kind":"page","lang":"en","lastmod":1589414400,"objectID":"416fbaa1e9aa378f374b8c63b41df1cf","permalink":"https://qnxr.xyz/post/resolve-coredns-hosts-invalid/","publishdate":"2020-05-14T00:00:00Z","readingtime":3,"relpermalink":"/post/resolve-coredns-hosts-invalid/","section":"post","summary":"\u003cp\u003e前几天我们在解决 CoreDNS 的5秒超时问题的时候，使用了 \u003ca href=\"/post/use-nodelocal-dns-cache/\"\u003eNodeLocal DNSCache\u003c/a\u003e 来解决这个问题，集群 DNS 的解析性能也明显大幅提升了。但是今天确遇到一个很大的坑，我们在做 DevOps 实验的时候，相关的工具都使用的是自定义的域名，这个时候要互相访问的话就需要添加自定义的域名解析，我们可以通过给 Pod 添加 \u003ccode\u003ehostAlias\u003c/code\u003e 来解决，但是在使用 Jenkins 的 Kubernetes 插件的时候却不支持这个参数，需要使用 YAML 来自定义，比较麻烦，所以想着通过 CoreDNS 来添加 A 记录解决这个问题。\u003c/p\u003e","tags":["kubernetes","coredns"],"title":"解决 CoreDNS 自定义域名失效的问题","type":"post","url":"/post/resolve-coredns-hosts-invalid/","weight":0,"wordcount":1391},{"author":null,"categories":null,"content":null,"date":1589414400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["kubernetes","efk","elk","logstash","json"],"kind":"page","lang":"en","lastmod":1589414400,"objectID":"5c226e9b6f19c37af9202cf70c4e2210","permalink":"https://qnxr.xyz/post/record-log-as-json/","publishdate":"2020-05-14T00:00:00Z","readingtime":2,"relpermalink":"/post/record-log-as-json/","section":"post","summary":"\u003cp\u003e日志和监控就像 Tony Stark 和他的 Iron Man 西装一样，两者需要一起使用才能发挥最大的威力，因为它们可以很好互补。\u003c/p\u003e\n\u003cp\u003e日志一直是应用程序和基础框架性能和故障诊断的重要手段，但是现在我们已经意识到日志不仅可以用于故障诊断，还可以用于大数据分析以及业务的一些可视化和性能分析等等。\u003c/p\u003e\n\u003cp\u003e所以，记录应用程序日志是非常非常重要的。\u003c/p\u003e","tags":["kubernetes","efk","elk"],"title":"请使用 JSON 格式记录日志[译]","type":"post","url":"/post/record-log-as-json/","weight":0,"wordcount":936},{"author":null,"categories":null,"content":null,"date":1589328000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1589328000,"objectID":"","permalink":"https://qnxr.xyz/tags/okteto/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/okteto/","section":"tags","summary":"","tags":null,"title":"okteto","type":"tags","url":"/tags/okteto/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1589328000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1589328000,"objectID":"","permalink":"https://qnxr.xyz/tags/pycharm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pycharm/","section":"tags","summary":"","tags":null,"title":"pycharm","type":"tags","url":"/tags/pycharm/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1589328000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":["kubernetes","pycharm","okteto","vscode"],"kind":"page","lang":"en","lastmod":1589328000,"objectID":"abe94ce6a80a36b744e6c9982c3e14ea","permalink":"https://qnxr.xyz/post/remote-deploy-env-with-okteto/","publishdate":"2020-05-13T00:00:00Z","readingtime":4,"relpermalink":"/post/remote-deploy-env-with-okteto/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://okteto.com/\"\u003eOkteto\u003c/a\u003e 是一个通过在 Kubernetes 中来开发和测试代码的应用程序开发工具。可以通过 \u003ccode\u003eOkteto\u003c/code\u003e 在 Kubernetes 中一键为我们启动一个开发环境，非常简单方便。前面我们也介绍过 Google 推出的 \u003ca href=\"/post/skaffold-simple-local-develop-k8s-app-tools/\"\u003eSkaffold\u003c/a\u003e 工具，今天我们演示下如何使用 \u003ccode\u003eOkteto\u003c/code\u003e 来搭建 Python 应用开发环境。\u003c/p\u003e","tags":["kubernetes","pycharm","okteto"],"title":"使用 PyCharm、Okteto 和 Kubernetes 搭建远程开发环境","type":"post","url":"/post/remote-deploy-env-with-okteto/","weight":0,"wordcount":1770},{"author":null,"categories":null,"content":null,"date":1589155200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":["kubernetes","docker","devops","icepanel"],"kind":"page","lang":"en","lastmod":1589155200,"objectID":"f1efb190a305302a267af544dd6e7709","permalink":"https://qnxr.xyz/post/visualize-kubernetes-app/","publishdate":"2020-05-11T00:00:00Z","readingtime":2,"relpermalink":"/post/visualize-kubernetes-app/","section":"post","summary":"\u003cp\u003e刚刚发现一款看上去非常厉害的工具：\u003ca href=\"https://icepanel.io/\"\u003eicepanel\u003c/a\u003e，可以用来快速创建和可视化我们的 Kubernetes 微服务应用程序。使用也是非常简单，只需要安装一款 VSCODE 插件即可。\u003c/p\u003e","tags":["kubernetes","devops","微服务"],"title":"可视化创建 Kubernetes 微服务应用","type":"post","url":"/post/visualize-kubernetes-app/","weight":0,"wordcount":807},{"author":null,"categories":null,"content":null,"date":1589155200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1589155200,"objectID":"","permalink":"https://qnxr.xyz/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/","section":"tags","summary":"","tags":null,"title":"微服务","type":"tags","url":"/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1588896000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2400,"html":null,"keywords":["kubernetes","tekton","github","git","流水线"],"kind":"page","lang":"en","lastmod":1588896000,"objectID":"384b9c02526741111639efec0768b7b3","permalink":"https://qnxr.xyz/post/create-ci-pipeline-with-tekton-2/","publishdate":"2020-05-08T00:00:00Z","readingtime":5,"relpermalink":"/post/create-ci-pipeline-with-tekton-2/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/create-ci-pipeline-with-tekton-1/\"\u003e在前面文章中\u003c/a\u003e，我们在 Kubernetes 集群中安装了 Tekton，通过 Tekton 克隆 GitHub 代码仓库并执行了应用测试命令。接着前面的内容，本文我们将创建一个新的 Task 来构建一个 Docker 镜像并将其推送到 Docker Hub，最后，我们将这些任务组合成一个流水线。\u003c/p\u003e","tags":["kubernetes","tekton"],"title":"使用 Tekton 创建 CI/CD 流水线（2/4）","type":"post","url":"/post/create-ci-pipeline-with-tekton-2/","weight":0,"wordcount":2365},{"author":null,"categories":null,"content":null,"date":1588723200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":["kubernetes","tekton","github","git","流水线"],"kind":"page","lang":"en","lastmod":1588723200,"objectID":"501af02d7da7885fb6a29a5907f42073","permalink":"https://qnxr.xyz/post/create-ci-pipeline-with-tekton-1/","publishdate":"2020-05-06T00:00:00Z","readingtime":5,"relpermalink":"/post/create-ci-pipeline-with-tekton-1/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://tekton.dev/\"\u003eTekton\u003c/a\u003e 是一款功能非常强大而灵活的 CI/CD 开源的云原生框架。Tekton 的前身是 Knative 项目的 build-pipeline 项目，这个项目是为了给 build 模块增加 pipeline 的功能，但是随着不同的功能加入到 Knative build 模块中，build 模块越来越变得像一个通用的 CI/CD 系统，于是，索性将 build-pipeline 剥离出 Knative，就变成了现在的 Tekton，而 Tekton 也从此致力于提供全功能、标准化的云原生 CI/CD 解决方案。\u003c/p\u003e\n\u003cp\u003e本文将通过一个简单的示例来创建一个构建流水线，在流水线中将运行应用程序的单元测试、\u003ca href=\"/post/create-ci-pipeline-with-tekton-2/\"\u003e构建 Docker 镜像然后推送到 Docker Hub\u003c/a\u003e。\u003c/p\u003e","tags":["kubernetes","tekton"],"title":"使用 Tekton 创建 CI/CD 流水线（1/4）","type":"post","url":"/post/create-ci-pipeline-with-tekton-1/","weight":0,"wordcount":2263},{"author":null,"categories":null,"content":null,"date":1588204800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1588204800,"objectID":"","permalink":"https://qnxr.xyz/tags/dockerfile/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dockerfile/","section":"tags","summary":"","tags":null,"title":"dockerfile","type":"tags","url":"/tags/dockerfile/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1588204800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3500,"html":null,"keywords":["kubernetes","docker","Dockerfile","最佳实践"],"kind":"page","lang":"en","lastmod":1588204800,"objectID":"170354a95e4a72082c007261974e0105","permalink":"https://qnxr.xyz/post/speed-up-develop-flow-dockerfile-best-practices/","publishdate":"2020-04-30T00:00:00Z","readingtime":7,"relpermalink":"/post/speed-up-develop-flow-dockerfile-best-practices/","section":"post","summary":"\u003cp\u003eDockerfile 是创建 Docker 镜像的起点，该文件提供了一组定义良好的指令，可以让我们复制文件或文件夹，运行命令，设置环境变量以及执行创建容器镜像所需的其他任务。编写 Dockerfile 来确保生成的镜像安全、小巧、快速构建和快速更新非常重要。\u003c/p\u003e\n\u003cp\u003e本文我们将看到如何编写良好的 Dockerfile 来加快开发流程，确保构建的可重用性，并生成可放心部署到生产中的镜像。\u003c/p\u003e","tags":["kubernetes","docker","Dockerfile"],"title":"加速开发流程的 Dockerfile 最佳实践","type":"post","url":"/post/speed-up-develop-flow-dockerfile-best-practices/","weight":0,"wordcount":3469},{"author":null,"categories":null,"content":null,"date":1588032000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1588032000,"objectID":"","permalink":"https://qnxr.xyz/tags/elasticsearch/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/elasticsearch/","section":"tags","summary":"","tags":null,"title":"ElasticSearch","type":"tags","url":"/tags/elasticsearch/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1588032000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1588032000,"objectID":"","permalink":"https://qnxr.xyz/tags/fluentd/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/fluentd/","section":"tags","summary":"","tags":null,"title":"fluentd","type":"tags","url":"/tags/fluentd/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1588032000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":11700,"html":null,"keywords":["kubernetes","log","EFK","Elasticsearch","Fluentd","Kibana"],"kind":"page","lang":"en","lastmod":1588032000,"objectID":"249269344ebc64e673caabd40218b9b6","permalink":"https://qnxr.xyz/post/install-efk-stack-on-k8s/","publishdate":"2020-04-28T00:00:00Z","readingtime":24,"relpermalink":"/post/install-efk-stack-on-k8s/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/kubernetes-logs-architecture/\"\u003e上节课和大家介绍了 \u003ccode\u003eKubernetes\u003c/code\u003e 集群中的几种日志收集方案\u003c/a\u003e，Kubernetes 中比较流行的日志收集解决方案是 \u003ccode\u003eElasticsearch\u003c/code\u003e、\u003ccode\u003eFluentd\u003c/code\u003e 和 \u003ccode\u003eKibana\u003c/code\u003e（EFK）技术栈，也是官方现在比较推荐的一种方案。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eElasticsearch\u003c/code\u003e 是一个实时的、分布式的可扩展的搜索引擎，允许进行全文、结构化搜索，它通常用于索引和搜索大量日志数据，也可用于搜索许多不同类型的文档。\u003c/p\u003e\n\u003cp\u003eElasticsearch 通常与 \u003ccode\u003eKibana\u003c/code\u003e 一起部署，Kibana 是 Elasticsearch 的一个功能强大的数据可视化 Dashboard，Kibana 允许你通过 web 界面来浏览 Elasticsearch 日志数据。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eFluentd\u003c/code\u003e是一个流行的开源数据收集器，我们将在 Kubernetes 集群节点上安装 Fluentd，通过获取容器日志文件、过滤和转换日志数据，然后将数据传递到 Elasticsearch 集群，在该集群中对其进行索引和存储。\u003c/p\u003e","tags":["kubernetes","EFK","Elasticsearch","Fluentd","Kibana"],"title":"在 Kubernetes 上搭建 EFK 日志收集系统[更新]","type":"post","url":"/post/install-efk-stack-on-k8s/","weight":0,"wordcount":11680},{"author":null,"categories":null,"content":null,"date":1587686400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1587686400,"objectID":"","permalink":"https://qnxr.xyz/tags/cdk8s/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cdk8s/","section":"tags","summary":"","tags":null,"title":"cdk8s","type":"tags","url":"/tags/cdk8s/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1587686400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1587686400,"objectID":"","permalink":"https://qnxr.xyz/tags/python/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/python/","section":"tags","summary":"","tags":null,"title":"python","type":"tags","url":"/tags/python/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1587686400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":["kubernetes","cdk8s","helm","kustomize","python","typescript"],"kind":"page","lang":"en","lastmod":1587686400,"objectID":"beb48601e328f0bce87df985a044af99","permalink":"https://qnxr.xyz/post/use-cdk8s-define-k8s-apps/","publishdate":"2020-04-24T00:00:00Z","readingtime":5,"relpermalink":"/post/use-cdk8s-define-k8s-apps/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://github.com/awslabs/cdk8s\"\u003ecdk8s\u003c/a\u003e 是 AWS Labs 发布的一个使用 TypeScript 编写的新框架，它允许我们使用一些面向对象的编程语言来定义 Kubernetes 的资源清单，cdk8s 最终也是生成原生的 Kubernetes YAML 文件，所以我们可以在任何地方使用 cdk8s 来定义运行的 Kubernetes 应用资源。\u003c/p\u003e","tags":["kubernetes","cdk8s","python","helm"],"title":"使用编程语言描述 Kubernetes 应用 - cdk8s","type":"post","url":"/post/use-cdk8s-define-k8s-apps/","weight":0,"wordcount":2130},{"author":null,"categories":null,"content":null,"date":1587600000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":["kubernetes","coredns","NodeLocal","DNSCache"],"kind":"page","lang":"en","lastmod":1587600000,"objectID":"f68ef03bd48d96d145299c7809c71da9","permalink":"https://qnxr.xyz/post/use-nodelocal-dns-cache/","publishdate":"2020-04-23T00:00:00Z","readingtime":3,"relpermalink":"/post/use-nodelocal-dns-cache/","section":"post","summary":"\u003cp\u003e之前在解决 CoreDNS 的5秒超时问题的时候，除了通过 \u003ccode\u003ednsConfig\u003c/code\u003e 去强制使用 tcp 方式解析之外，我们提到过使用 \u003ccode\u003eNodeLocal DNSCache\u003c/code\u003e 来解决这个问题。\u003ccode\u003eNodeLocal DNSCache\u003c/code\u003e 通过在集群节点上运行一个 DaemonSet 来提高 clusterDNS 性能和可靠性。处于 \u003ccode\u003eClusterFirst\u003c/code\u003e 的 DNS 模式下的 Pod 可以连接到 \u003ccode\u003ekube-dns\u003c/code\u003e 的 serviceIP 进行 DNS 查询。通过 \u003ccode\u003ekube-proxy\u003c/code\u003e 组件添加的 \u003ccode\u003eiptables\u003c/code\u003e 规则将其转换为 \u003ccode\u003eCoreDNS\u003c/code\u003e 端点。通过在每个集群节点上运行 DNS 缓存，NodeLocal DNSCache 可以缩短 DNS 查找的延迟时间、使 DNS 查找时间更加一致，以及减少发送到 kube-dns 的 DNS 查询次数。\u003c/p\u003e","tags":["kubernetes","coredns"],"title":"在 Kubernetes 集群中使用 NodeLocal DNSCache","type":"post","url":"/post/use-nodelocal-dns-cache/","weight":0,"wordcount":1429},{"author":null,"categories":null,"content":null,"date":1586217600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1586217600,"objectID":"","permalink":"https://qnxr.xyz/tags/hpa/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/hpa/","section":"tags","summary":"","tags":null,"title":"hpa","type":"tags","url":"/tags/hpa/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1586217600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":8000,"html":null,"keywords":["kubernetes","hpa","prometheus","cpu","内存","自定义"],"kind":"page","lang":"en","lastmod":1586217600,"objectID":"51356c0b0b475a5be7259df049fea25f","permalink":"https://qnxr.xyz/post/k8s-hpa-usage/","publishdate":"2020-04-07T00:00:00Z","readingtime":16,"relpermalink":"/post/k8s-hpa-usage/","section":"post","summary":"\u003cp\u003e在前面的学习中我们使用用一个 \u003ccode\u003ekubectl scale\u003c/code\u003e 命令可以来实现 Pod 的扩缩容功能，但是这个毕竟是完全手动操作的，要应对线上的各种复杂情况，我们需要能够做到自动化去感知业务，来自动进行扩缩容。为此，Kubernetes 也为我们提供了这样的一个资源对象：\u003ccode\u003eHorizontal Pod Autoscaling（Pod 水平自动伸缩）\u003c/code\u003e，简称\u003ccode\u003eHPA\u003c/code\u003e，HPA 通过监控分析一些控制器控制的所有 Pod 的负载变化情况来确定是否需要调整 Pod 的副本数量，这是 HPA 最基本的原理：\u003c/p\u003e\n\u003cp\u003e\n  \u003cimg src=\"https://www.qikqiak.com/k8strain/assets/img/controller/horizontal-pod-autoscaler.svg\" alt=\"HPA\"\u003e\n\n\u003c/p\u003e\n\u003cp\u003e我们可以简单的通过 \u003ccode\u003ekubectl autoscale\u003c/code\u003e 命令来创建一个 HPA 资源对象，\u003ccode\u003eHPA Controller\u003c/code\u003e默认\u003ccode\u003e30s\u003c/code\u003e轮询一次（可通过 \u003ccode\u003ekube-controller-manager\u003c/code\u003e 的\u003ccode\u003e--horizontal-pod-autoscaler-sync-period\u003c/code\u003e 参数进行设置），查询指定的资源中的 Pod 资源使用率，并且与创建时设定的值和指标做对比，从而实现自动伸缩的功能。\u003c/p\u003e","tags":["kubernetes","hpa","prometheus"],"title":"Kubernetes HPA 使用详解","type":"post","url":"/post/k8s-hpa-usage/","weight":0,"wordcount":7938},{"author":null,"categories":null,"content":null,"date":1585872000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1585872000,"objectID":"","permalink":"https://qnxr.xyz/tags/envoy/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/envoy/","section":"tags","summary":"","tags":null,"title":"envoy","type":"tags","url":"/tags/envoy/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1585872000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":["envoy","kubernetes"],"kind":"page","lang":"en","lastmod":1585872000,"objectID":"46596961a79b1580758efb1d1b524195","permalink":"https://qnxr.xyz/post/envoy-usage-demo/","publishdate":"2020-04-03T00:00:00Z","readingtime":4,"relpermalink":"/post/envoy-usage-demo/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://www.envoyproxy.io/\"\u003eEnvoy\u003c/a\u003e 是为云原生应用而设计的开源边缘和服务代理，也是 Istio Service Mesh 默认的数据平面，本文我们通过一个简单的示例来介绍 Envoy 的基本使用。\u003c/p\u003e","tags":["envoy","kubernetes","istio"],"title":"Envoy 简单入门示例","type":"post","url":"/post/envoy-usage-demo/","weight":0,"wordcount":1735},{"author":null,"categories":null,"content":null,"date":1585872000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1585872000,"objectID":"","permalink":"https://qnxr.xyz/tags/istio/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/istio/","section":"tags","summary":"","tags":null,"title":"Istio","type":"tags","url":"/tags/istio/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1585526400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1585526400,"objectID":"","permalink":"https://qnxr.xyz/tags/ingress-nginx/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ingress-nginx/","section":"tags","summary":"","tags":null,"title":"ingress-nginx","type":"tags","url":"/tags/ingress-nginx/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1585526400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":["ingress","nginx","kubernetes"],"kind":"page","lang":"en","lastmod":1585526400,"objectID":"5560ba23ab564fd077b4e108bb70e172","permalink":"https://qnxr.xyz/post/ingress-nginx-how-to-work/","publishdate":"2020-03-30T00:00:00Z","readingtime":4,"relpermalink":"/post/ingress-nginx-how-to-work/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/ingress-nginx-how-to-work/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200331110423.png\" alt=\"ingress-nginx 控制器工作原理\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e本文的目的是解释 Nginx Ingress 控制器的工作原理，特别是 Nginx 模型的构建方式以及我们为何需要这个模型。\u003c/p\u003e","tags":["ingress","ingress-nginx","kubernetes","nginx"],"title":"ingress-nginx 控制器工作原理[译]","type":"post","url":"/post/ingress-nginx-how-to-work/","weight":0,"wordcount":1812},{"author":null,"categories":null,"content":null,"date":1585526400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1585526400,"objectID":"","permalink":"https://qnxr.xyz/tags/nginx/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nginx/","section":"tags","summary":"","tags":null,"title":"nginx","type":"tags","url":"/tags/nginx/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1585267200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1585267200,"objectID":"","permalink":"https://qnxr.xyz/tags/operator/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/operator/","section":"tags","summary":"","tags":null,"title":"operator","type":"tags","url":"/tags/operator/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1585267200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["kubernetes","prometheus","grafana","dashboard","crd","operator"],"kind":"page","lang":"en","lastmod":1585267200,"objectID":"8f7461588a228ea3f86ede94dc0fbe48","permalink":"https://qnxr.xyz/post/use-crd-create-grafana-dashboard/","publishdate":"2020-03-27T00:00:00Z","readingtime":3,"relpermalink":"/post/use-crd-create-grafana-dashboard/","section":"post","summary":"\u003cp\u003e我们在使用 Grafana Dashboard 来展示我们的监控图表的时候，很多时候我们都是去找别人已经做好的 Dashboard 拿过来改一改，但是这样也造成了很多使用 Grafana 的人员压根不知道如何去自定义一个 Dashboard，虽然这并不是很困难。这里我们介绍一个比较新颖（骚）的工具：\u003ca href=\"https://github.com/K-Phoen/dark\"\u003eDARK\u003c/a\u003e，全称 \u003ccode\u003eDashboards As Resources in Kubernetes.\u003c/code\u003e，意思就是通过 Kubernetes 的资源对象来定义 Grafana Dashboard，实现原理也很简单，也就是通过 CRD 来定义 Dashboard，然后通过和 Grafana 的 API Token 进行交互实现 Dashboard 的 CRUD。\u003c/p\u003e","tags":["kubernetes","prometheus","grafana","operator"],"title":"用 Kubernetes 资源对象创建 Grafana Dashboard","type":"post","url":"/post/use-crd-create-grafana-dashboard/","weight":0,"wordcount":1282},{"author":null,"categories":null,"content":null,"date":1585180800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":["kubernetes","prometheus","alertmanager","报警"],"kind":"page","lang":"en","lastmod":1585180800,"objectID":"2386c58b9287dbb567841d2725e13b0f","permalink":"https://qnxr.xyz/post/alertmanager-when-alert/","publishdate":"2020-03-26T00:00:00Z","readingtime":4,"relpermalink":"/post/alertmanager-when-alert/","section":"post","summary":"\u003cp\u003e在使用 Prometheus 进行监控的时候，通过 AlertManager 来进行告警，但是有很多人对报警的相关配置比较迷糊，不太清楚具体什么时候会进行告警。下面我们来简单介绍下 AlertManager 中的几个容易混淆的参数。\u003c/p\u003e","tags":["kubernetes","prometheus","alertmanager"],"title":"AlertManager 何时报警","type":"post","url":"/post/alertmanager-when-alert/","weight":0,"wordcount":1510},{"author":null,"categories":null,"content":null,"date":1584576000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["prometheus","Kubernetes","K8S","grafana","插件","devops"],"kind":"page","lang":"en","lastmod":1584576000,"objectID":"d8e52d1fb3a6f3006bef326e0965c574","permalink":"https://qnxr.xyz/post/grafana-k8s-plugin-kubegraf/","publishdate":"2020-03-19T00:00:00Z","readingtime":3,"relpermalink":"/post/grafana-k8s-plugin-kubegraf/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://github.com/devopsprodigy/kubegraf/\"\u003eDevOpsProdigy KubeGraf\u003c/a\u003e 是一个非常优秀的 Grafana Kubernetes 插件，是 Grafana 官方的 \u003ca href=\"https://grafana.com/plugins/grafana-kubernetes-app\"\u003eKubernetes 插件\u003c/a\u003e 的升级版本，该插件可以用来可视化和分析 Kubernetes 集群的性能，通过各种图形直观的展示了 Kubernetes 集群的主要服务的指标和特征，还可以用于检查应用程序的生命周期和错误日志。\u003c/p\u003e","tags":["prometheus","kubernetes","devops","grafana"],"title":"优秀的 Grafana K8S 插件 - DevOpsProdigy KubeGraf","type":"post","url":"/post/grafana-k8s-plugin-kubegraf/","weight":0,"wordcount":1228},{"author":null,"categories":null,"content":null,"date":1584403200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":["kubernetes","helm","kafka","zookeeper","logstash","Elasticsearch","Operator"],"kind":"page","lang":"en","lastmod":1584403200,"objectID":"35dfee310dcdb93d97c5abaad3804ff6","permalink":"https://qnxr.xyz/post/install-kafka-in-kubernetes/","publishdate":"2020-03-17T00:00:00Z","readingtime":1,"relpermalink":"/post/install-kafka-in-kubernetes/","section":"post","summary":"curl -sLS https://dl.get-arkade.dev | sudo sh Password: Downloading package https://github.com/alexellis/arkade/releases/download/0.2.0/arkade-darwin as /tmp/arkade-darwin Download complete. Running with sufficient permissions to attempt to move arkade to /usr/local/bin New version of arkade installed to /usr/local/bin Creating alias \u0026lsquo;ark\u0026rsquo; for \u0026lsquo;arkade\u0026rsquo;. _ _ __ _ _ __| | ____ _ | | ___ / | '__| |/ / _ |/ ` |/ _ | (| | | | \u0026lt; (| | (| | __/","tags":["kubernetes","helm","kafka"],"title":"Kubernetes 应用简单安装","type":"post","url":"/post/install-kafka-in-kubernetes/","weight":0,"wordcount":83},{"author":null,"categories":null,"content":null,"date":1584403200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":["kubernetes","helm","kafka","zookeeper","logstash","Elasticsearch","Operator"],"kind":"page","lang":"en","lastmod":1584403200,"objectID":"2766c94954e627bf1fee4590f06c892b","permalink":"https://qnxr.xyz/post/install-kafka-in-kubernetes/","publishdate":"2020-03-17T00:00:00Z","readingtime":4,"relpermalink":"/post/install-kafka-in-kubernetes/","section":"post","summary":"\u003cp\u003e最近在测试日志采集的时候，发现日志数据量稍微大一点，Elasticsearch 就有点抗不住了，对于 ES 的优化可能不是一朝一夕能够完成的，所以打算加一个中间层，将日志输出到 Kafka，然后通过 Logstash 从 Kafka 里面去消费日志存入 Elasticsearch。在测试环境现在并没有一套 Kafka 集群，所以我们来先在测试环境搭建一套 Kafka 集群。\u003c/p\u003e","tags":["kubernetes","helm","kafka"],"title":"在 Kubernetes 集群上部署 Kafka","type":"post","url":"/post/install-kafka-in-kubernetes/","weight":0,"wordcount":1614},{"author":null,"categories":null,"content":null,"date":1584316800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1584316800,"objectID":"","permalink":"https://qnxr.xyz/tags/descheduler/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/descheduler/","section":"tags","summary":"","tags":null,"title":"descheduler","type":"tags","url":"/tags/descheduler/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1584316800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3600,"html":null,"keywords":["kubernetes","scheduler","均衡","调度","descheduler"],"kind":"page","lang":"en","lastmod":1584316800,"objectID":"682720e3df7296974fed3a9bda1c3d48","permalink":"https://qnxr.xyz/post/k8s-cluster-balancer/","publishdate":"2020-03-16T00:00:00Z","readingtime":8,"relpermalink":"/post/k8s-cluster-balancer/","section":"post","summary":"\u003cp\u003e在介绍 \u003ca href=\"/tags/kubernetes/\"\u003eKubernetes\u003c/a\u003e 集群均衡器之前我们还是非常有必要再来回顾下 \u003ccode\u003ekube-scheduler\u003c/code\u003e 组件的概念。我们知道基本上所有的分布式系统都需要一个流程或应用来调度集群中的任务来执行，同样 Kubernetes 也需要这样一个调度器来执行任务，我们熟知的 \u003ccode\u003ekube-scheduler\u003c/code\u003e 组件就是扮演这个角色的，该组件是作为 Kubernetes 整个\u003ca href=\"https://kubernetes.io/docs/reference/glossary/?all=true#term-control-plane\"\u003e控制面板\u003c/a\u003e的一部分来运行的，并监听所有未分配节点新创建的 Pod，为其选择一个最合适的节点绑定运行。\u003ccode\u003ekube-scheduler\u003c/code\u003e 是如何来选择最合适的节点的呢？\u003c/p\u003e","tags":["kubernetes","scheduler","descheduler"],"title":"Kubernetes 集群均衡器 Descheduler","type":"post","url":"/post/k8s-cluster-balancer/","weight":0,"wordcount":3517},{"author":null,"categories":null,"content":null,"date":1584316800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1584316800,"objectID":"","permalink":"https://qnxr.xyz/tags/scheduler/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/scheduler/","section":"tags","summary":"","tags":null,"title":"scheduler","type":"tags","url":"/tags/scheduler/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1583971200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1583971200,"objectID":"","permalink":"https://qnxr.xyz/tags/kui/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kui/","section":"tags","summary":"","tags":null,"title":"kui","type":"tags","url":"/tags/kui/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1583971200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":["kubernetes","terminal","终端","可视化","kui","krew"],"kind":"page","lang":"en","lastmod":1583971200,"objectID":"93af2d622ec6c47f5384e9a1395ad6c1","permalink":"https://qnxr.xyz/post/navigate-k8s-with-kui/","publishdate":"2020-03-12T00:00:00Z","readingtime":2,"relpermalink":"/post/navigate-k8s-with-kui/","section":"post","summary":"Kui 是一个带有 GUI 的命令行终端程序，本质上 Kui 是 ASCII 终端，用命令行的方式和应用进行交互，此外 Kui 还用图形方式增强了许多命令的显示方式，这里我们来介绍下","tags":["kubernetes","kui"],"title":"在命令行终端中可视化 Kubernetes","type":"post","url":"/post/navigate-k8s-with-kui/","weight":0,"wordcount":507},{"author":null,"categories":null,"content":null,"date":1583798400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1583798400,"objectID":"","permalink":"https://qnxr.xyz/tags/kubevious/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kubevious/","section":"tags","summary":"","tags":null,"title":"kubevious","type":"tags","url":"/tags/kubevious/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1583798400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":["kubernetes","kubevious","时光机","","Time Machine","Dashboard"],"kind":"page","lang":"en","lastmod":1583798400,"objectID":"3f93aa06edff706e73516d328cfa52dd","permalink":"https://qnxr.xyz/post/k8s-ui-kubevious/","publishdate":"2020-03-10T00:00:00Z","readingtime":4,"relpermalink":"/post/k8s-ui-kubevious/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://github.com/kubevious/kubevious\"\u003eKubevious\u003c/a\u003e 是一个开源的 Kubernetes Dashboard，但是和我们主流的 Dashboard 却不太一样，可以说非常有特色，他将应用程序相关得所有配置都集中在一起，这可以大大节省操作人员得时间，其实这都不是最主要的，主要的是他具有一个 \u003ccode\u003eTime Machine\u003c/code\u003e（时光机）功能，允许我们回到之前的时间去查看应用的错误信息。\u003c/p\u003e","tags":["kubernetes","kubevious"],"title":"带时光机的 Kubernetes Dashboard - Kubevious","type":"post","url":"/post/k8s-ui-kubevious/","weight":0,"wordcount":1670},{"author":null,"categories":null,"content":null,"date":1583712000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1583712000,"objectID":"","permalink":"https://qnxr.xyz/tags/cobra/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cobra/","section":"tags","summary":"","tags":null,"title":"cobra","type":"tags","url":"/tags/cobra/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1583712000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3800,"html":null,"keywords":["golang","CLI","cobra"],"kind":"page","lang":"en","lastmod":1583712000,"objectID":"e5969236932079c6bcf1afecb4ec2b32","permalink":"https://qnxr.xyz/post/create-cli-app-with-cobra/","publishdate":"2020-03-09T00:00:00Z","readingtime":8,"relpermalink":"/post/create-cli-app-with-cobra/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/create-cli-app-with-cobra/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200309153711.png\" alt=\"create CLI app with cobra\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e虽然现在我们使用的大多数软件都是可视化的，很容易上手，但是这并不代表 CLI（命令行）应用就没有用武之地了，特别是对于开发人员来说，还是会经常和 CLI 应用打交道。而 Golang 就非常适合用来构建 CLI 应用，下面我们就将来介绍如何在 Golang 中构建一个 CLI 应用。\u003c/p\u003e\n\u003cp\u003e对于开发人员来说平时可能就需要使用到很多 CLI 工具，比如 npm、node、go、python、docker、kubectl 等等，因为这些工具非常小巧、没有依赖性、非常适合系统管理或者一些自动化任务等等。\u003c/p\u003e","tags":["golang","cobra"],"title":"在 Golang 中使用 Cobra 创建 CLI 应用","type":"post","url":"/post/create-cli-app-with-cobra/","weight":0,"wordcount":3705},{"author":null,"categories":null,"content":null,"date":1583280000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1583280000,"objectID":"","permalink":"https://qnxr.xyz/tags/changelog/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/changelog/","section":"tags","summary":"","tags":null,"title":"changelog","type":"tags","url":"/tags/changelog/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1583280000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":["kubernetes","课程","视频","教程"],"kind":"page","lang":"en","lastmod":1583280000,"objectID":"32ff552abd8638d6e952c22a63e2fbfd","permalink":"https://qnxr.xyz/post/changelog/","publishdate":"2020-03-04T00:00:00Z","readingtime":2,"relpermalink":"/post/changelog/","section":"post","summary":"\u003cp\u003e近期对我们的在线学习网站 \u003ca href=\"https://youdianzhishi.com\"\u003e优点知识\u003c/a\u003e 做了一些功能更新，无论是体验还是功能都更加完善了。大家对网站有任何的建议或者反馈都可以随时交流。\u003c/p\u003e\n\u003cp\u003e1.课程目录优化\u003c/p\u003e\n\u003cp\u003e用不同的 icon 区分视频、文档、直播，并记录每节课的学习进度，用不同的 icon 标识学习状态，更加清晰明了，增加“我已掌握”工，用户可以手动标记是否已经掌握某节课，否则需要学习完本节课后才会变成已学完的状态。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://youdianzhishi.com\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200304110222.png\" alt=\"课程章节\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e2.重构个人中心\u003c/p\u003e","tags":["课程","changelog"],"title":"优点知识更新日志","type":"post","url":"/post/changelog/","weight":0,"wordcount":571},{"author":null,"categories":null,"content":null,"date":1583280000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1583280000,"objectID":"","permalink":"https://qnxr.xyz/tags/%E8%AF%BE%E7%A8%8B/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AF%BE%E7%A8%8B/","section":"tags","summary":"","tags":null,"title":"课程","type":"tags","url":"/tags/%E8%AF%BE%E7%A8%8B/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1583193600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":["kubernetes","docker","镜像"],"kind":"page","lang":"en","lastmod":1583193600,"objectID":"d3b78c3bc28e41081aae176e51bc327c","permalink":"https://qnxr.xyz/post/reduce-image-size/","publishdate":"2020-03-03T00:00:00Z","readingtime":1,"relpermalink":"/post/reduce-image-size/","section":"post","summary":"https://www.ardanlabs.com/blog/2020/02/docker-images-part1-reducing-image-size.html https://kinbiko.com/go/testing/beginners/","tags":["kubernetes","docker"],"title":"减小 Docker 镜像大小","type":"post","url":"/post/reduce-image-size/","weight":0,"wordcount":2},{"author":null,"categories":null,"content":null,"date":1583193600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":["kubernetes","docker","镜像"],"kind":"page","lang":"en","lastmod":1583193600,"objectID":"922b006d2afd7cef0f0aef7cb619f740","permalink":"https://qnxr.xyz/post/get-client-realip/","publishdate":"2020-03-03T00:00:00Z","readingtime":3,"relpermalink":"/post/get-client-realip/","section":"post","summary":"\u003cp\u003e通常，当集群内的客户端连接到服务的时候，是支持服务的 Pod 可以获取到客户端的 IP 地址的，但是，当通过节点端口接收到连接时，由于对数据包执行了源网络地址转换（SNAT），因此数据包的源 IP 地址会发生变化，后端的 Pod 无法看到实际的客户端 IP，对于某些应用来说是个问题，比如，nginx 的请求日志就无法获取准确的客户端访问 IP 了。\u003c/p\u003e","tags":["kubernetes","docker"],"title":"获取客户端访问真实 IP","type":"post","url":"/post/get-client-realip/","weight":0,"wordcount":1143},{"author":null,"categories":null,"content":null,"date":1582070400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1582070400,"objectID":"","permalink":"https://qnxr.xyz/tags/consul/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/consul/","section":"tags","summary":"","tags":null,"title":"consul","type":"tags","url":"/tags/consul/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1582070400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1582070400,"objectID":"","permalink":"https://qnxr.xyz/tags/vault/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/vault/","section":"tags","summary":"","tags":null,"title":"Vault","type":"tags","url":"/tags/vault/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1582070400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3100,"html":null,"keywords":["kubernetes","vault","consul","secret","helm","安装"],"kind":"page","lang":"en","lastmod":1582070400,"objectID":"4af73085c534b06cc397fb8c0fbbe471","permalink":"https://qnxr.xyz/post/deploy-vault-on-k8s/","publishdate":"2020-02-19T00:00:00Z","readingtime":7,"relpermalink":"/post/deploy-vault-on-k8s/","section":"post","summary":"\u003cp\u003e很多时候我们可能都是直接将应用程序的密码或者 API Token 之类的私密信息直接暴露在源代码中的，显然直接暴露这些私密信息不是一个好的方式。在 Kubernetes 系统中提供了一个 Secret 对象来存储私密的数据，但是也只是简单的做了一次 Base64 编码而已，虽然比直接暴露要好点了，但是如果是一些安全性要求非常高的应用直接用 Secret 显然也还是不够的。本文就将来介绍如何使用 \u003ca href=\"https://www.vaultproject.io/\"\u003eHashiCorp Vault\u003c/a\u003e 在 Kubernetes 集群中进行秘钥管理。\u003c/p\u003e","tags":["kubernetes","vault","consul","helm"],"title":"在 Kubernetes 上部署 Vault","type":"post","url":"/post/deploy-vault-on-k8s/","weight":0,"wordcount":3036},{"author":null,"categories":null,"content":null,"date":1581984000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1581984000,"objectID":"","permalink":"https://qnxr.xyz/tags/spinnaker/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/spinnaker/","section":"tags","summary":"","tags":null,"title":"spinnaker","type":"tags","url":"/tags/spinnaker/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1581984000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":["kubernetes","spinnaker","jenkins","ci/cd","helm","安装"],"kind":"page","lang":"en","lastmod":1581984000,"objectID":"83551cba2eb251421ed8cbca9142a2be","permalink":"https://qnxr.xyz/post/deploy-spinnaker-on-k8s/","publishdate":"2020-02-18T00:00:00Z","readingtime":4,"relpermalink":"/post/deploy-spinnaker-on-k8s/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/deploy-spinnaker-on-k8s/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/spinnaker-on-k8s.png\" alt=\"在 Kubernetes 上部署 Spinnaker\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.spinnaker.io/\"\u003eSpinnaker\u003c/a\u003e 是一种持续交付平台，最初由 Netflix 开发，用于快速、可靠地发布软件变更。Spinnaker 使开发人员可以更轻松地专注于编写代码，而无需担心底层的云基础设施，它可以和 Jenkins 以及其他流行的构建工具无缝集成。很早就想要体验下 Spinnaker 了，但是由于 GFW 的原因尝试了很多次都无功而返，这次解决了代理的问题终于顺利的在 Kubernetes 集群上成功部署上了 Spinnaker。\u003c/p\u003e","tags":["kubernetes","spinnaker","jenkins","helm"],"title":"在 Kubernetes 上部署 Spinnaker","type":"post","url":"/post/deploy-spinnaker-on-k8s/","weight":0,"wordcount":1903},{"author":null,"categories":null,"content":null,"date":1581638400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1581638400,"objectID":"","permalink":"https://qnxr.xyz/tags/cli/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cli/","section":"tags","summary":"","tags":null,"title":"cli","type":"tags","url":"/tags/cli/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1581638400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1581638400,"objectID":"","permalink":"https://qnxr.xyz/tags/github/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/github/","section":"tags","summary":"","tags":null,"title":"github","type":"tags","url":"/tags/github/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1581638400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["github","git","cli","命令行"],"kind":"page","lang":"en","lastmod":1581638400,"objectID":"d865b1a7a7aed857885deffb6044c360","permalink":"https://qnxr.xyz/post/github-cli-tool-usage/","publishdate":"2020-02-14T00:00:00Z","readingtime":3,"relpermalink":"/post/github-cli-tool-usage/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/github-cli-tool-usage/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200214152110.png\" alt=\"github cli\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGitHub 被巨软收购以后推出了一系列非常好用的开发者工具，比如前面我们使用过的 CI/CD 工具 \u003ca href=\"/post/use-github-actions-build-go-app/\"\u003eGitHub Actions\u003c/a\u003e、\u003ca href=\"https://github.com/features/packages\"\u003e包管理工具 packages\u003c/a\u003e，今天我们要为大家介绍的是近来 GitHub 发布的又一个非常有用的工具: \u003ca href=\"https://cli.github.com/\"\u003eGitHub CLI\u003c/a\u003e，可以让开发者通过命令行于 GitHub 进行无缝的协同工作，也就是我们直接在命令行终端上就可以进行 pull requests、issues 等其他功能，现在已经发布 Beta 版本，我们可以在 \u003ca href=\"https://github.com/cli/cli#installation-and-upgrading\"\u003emacOS、Windows 或者 Linux 平台\u003c/a\u003e上安装 GitHub CLI。\u003c/p\u003e","tags":["github","cli","devops"],"title":"GitHub CLI 命令行工具使用","type":"post","url":"/post/github-cli-tool-usage/","weight":0,"wordcount":1278},{"author":null,"categories":null,"content":null,"date":1581379200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3200,"html":null,"keywords":["kubernetes","rolling-update","宕机","滚动更新"],"kind":"page","lang":"en","lastmod":1581379200,"objectID":"9420d8005ae7596d70d6b6589a1e9a2c","permalink":"https://qnxr.xyz/post/zero-downtime-rolling-update-k8s/","publishdate":"2020-02-11T00:00:00Z","readingtime":7,"relpermalink":"/post/zero-downtime-rolling-update-k8s/","section":"post","summary":"\u003cp\u003e软件世界的发展比以往任何时候都快，为了保持竞争力需要尽快推出新的软件版本，而又不影响在线得用户。许多企业已将工作负载迁移到了 Kubernetes 集群，Kubernetes 集群本身就考虑到了一些生产环境的实践，但是要让 Kubernetes 实现真正的零停机不中断或丢失请求，我们还需要做一些额外的操作才行。\u003c/p\u003e","tags":["kubernetes","rolling-update"],"title":"Kubernetes 零宕机滚动更新","type":"post","url":"/post/zero-downtime-rolling-update-k8s/","weight":0,"wordcount":3144},{"author":null,"categories":null,"content":null,"date":1581379200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1581379200,"objectID":"","permalink":"https://qnxr.xyz/tags/rolling-update/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rolling-update/","section":"tags","summary":"","tags":null,"title":"rolling-update","type":"tags","url":"/tags/rolling-update/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1580774400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":["kubernetes","vscode","ide","code-server"],"kind":"page","lang":"en","lastmod":1580774400,"objectID":"c7ebdd946c06479868cb217937cb6fc4","permalink":"https://qnxr.xyz/post/deploy-vscode-on-k8s/","publishdate":"2020-02-04T00:00:00Z","readingtime":3,"relpermalink":"/post/deploy-vscode-on-k8s/","section":"post","summary":"\u003cp\u003e近来由于武汉冠状病毒疫情的扩散，很多公司不得不开始了远程办公的模式，远程办公最大的成本自然是沟通成本了，对于我们开发人员来说最重要的自然也是有一个顺手的 IDE 工具，现在在云端作业的工具也在逐渐增长，比如最近比较流行的设计应用 Figma，就完全是云端操作的方式，大有要取代 Sketch 的趋势，对于开发工具来说云端 IDE 也逐渐受到大家重视，特别是对于远程办公的团队，Cloud IDE 允许开发团队在一个统一的开发环境中实时协作的工具，这可以大大提高生产效率。而且只需要通过 web 浏览器就可以访问，还有一个优点就是可以利用集群的能力，这可以大大超过我们之前的个人 PC 的处理能力，我们也不用为本地 IDE 占用了电脑大量资源而苦恼了。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/cdr/code-server\"\u003ecode-server\u003c/a\u003e 就是一个可以运行在服务器上面直接通过浏览器来访问的 \u003ca href=\"https://code.visualstudio.com/\"\u003eVSCode\u003c/a\u003e，VSCode 是一个现代化的代码编辑器，支持 Git、代码调试器、智能代码提示以及各种定制和扩展功能。接下来我们来介绍下如何在我们的 Kubernetes 集群上运行一个 VSCode。\u003c/p\u003e","tags":["kubernetes","vscode"],"title":"在 Kubernetes 集群上部署 VSCode","type":"post","url":"/post/deploy-vscode-on-k8s/","weight":0,"wordcount":1313},{"author":null,"categories":null,"content":null,"date":1579478400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["traefik","中间件","middleware","lua"],"kind":"page","lang":"en","lastmod":1579478400,"objectID":"d44aced6990a75a06a9d431011c30251","permalink":"https://qnxr.xyz/post/custom-traefik2-middleware/","publishdate":"2020-01-20T00:00:00Z","readingtime":3,"relpermalink":"/post/custom-traefik2-middleware/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/tags/traefik/\"\u003eTraefik 2.X\u003c/a\u003e 版本发布以来受到了很大的关注，特别是提供的中间件机制非常受欢迎，但是目前对于用户来说能使用的也只有官方提供的中间件，这对于某些特殊场景可能就满足不了需求了，自然而然就想到了自定义中间件，然而现在要想自定义中间件不是一件容易的事情，虽然实现一个中间件很简单，因为目前官方没有提供方法可以将我们自定义的中间件配置到 Traefik 中，所以只能采用比较 low 的一种方法，那就是直接更改官方的源代码了，下面我们以一个简单的示例来说明下如何自定义一个 Traefik 中间件。\u003c/p\u003e","tags":["traefik","kubernetes","ingress"],"title":"自定义 Traefik2 中间件","type":"post","url":"/post/custom-traefik2-middleware/","weight":0,"wordcount":1288},{"author":null,"categories":null,"content":null,"date":1578873600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["kubernetes","课程","优惠","jenkins","devops","流水线"],"kind":"page","lang":"en","lastmod":1578873600,"objectID":"fdd71b6d281e119b5deda0c0bafa4f86","permalink":"https://qnxr.xyz/post/devops-base-on-jenkins/","publishdate":"2020-01-13T00:00:00Z","readingtime":2,"relpermalink":"/post/devops-base-on-jenkins/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/devops-base-on-jenkins/\"\u003e\n  \u003cimg src=\"https://sdn.youdianzhishi.com/images/2020/3/7/9461711bff5a4f5b999ebcc0f65bb12b.jpg?imageView2/2/format/webp\" alt=\"devops jenkins\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e","tags":["kubernetes","jenkins","devops","课程"],"title":"基于 Jenkins 的 DevOps 流水线实践","type":"post","url":"/post/devops-base-on-jenkins/","weight":0,"wordcount":993},{"author":null,"categories":null,"content":null,"date":1578614400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":["kubernetes","traefik","ingress","rewrite","中间件"],"kind":"page","lang":"en","lastmod":1578614400,"objectID":"b39a9bd9f68a7349c1e114ee7262a82c","permalink":"https://qnxr.xyz/post/url-rewrite-on-traefik2.x/","publishdate":"2020-01-10T00:00:00Z","readingtime":3,"relpermalink":"/post/url-rewrite-on-traefik2.x/","section":"post","summary":"\u003cp\u003e前面我们介绍了在 \u003ca href=\"https://www.qikqiak.com/post/url-rewrite-on-ingress-nginx/\"\u003eingress-nginx 中 URL Rewrite 的使用\u003c/a\u003e，其中重写路径大部分还是和传统的 nginx 方式差不多，如果我们使用的是比较云原生的 Traefik 来作为我们的网关的话，在遇到有 URL Rewrite 需求的时候又改怎么做呢？前面我们用一篇文章 \u003ca href=\"https://www.qikqiak.com/post/traefik-2.1-101/\"\u003e一文搞懂 Traefik2.1 的使用\u003c/a\u003e 介绍了 Traefik2.1 的基本的功能，唯独没有提到 URL Rewrite 这一点，在 Traefik2.1 中我们依然可以很方便的用中间件的方式来完成这个功能。\u003c/p\u003e","tags":["kubernetes","traefik","ingress"],"title":"Traefik2.X 版本 中 URL Rewrite 的使用","type":"post","url":"/post/url-rewrite-on-traefik2.x/","weight":0,"wordcount":1443},{"author":null,"categories":null,"content":null,"date":1578355200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":9300,"html":null,"keywords":["kubernetes","scheduler","golang","调度器","调度框架"],"kind":"page","lang":"en","lastmod":1578355200,"objectID":"c4a8079502eed9d5315cee934c9dc650","permalink":"https://qnxr.xyz/post/custom-kube-scheduler/","publishdate":"2020-01-07T00:00:00Z","readingtime":19,"relpermalink":"/post/custom-kube-scheduler/","section":"post","summary":"\u003cp\u003e\u003ccode\u003ekube-scheduler\u003c/code\u003e 是 kubernetes 的核心组件之一，主要负责整个集群资源的调度功能，根据特定的调度算法和策略，将 Pod 调度到最优的工作节点上面去，从而更加合理、更加充分的利用集群的资源，这也是我们选择使用 kubernetes 一个非常重要的理由。如果一门新的技术不能帮助企业节约成本、提供效率，我相信是很难推进的。\u003c/p\u003e","tags":["kubernetes","scheduler","golang"],"title":"自定义 Kubernetes 调度器","type":"post","url":"/post/custom-kube-scheduler/","weight":0,"wordcount":9282},{"author":null,"categories":null,"content":null,"date":1577664000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":6400,"html":null,"keywords":["kubernetes","traefik","nginx","ingress","灰度","tcp"],"kind":"page","lang":"en","lastmod":1577664000,"objectID":"4c489a78359c6e5be25a531ef4ae0042","permalink":"https://qnxr.xyz/post/traefik-2.1-101/","publishdate":"2019-12-30T00:00:00Z","readingtime":13,"relpermalink":"/post/traefik-2.1-101/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://github.com/containous/traefik\"\u003eTraefik\u003c/a\u003e 是一个开源的可以使服务发布变得轻松有趣的边缘路由器。它负责接收你系统的请求，然后使用合适的组件来对这些请求进行处理。\u003c/p\u003e\n\u003cp\u003e除了众多的功能之外，Traefik 的与众不同之处还在于它会自动发现适合你服务的配置。当 Traefik 在检查你的服务时，会找到服务的相关信息并找到合适的服务来满足对应的请求。\u003c/p\u003e\n\u003cp\u003eTraefik 兼容所有主流的集群技术，比如 Kubernetes，Docker，Docker Swarm，AWS，Mesos，Marathon，等等；并且可以同时处理多种方式。（甚至可以用于在裸机上运行的比较旧的软件。）\u003c/p\u003e\n\u003cp\u003e\n  \u003cimg src=\"https://www.qikqiak.com/k8strain/assets/img/network/traefik-architecture.png\" alt=\"traefik architecture\"\u003e\n\n\u003c/p\u003e\n\u003cp\u003e使用 Traefik，不需要维护或者同步一个独立的配置文件：因为一切都会自动配置，实时操作的（无需重新启动，不会中断连接）。使用 Traefik，你可以花更多的时间在系统的开发和新功能上面，而不是在配置和维护工作状态上面花费大量时间。\u003c/p\u003e","tags":["kubernetes","traefik","ingress"],"title":"一文搞懂 Traefik2.1 的使用","type":"post","url":"/post/traefik-2.1-101/","weight":0,"wordcount":6389},{"author":null,"categories":null,"content":null,"date":1576281600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":["kubernetes","prometheus","recording","rules","记录规则"],"kind":"page","lang":"en","lastmod":1576281600,"objectID":"c00b517fa73edc188c6655b359d80383","permalink":"https://qnxr.xyz/post/recording-rules-on-prometheus/","publishdate":"2019-12-14T00:00:00Z","readingtime":3,"relpermalink":"/post/recording-rules-on-prometheus/","section":"post","summary":"\u003cp\u003ePrometheus 作为现在最火的云原生监控工具，它的优秀表现是毋庸置疑的。但是在我们使用过程中，随着时间的推移，存储在 Prometheus 中的监控指标数据越来越多，查询的频率也在不断的增加，当我们用 Grafana 添加更多的 Dashboard 的时候，可能慢慢地会体验到 Grafana 已经无法按时渲染图表，并且偶尔还会出现超时的情况，特别是当我们在长时间汇总大量的指标数据的时候，Prometheus 查询超时的情况可能更多了，这时就需要一种能够类似于后台批处理的机制在后台完成这些复杂运算的计算，对于使用者而言只需要查询这些运算结果即可。Prometheus 提供一种\u003cstrong\u003e记录规则（Recording Rule）\u003c/strong\u003e 来支持这种后台计算的方式，可以实现对复杂查询的 PromQL 语句的性能优化，提高查询效率。\u003c/p\u003e","tags":["kubernetes","prometheus","rules"],"title":"Prometheus 记录规则的使用","type":"post","url":"/post/recording-rules-on-prometheus/","weight":0,"wordcount":1383},{"author":null,"categories":null,"content":null,"date":1576281600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1576281600,"objectID":"","permalink":"https://qnxr.xyz/tags/rules/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rules/","section":"tags","summary":"","tags":null,"title":"rules","type":"tags","url":"/tags/rules/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1576195200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1576195200,"objectID":"","permalink":"https://qnxr.xyz/tags/blackbox/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/blackbox/","section":"tags","summary":"","tags":null,"title":"blackbox","type":"tags","url":"/tags/blackbox/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1576195200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2400,"html":null,"keywords":["kubernetes","prometheus","blackbox","exporter","黑盒"],"kind":"page","lang":"en","lastmod":1576195200,"objectID":"63ef8e6d4664dc7d6beb1d082fc47e00","permalink":"https://qnxr.xyz/post/blackbox-exporter-on-prometheus/","publishdate":"2019-12-13T00:00:00Z","readingtime":5,"relpermalink":"/post/blackbox-exporter-on-prometheus/","section":"post","summary":"\u003cp\u003e前面我们主要介绍了 Prometheus 下如何进行白盒监控，我们监控主机的资源用量、容器的运行状态、数据库中间件的运行数据、自动发现 Kubernetes 集群中的资源等等，这些都是支持业务和服务的基础设施，通过白盒能够了解其内部的实际运行状态，通过对监控指标的观察能够预判可能出现的问题，从而对潜在的不确定因素进行优化。而从完整的监控逻辑的角度，除了大量的应用白盒监控以外，还应该添加适当的 \u003ccode\u003eBlackbox（黑盒）\u003c/code\u003e监控，黑盒监控即以用户的身份测试服务的外部可见性，常见的黑盒监控包括\u003ccode\u003eHTTP 探针\u003c/code\u003e、\u003ccode\u003eTCP 探针\u003c/code\u003e 等用于检测站点或者服务的可访问性，以及访问效率等。\u003c/p\u003e\n\u003cp\u003e黑盒监控相较于白盒监控最大的不同在于黑盒监控是以故障为导向当故障发生时，黑盒监控能快速发现故障，而白盒监控则侧重于主动发现或者预测潜在的问题。一个完善的监控目标是要能够从白盒的角度发现潜在问题，能够在黑盒的角度快速发现已经发生的问题。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/prometheus/blackbox_exporter\"\u003eBlackbox Exporter\u003c/a\u003e 是 Prometheus 社区提供的官方黑盒监控解决方案，其允许用户通过：\u003ccode\u003eHTTP\u003c/code\u003e、\u003ccode\u003eHTTPS\u003c/code\u003e、\u003ccode\u003eDNS\u003c/code\u003e、\u003ccode\u003eTCP\u003c/code\u003e 以及 \u003ccode\u003eICMP\u003c/code\u003e 的方式对网络进行探测。\u003c/p\u003e","tags":["kubernetes","prometheus","blackbox"],"title":"Prometheus 黑盒监控","type":"post","url":"/post/blackbox-exporter-on-prometheus/","weight":0,"wordcount":2353},{"author":null,"categories":null,"content":null,"date":1575676800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1575676800,"objectID":"","permalink":"https://qnxr.xyz/tags/haproxy/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/haproxy/","section":"tags","summary":"","tags":null,"title":"haproxy","type":"tags","url":"/tags/haproxy/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1575676800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1575676800,"objectID":"","permalink":"https://qnxr.xyz/tags/kong/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kong/","section":"tags","summary":"","tags":null,"title":"kong","type":"tags","url":"/tags/kong/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1575676800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":["kubernetes","ingress","traefik","nginx","haproxy","kong"],"kind":"page","lang":"en","lastmod":1575676800,"objectID":"0235081d2cfa4b5b77abfec4cc643965","permalink":"https://qnxr.xyz/post/what-is-new-in-k8s-1.17/","publishdate":"2019-12-07T00:00:00Z","readingtime":2,"relpermalink":"/post/what-is-new-in-k8s-1.17/","section":"post","summary":"Kubernetes 1.17 即将发布！这个 release 主要集中在一些小的改进和优化上面，也有一些比较有用的新特性，比如前面我们已经介绍过的拓扑感知路由，以及对 IPv4/IPv6 双堆栈支持的改","tags":["kubernetes","ingress","traefik","nginx","haproxy","kong"],"title":"Kubernetes 1.17 有什么新特性？","type":"post","url":"/post/what-is-new-in-k8s-1.17/","weight":0,"wordcount":526},{"author":null,"categories":null,"content":null,"date":1574899200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["ingress","nginx","kubernetes"],"kind":"page","lang":"en","lastmod":1574899200,"objectID":"70352d06f8519a27cbe7cfbc0a89161d","permalink":"https://qnxr.xyz/post/url-rewrite-on-ingress-nginx/","publishdate":"2019-11-28T00:00:00Z","readingtime":3,"relpermalink":"/post/url-rewrite-on-ingress-nginx/","section":"post","summary":"\u003cp\u003e由于 nginx 的优秀性能表现，所以很多企业在 \u003ca href=\"/tags/kubernetes/\"\u003eKubernetes\u003c/a\u003e 中选择 Ingress Controller 的时候依然会选择基于 nginx 的 \u003ca href=\"https://kubernetes.github.io/ingress-nginx\"\u003eingress-nginx\u003c/a\u003e，前面文章中我们更多的是介绍更加云原生配置更加灵活的 \u003ca href=\"https://www.qikqiak.com/tags/traefik/\"\u003eTraefik\u003c/a\u003e，特别是 Traefik 2.0 版本新增中间件概念以后，在配置上就更加方便了，各种需求都可以通过中间件来实现，对于 \u003ccode\u003eingress-nginx\u003c/code\u003e 来说配置就稍微麻烦一点，一些复杂的需求需要通过 \u003ccode\u003eIngress\u003c/code\u003e 的 \u003ccode\u003eannotation\u003c/code\u003e 来实现，比如我们现在需要实现一个 url rewrite 的功能，简单来说就是我们之前的应用在 \u003ccode\u003etodo.qikqiak.com\u003c/code\u003e 下面，现在我们需要通过 \u003ccode\u003etodo.qikqiak.com/app/\u003c/code\u003e 来进行访问。\u003c/p\u003e","tags":["ingress","ingress-nginx","kubernetes","nginx"],"title":"ingress-nginx 中 Rewrite 的使用","type":"post","url":"/post/url-rewrite-on-ingress-nginx/","weight":0,"wordcount":1221},{"author":null,"categories":null,"content":null,"date":1574640000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1574640000,"objectID":"","permalink":"https://qnxr.xyz/tags/oam/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/oam/","section":"tags","summary":"","tags":null,"title":"oam","type":"tags","url":"/tags/oam/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1574640000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1574640000,"objectID":"","permalink":"https://qnxr.xyz/tags/rudr/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rudr/","section":"tags","summary":"","tags":null,"title":"rudr","type":"tags","url":"/tags/rudr/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1574640000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":["kubernetes","oam","rudr","ingress","traefik"],"kind":"page","lang":"en","lastmod":1574640000,"objectID":"bbc62e12866d8d5921cf44c2e627c236","permalink":"https://qnxr.xyz/post/deploy-k8s-app-with-oam/","publishdate":"2019-11-25T00:00:00Z","readingtime":5,"relpermalink":"/post/deploy-k8s-app-with-oam/","section":"post","summary":"\u003cp\u003e前段时间阿里云和微软云联合发布了 \u003ccode\u003eOpen Application Model（OAM）\u003c/code\u003e，简单来说就是利用一个规范对应用程序进行建模以区分开发和运维人员的职责。开发人员负责描述微服务或组件的功能，以及如何配置它；运维负责配置其中一个或多个微服务的运行时环境；基础设施工程师负责建立和维护应用程序运行的基础设施。其中 \u003ca href=\"https://github.com/oam-dev/rudr\"\u003eRudr\u003c/a\u003e 是针对 Kubernetes 上面的 \u003ccode\u003eOAM\u003c/code\u003e 的参考实现。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eRudr\u003c/code\u003e 的应用程序有三个元素：Components（组件）、Configuration（配置）、Traits（特征）：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e组件定义一个或多个面向操作系统的容器镜像以及硬件需求，如 \u003ccode\u003eCPU\u003c/code\u003e、内存和存储等\u003c/li\u003e\n\u003cli\u003e配置处理运行时的参数，比如环境变量\u003c/li\u003e\n\u003cli\u003e特征声明运行时的属性，比如 Volume、Ingress、伸缩等等。\u003c/li\u003e\n\u003c/ul\u003e","tags":["kubernetes","oam","rudr"],"title":"使用 OAM 部署 Kubernetes 应用","type":"post","url":"/post/deploy-k8s-app-with-oam/","weight":0,"wordcount":2109},{"author":null,"categories":null,"content":null,"date":1574035200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1574035200,"objectID":"","permalink":"https://qnxr.xyz/tags/capabilities/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/capabilities/","section":"tags","summary":"","tags":null,"title":"Capabilities","type":"tags","url":"/tags/capabilities/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1574035200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2600,"html":null,"keywords":["kubernetes","Capabilities","docker","Container","安全"],"kind":"page","lang":"en","lastmod":1574035200,"objectID":"2d3b651e83443a0f700506c03547943c","permalink":"https://qnxr.xyz/post/capabilities-on-k8s/","publishdate":"2019-11-18T00:00:00Z","readingtime":6,"relpermalink":"/post/capabilities-on-k8s/","section":"post","summary":"\u003cp\u003e我们在使用 Kubernetes 过程中，偶尔会遇到如下所示的一段配置：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"color:#ff79c6\"\u003esecurityContext\u003c/span\u003e:\n  \u003cspan style=\"color:#ff79c6\"\u003ecapabilities\u003c/span\u003e:\n    \u003cspan style=\"color:#ff79c6\"\u003edrop\u003c/span\u003e:\n    - ALL\n    \u003cspan style=\"color:#ff79c6\"\u003eadd\u003c/span\u003e:\n    - NET_BIND_SERVICE\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e实际上这是配置对应的容器的 \u003ccode\u003eCapabilities\u003c/code\u003e，在我们使用 \u003ccode\u003edocker run\u003c/code\u003e 的时候可以通过 \u003ccode\u003e--cap-add\u003c/code\u003e 和 \u003ccode\u003e--cap-drop\u003c/code\u003e 命令来给容器添加 \u003ccode\u003eLinux Capabilities\u003c/code\u003e。对于大部分同学可能又要疑问 \u003ccode\u003eLinux Capabilities\u003c/code\u003e 是什么呢？\u003c/p\u003e","tags":["kubernetes","Capabilities","docker"],"title":"在 Kubernetes 中配置 Container Capabilities","type":"post","url":"/post/capabilities-on-k8s/","weight":0,"wordcount":2587},{"author":null,"categories":null,"content":null,"date":1573776000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1573776000,"objectID":"","permalink":"https://qnxr.xyz/tags/gloo/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gloo/","section":"tags","summary":"","tags":null,"title":"Gloo","type":"tags","url":"/tags/gloo/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1573776000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":["Envoy","Gloo","kubernetes","ingress"],"kind":"page","lang":"en","lastmod":1573776000,"objectID":"44dd09d255cf166a90e7cf934174cdde","permalink":"https://qnxr.xyz/post/gloo-1.0-release/","publishdate":"2019-11-15T00:00:00Z","readingtime":4,"relpermalink":"/post/gloo-1.0-release/","section":"post","summary":"\u003cp\u003e\u003ca href=\"http://www.solo.io/gloo\"\u003eGloo\u003c/a\u003e 是一个基于 \u003ccode\u003eEnvovy\u003c/code\u003e 代理构建的下一代 API 网关和 Kubernetes Ingress 控制器，具有 Kubernetes 原生架构，也可以支持非 Kubernetes 环境。Gloo 是一个控制平面，可以轻松管理 Envovy 的配置，保护传入的流量并将其路由到应用程序。\u003c/p\u003e","tags":["Envoy","Gloo","kubernetes"],"title":"Gloo 1.0 正式版发布","type":"post","url":"/post/gloo-1.0-release/","weight":0,"wordcount":1888},{"author":null,"categories":null,"content":null,"date":1573430400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1573430400,"objectID":"","permalink":"https://qnxr.xyz/tags/ceph/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ceph/","section":"tags","summary":"","tags":null,"title":"ceph","type":"tags","url":"/tags/ceph/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1573430400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1573430400,"objectID":"","permalink":"https://qnxr.xyz/tags/rook/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rook/","section":"tags","summary":"","tags":null,"title":"rook","type":"tags","url":"/tags/rook/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1573430400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2800,"html":null,"keywords":["kubernetes","rook","ceph","Rook","Operator"],"kind":"page","lang":"en","lastmod":1573430400,"objectID":"efcc01597cf183041677154190889799","permalink":"https://qnxr.xyz/post/deploy-ceph-cluster-with-rook/","publishdate":"2019-11-11T00:00:00Z","readingtime":6,"relpermalink":"/post/deploy-ceph-cluster-with-rook/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://rook.io\"\u003eRook\u003c/a\u003e 是一个开源的云原生存储编排工具，提供平台、框架和对各种存储解决方案的支持，以和云原生环境进行本地集成。\u003c/p\u003e\n\u003cp\u003eRook 将存储软件转变成自我管理、自我扩展和自我修复的存储服务，通过自动化部署、启动、配置、供应、扩展、升级、迁移、灾难恢复、监控和资源管理来实现。Rook 底层使用云原生容器管理、调度和编排平台提供的能力来提供这些功能。\u003c/p\u003e\n\u003cp\u003eRook 利用扩展功能将其深度集成到云原生环境中，并为调度、生命周期管理、资源管理、安全性、监控等提供了无缝的体验。有关 Rook 当前支持的存储解决方案的状态的更多详细信息，可以参考 \u003ca href=\"https://github.com/rook/rook/blob/master/README.md#project-status\"\u003eRook 仓库\u003c/a\u003e 的项目介绍。不过目前 Rook 已经很好地提供了对 \u003ca href=\"https://ceph.io/\"\u003eCeph\u003c/a\u003e 的支持，本文简单为大家介绍如何使用 Rook 来快速搭建 Ceph 集群。\u003c/p\u003e","tags":["kubernetes","rook","ceph"],"title":"使用 Rook 快速搭建 Ceph 集群","type":"post","url":"/post/deploy-ceph-cluster-with-rook/","weight":0,"wordcount":2780},{"author":null,"categories":null,"content":null,"date":1573344000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":["kubernetes","双11","课程","活动"],"kind":"page","lang":"en","lastmod":1573344000,"objectID":"969d345f8276ebb8877c4c2086d75496","permalink":"https://qnxr.xyz/post/course-11-promotion/","publishdate":"2019-11-10T00:00:00Z","readingtime":1,"relpermalink":"/post/course-11-promotion/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/course-11-promotion/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/promotion-11-course.png\" alt=\"k8s course\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e双11马上就要到了，我特别想买优点知识上面的几门课程，阳明老师难道都不给点优惠吗？啊？双11就真的要给优惠吗？当然啊，多多少少安慰下单身🐶受伤的心灵噻，我：\u0026hellip;\u0026hellip;\u003c/p\u003e","tags":["kubernetes","课程"],"title":"双11精品课程限时优惠活动","type":"post","url":"/post/course-11-promotion/","weight":0,"wordcount":360},{"author":null,"categories":null,"content":null,"date":1573257600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1573257600,"objectID":"","permalink":"https://qnxr.xyz/tags/k8s%E6%8A%80%E6%9C%AF%E5%9C%88/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/k8s%E6%8A%80%E6%9C%AF%E5%9C%88/","section":"tags","summary":"","tags":null,"title":"k8s技术圈","type":"tags","url":"/tags/k8s%E6%8A%80%E6%9C%AF%E5%9C%88/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1573257600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":["kubernetes","知识星球","k8s技术圈","精选"],"kind":"page","lang":"en","lastmod":1573257600,"objectID":"a768cf45b1a84e1fb3723d766a1068c6","permalink":"https://qnxr.xyz/post/k8s-tech-weekly-collection-phase6/","publishdate":"2019-11-09T00:00:00Z","readingtime":6,"relpermalink":"/post/k8s-tech-weekly-collection-phase6/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/k8s-tech-weekly-collection-phase6/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/k8s-weekly-phase6.png\" alt=\"k8s技术圈一周精选\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e本周的\u003ccode\u003ek8s技术圈\u003c/code\u003e的几个精选的问题，分享给大家。另外，也欢迎大家加入我们的\u003ccode\u003e【微信群】\u003c/code\u003e和\u003ccode\u003e【知识星球】\u003c/code\u003e共同探讨，共同进步。\u003c/p\u003e","tags":["kubernetes","知识星球","k8s技术圈"],"title":"k8s技术圈一周精选[第6期]","type":"post","url":"/post/k8s-tech-weekly-collection-phase6/","weight":0,"wordcount":2926},{"author":null,"categories":null,"content":null,"date":1573257600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1573257600,"objectID":"","permalink":"https://qnxr.xyz/tags/%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83/","section":"tags","summary":"","tags":null,"title":"知识星球","type":"tags","url":"/tags/%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1572480000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4700,"html":null,"keywords":["kubernetes","ingress","golang","ingress controller","traefik","nginx"],"kind":"page","lang":"en","lastmod":1572480000,"objectID":"44774549a581fe585b34b0343ce1eda4","permalink":"https://qnxr.xyz/post/custom-k8s-ingress-controller-with-go/","publishdate":"2019-10-31T00:00:00Z","readingtime":10,"relpermalink":"/post/custom-k8s-ingress-controller-with-go/","section":"post","summary":"\u003cp\u003e在 Kubernetes 中通过 Ingress 来暴露服务到集群外部，这个已经是一个很普遍的方式了，而真正扮演请求转发的角色是背后的 Ingress Controller，比如我们经常使用的 traefik、ingress-nginx 等就是一个 Ingress Controller。本文我们将通过 golang 来实现一个简单的自定义的 Ingress Controller，可以加深我们对 Ingress 的理解。\u003c/p\u003e","tags":["kubernetes","ingress","golang"],"title":"使用 Golang 自定义 Kubernetes Ingress Controller","type":"post","url":"/post/custom-k8s-ingress-controller-with-go/","weight":0,"wordcount":4603},{"author":null,"categories":null,"content":null,"date":1571961600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":["traefik","kubernetes","traefik 2.0","Ingress","TCP","灰度","金丝雀"],"kind":"page","lang":"en","lastmod":1571961600,"objectID":"639f563265994ea874f878a381ee87b6","permalink":"https://qnxr.xyz/post/canary-with-traefik2/","publishdate":"2019-10-25T00:00:00Z","readingtime":4,"relpermalink":"/post/canary-with-traefik2/","section":"post","summary":"\u003cp\u003e前面的文章中我们已经使用 Traefik2.0 实现了 \u003ca href=\"/post/expose-redis-by-traefik2\"\u003e暴露 Redis(TCP) 服务\u003c/a\u003e 以及 \u003ca href=\"/post/automatic-https-with-traefik2\"\u003e自动化 HTTPS\u003c/a\u003e 得功能，在 \u003ca href=\"/post/traefik2-ga/\"\u003eTraefik2.0 发布的特性\u003c/a\u003e 中我们了解到除了这些基础功能之外，还支持一些其他的特性，本文就将来实现灰度发布的高级功能。\u003c/p\u003e","tags":["traefik","kubernetes","ingress","灰度"],"title":"Traefik 2.0 实现灰度发布","type":"post","url":"/post/canary-with-traefik2/","weight":0,"wordcount":1545},{"author":null,"categories":null,"content":null,"date":1571961600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1571961600,"objectID":"","permalink":"https://qnxr.xyz/tags/%E7%81%B0%E5%BA%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%81%B0%E5%BA%A6/","section":"tags","summary":"","tags":null,"title":"灰度","type":"tags","url":"/tags/%E7%81%B0%E5%BA%A6/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1571184000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1571184000,"objectID":"","permalink":"https://qnxr.xyz/tags/https/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/https/","section":"tags","summary":"","tags":null,"title":"https","type":"tags","url":"/tags/https/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1571184000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":["traefik","kubernetes","traefik 2.0","Ingress","TCP","https","acme"],"kind":"page","lang":"en","lastmod":1571184000,"objectID":"800c793d1ea7b5c6fb68d5f4809115e3","permalink":"https://qnxr.xyz/post/automatic-https-with-traefik2/","publishdate":"2019-10-16T00:00:00Z","readingtime":3,"relpermalink":"/post/automatic-https-with-traefik2/","section":"post","summary":"\u003cp\u003e上一篇文章我们实现了 \u003ca href=\"/post/expose-redis-by-traefik2/\"\u003eTraefik 2.0 暴露 Redis(TCP) 服务\u003c/a\u003e，我们了解到 Traefik 中使用 TCP 路由配置需要 SNI，而 SNI 又是依赖 TLS 的，所以需要配置证书才能正常访问 TCP 服务，其实 Traefik 除了支持我们手动配置 TLS 证书之外，还支持自动生成 TLS 证书，本文就来为大家介绍如何在 Traefik 2.0 中配置自动化 HTTPS 服务。\u003c/p\u003e","tags":["traefik","kubernetes","ingress","https"],"title":"Traefik 2.0 实现自动化 HTTPS","type":"post","url":"/post/automatic-https-with-traefik2/","weight":0,"wordcount":1451},{"author":null,"categories":null,"content":null,"date":1571011200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1571011200,"objectID":"","permalink":"https://qnxr.xyz/tags/tcp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tcp/","section":"tags","summary":"","tags":null,"title":"tcp","type":"tags","url":"/tags/tcp/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1571011200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["traefik","kubernetes","traefik 2.0","Ingress","TCP","redis"],"kind":"page","lang":"en","lastmod":1571011200,"objectID":"de014d69ce0090cb5887bab8f444ff7e","permalink":"https://qnxr.xyz/post/expose-redis-by-traefik2/","publishdate":"2019-10-14T00:00:00Z","readingtime":2,"relpermalink":"/post/expose-redis-by-traefik2/","section":"post","summary":"\u003cp\u003e前面我们已经提到了 \u003ca href=\"/post/traefik2-ga/\"\u003eTraefik2.0 已经正式发布了\u003c/a\u003e，Traefik2.0 已经支持了 TCP 服务的，但是 Traefik 的官方文档实在是有点混乱，特别是在 Kubernetes 下面的使用更不详细，我在业余时间已经在尝试对官方文档进行翻译，地址：\u003ca href=\"https://www.qikqiak.com/traefik-book/\"\u003ehttps://www.qikqiak.com/traefik-book\u003c/a\u003e，去掉了一些多余的文档，增加一些在 Kubernetes 下面的使用案例。\u003c/p\u003e","tags":["traefik","kubernetes","ingress","tcp"],"title":"Traefik 2.0 暴露 Redis(TCP) 服务","type":"post","url":"/post/expose-redis-by-traefik2/","weight":0,"wordcount":934},{"author":null,"categories":null,"content":null,"date":1570320000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1570320000,"objectID":"","permalink":"https://qnxr.xyz/tags/jetbrains/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/jetbrains/","section":"tags","summary":"","tags":null,"title":"jetbrains","type":"tags","url":"/tags/jetbrains/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1570320000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":["jetbrains","goland","pycharm","IDE","免费"],"kind":"page","lang":"en","lastmod":1570320000,"objectID":"0c4a5b6e82663af8b72df6aba187c327","permalink":"https://qnxr.xyz/post/free-use-jetbrains-ide/","publishdate":"2019-10-06T00:00:00Z","readingtime":4,"relpermalink":"/post/free-use-jetbrains-ide/","section":"post","summary":"\u003cp\u003e要说现在最好用的 IDE 工具，可能除了微软系列的就得算 jetbrains 系列了，几乎支持所有主流的编程语言，可以说是目前最好用的 IDE 工具，比如 IntelliJ IDEA、PyCharm、GoLand、WebStorm，这些 IDE 工具其实平时我都有使用，但是我们也知道这些工具都属于商业产品，价格是非常昂贵的，虽然说这些工具给我们带来的便利远远不是金钱能来衡量的，但是毕竟对于我们大部分个人用户来说还是一笔不小的开支。\u003c/p\u003e","tags":["jetbrains","goland","pycharm","ops"],"title":"免费获取 JetBrains 全系产品正版 License","type":"post","url":"/post/free-use-jetbrains-ide/","weight":0,"wordcount":1768},{"author":null,"categories":null,"content":null,"date":1569542400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1569542400,"objectID":"","permalink":"https://qnxr.xyz/tags/websocket/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/websocket/","section":"tags","summary":"","tags":null,"title":"websocket","type":"tags","url":"/tags/websocket/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1569542400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3800,"html":null,"keywords":["prometheus","kubernetes","prometheus operator","adapter","扩缩容"],"kind":"page","lang":"en","lastmod":1569542400,"objectID":"63af2f901548ced63fd12f01f068d5d6","permalink":"https://qnxr.xyz/post/build-k8s-app-with-custom-metrics/","publishdate":"2019-09-27T00:00:00Z","readingtime":8,"relpermalink":"/post/build-k8s-app-with-custom-metrics/","section":"post","summary":"\u003cp\u003e前面我们学习了很多关于 Prometheus 的内容，也学习了 HPA 对象的使用，但是一直没有对自定义指标来对应用进行扩缩容做过讲解，本篇文章我们就来了解下如何通过自定义指标来做应用的动态伸缩功能。当前前提是你需要熟悉 \u003ca href=\"/tags/kubernetes/\"\u003eKubernetes\u003c/a\u003e 和 \u003ca href=\"/tags/prometheus/\"\u003ePrometheus\u003c/a\u003e，如果不熟悉的话可以查看我们前面的一系列文章，或者直接查看我们的 \u003ca href=\"https://www.qikqiak.com/post/promotion-51\"\u003eKubernetes 进阶视频课程\u003c/a\u003e。\u003c/p\u003e","tags":["prometheus","kubernetes","websocket"],"title":"对 Kubernetes 应用进行自定义指标扩缩容","type":"post","url":"/post/build-k8s-app-with-custom-metrics/","weight":0,"wordcount":3720},{"author":null,"categories":null,"content":null,"date":1569369600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1569369600,"objectID":"","permalink":"https://qnxr.xyz/tags/inlets/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/inlets/","section":"tags","summary":"","tags":null,"title":"inlets","type":"tags","url":"/tags/inlets/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1569369600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":["inlets","kubernetes","websocket","ssh","隧道","Caddy"],"kind":"page","lang":"en","lastmod":1569369600,"objectID":"693c59f1e10a05dfcce3aa925f13e84f","permalink":"https://qnxr.xyz/post/k8s-inlets-local-endpoinsts/","publishdate":"2019-09-25T00:00:00Z","readingtime":4,"relpermalink":"/post/k8s-inlets-local-endpoinsts/","section":"post","summary":"\u003cp\u003e我们经常有在外网访问我们本地服务的需求，特别是在开发调试阶段，比如做微信登录或者微信支付的时候就需要使用外网正式的域名，然而我们很多时候都是在本地进行开发，我们不可能频繁的部署到外网环境去进行测试，因为这样效率太低了，这是我们开发会经常面临的一个问题。\u003c/p\u003e","tags":["inlets","kubernetes","websocket"],"title":"使用 inlets 和 kubernetes 访问本地服务","type":"post","url":"/post/k8s-inlets-local-endpoinsts/","weight":0,"wordcount":1662},{"author":null,"categories":null,"content":null,"date":1568764800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":["traefik","kubernetes","traefik 2.0","Ingress","TCP"],"kind":"page","lang":"en","lastmod":1568764800,"objectID":"46eb011d266f2facff400b01b0a7276c","permalink":"https://qnxr.xyz/post/traefik2-ga/","publishdate":"2019-09-18T00:00:00Z","readingtime":5,"relpermalink":"/post/traefik2-ga/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/traefik2-ga/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/traefik2.png\" alt=\"traefik 2.0\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e寄予厚望的 \u003ca href=\"https://traefik.io/\"\u003eTraefik 2.0\u003c/a\u003e 经过了一年的等待，今天终于正式发布了，此次大版本的更新添加了许多新功能，特别是大家都期望的支持 TCP 的功能。接下来我们就来探索下 Traefik 2.0 中有哪些新增的功能呢？\u003c/p\u003e","tags":["traefik","kubernetes","ingress"],"title":"Traefik 2.0 正式版发布","type":"post","url":"/post/traefik2-ga/","weight":0,"wordcount":2010},{"author":null,"categories":null,"content":null,"date":1568592000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":["kubernetes","helm","chart","迁移"],"kind":"page","lang":"en","lastmod":1568592000,"objectID":"fb38b7541f61591e36af339435c34bb7","permalink":"https://qnxr.xyz/post/migrate-helm-to-v3/","publishdate":"2019-09-16T00:00:00Z","readingtime":5,"relpermalink":"/post/migrate-helm-to-v3/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://v3.helm.sh/\"\u003eHelm V3 版本\u003c/a\u003e已经发布了第三个 Beta 版本了，由于 V2 和 V3 版本之间的架构变化较大，所以如果我们现在正在使用 V2 版本的话，要迁移到 V3 版本了就有点小麻烦，其中最重要的当然就是数据迁移的问题，为了解决这个版本迁移问题，官方提供了一个名为 \u003ca href=\"https://github.com/helm/helm-2to3\"\u003ehelm-2to3\u003c/a\u003e 的插件可以来简化我们的迁移工作。\u003c/p\u003e","tags":["kubernetes","helm"],"title":"Helm V2 迁移到 V3 版本","type":"post","url":"/post/migrate-helm-to-v3/","weight":0,"wordcount":2081},{"author":null,"categories":null,"content":null,"date":1568505600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3600,"html":null,"keywords":["kubernetes","RBAC","psp","kubeadm","安全策略","PodSecurityPolicy"],"kind":"page","lang":"en","lastmod":1568505600,"objectID":"286926434a8e742e8a9742071291436a","permalink":"https://qnxr.xyz/post/setup-psp-in-k8s/","publishdate":"2019-09-15T00:00:00Z","readingtime":8,"relpermalink":"/post/setup-psp-in-k8s/","section":"post","summary":"\u003cp\u003e默认情况下，Kubernetes 允许创建一个有特权容器的 Pod，这些容器很可能会危机系统安全，而 Pod 安全策略（PSP）则通过确保请求者有权限按配置来创建 Pod，从而来保护集群免受特权 Pod 的影响。\u003c/p\u003e","tags":["kubernetes","psp","kubeadm","RBAC"],"title":"Kubernetes Pod 安全策略(PSP)配置","type":"post","url":"/post/setup-psp-in-k8s/","weight":0,"wordcount":3516},{"author":null,"categories":null,"content":null,"date":1568505600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1568505600,"objectID":"","permalink":"https://qnxr.xyz/tags/psp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/psp/","section":"tags","summary":"","tags":null,"title":"psp","type":"tags","url":"/tags/psp/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1568505600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1568505600,"objectID":"","permalink":"https://qnxr.xyz/tags/rbac/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rbac/","section":"tags","summary":"","tags":null,"title":"RBAC","type":"tags","url":"/tags/rbac/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1568073600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4300,"html":null,"keywords":["kubernetes","workflow","Argo","工作流","依赖","模板"],"kind":"page","lang":"en","lastmod":1568073600,"objectID":"7e32e3b56a56b1c28207a6af9056d3b0","permalink":"https://qnxr.xyz/post/argo-workflow-engine-for-k8s/","publishdate":"2019-09-10T00:00:00Z","readingtime":9,"relpermalink":"/post/argo-workflow-engine-for-k8s/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://applatix.com/open-source/argo/\"\u003eArgo\u003c/a\u003e 是 \u003ca href=\"https://applatix.com/\"\u003eApplatix\u003c/a\u003e 推出的一个开源项目，为 Kubernetes 提供 container-native（工作流中的每个步骤是通过容器实现）工作流程。Argo 可以让用户用一个类似于传统的 YAML 文件定义的 DSL 来运行多个步骤的 Pipeline。该框架提供了复杂的循环、条件判断、依赖管理等功能，这有助于提高部署应用程序的灵活性以及配置和依赖的灵活性。使用 Argo，用户可以定义复杂的依赖关系，以编程方式构建复杂的工作流、制品管理，可以将任何步骤的输出结果作为输入链接到后续的步骤中去，并且可以在可视化 UI 界面中监控调度的作业任务。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"/post/argo-workflow-engine-for-k8s/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/argo-k8s.png\" alt=\"Argo\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e","tags":["kubernetes","workflow","Argo"],"title":"Kubernetes 工作流引擎：Argo（1）","type":"post","url":"/post/argo-workflow-engine-for-k8s/","weight":0,"wordcount":4240},{"author":null,"categories":null,"content":null,"date":1568073600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1568073600,"objectID":"","permalink":"https://qnxr.xyz/tags/workflow/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/workflow/","section":"tags","summary":"","tags":null,"title":"workflow","type":"tags","url":"/tags/workflow/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1567641600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1567641600,"objectID":"","permalink":"https://qnxr.xyz/tags/mash/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mash/","section":"tags","summary":"","tags":null,"title":"Mash","type":"tags","url":"/tags/mash/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1567641600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["traefik","istio","Mash","Service Mesh","服务网格"],"kind":"page","lang":"en","lastmod":1567641600,"objectID":"8336f2c076b38b03c8ac582eb348c81b","permalink":"https://qnxr.xyz/post/maesh-service-mesh-by-trafik/","publishdate":"2019-09-05T00:00:00Z","readingtime":3,"relpermalink":"/post/maesh-service-mesh-by-trafik/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/maesh-service-mesh-by-trafik/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/maesh.jpg\" alt=\"Maesh\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eContainous（Traefik 团队）推出了全新设计的轻量级 service mesh（服务网格）工具：\u003ca href=\"http://mae.sh/\"\u003eMaesh\u003c/a\u003e，Maesh 允许对 Kubernetes 集群内流动的流量进行管理，这与入流量和出流量同样很重要。\u003c/p\u003e\n\u003cp\u003eMaesh 构建在 Traefk 之上，是一个简单但功能齐全的服务网格，支持最新的服务网格接口规范 \u003ca href=\"https://smi-spec.io/\"\u003eSMI\u003c/a\u003e，有助于与现有的一些解决方案进行集成。此外，Maesh 默认是需要开启使用的，这意味着在你决定将它们添加到网格之前，你的现有服务不会受到影响。\u003c/p\u003e","tags":["traefik","istio","Mash"],"title":"Traefik 团队开源的轻量级 Service Mesh 工具 Maesh","type":"post","url":"/post/maesh-service-mesh-by-trafik/","weight":0,"wordcount":1037},{"author":null,"categories":null,"content":null,"date":1567468800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1567468800,"objectID":"","permalink":"https://qnxr.xyz/tags/octant/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/octant/","section":"tags","summary":"","tags":null,"title":"Octant","type":"tags","url":"/tags/octant/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1567468800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1567468800,"objectID":"","permalink":"https://qnxr.xyz/tags/vmware/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/vmware/","section":"tags","summary":"","tags":null,"title":"vmware","type":"tags","url":"/tags/vmware/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1567468800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":["vmware","kubernetes","Octant","Dashboard","可视化"],"kind":"page","lang":"en","lastmod":1567468800,"objectID":"8ca360c551cf8a21d571297746907a7f","permalink":"https://qnxr.xyz/post/vmware-k8s-dashboard-octant/","publishdate":"2019-09-03T00:00:00Z","readingtime":2,"relpermalink":"/post/vmware-k8s-dashboard-octant/","section":"post","summary":"\u003cp\u003e上午看新闻发现 VMWare 开源了一款 Kubernetes Dashboard 的可视化工具 \u003ca href=\"https://github.com/vmware/octant\"\u003eOctant\u003c/a\u003e ，这是一款帮助开发人员了解应用程序在 Kubernetes 集群中如何运行的工具。它通过可视化的方式，呈现 Kubernetes 对象的依赖关系，可将本地端口请求转发到正在运行的 pod，查看 pod 日志，浏览不同的集群。此外，用户还可以通过安装或编写插件来扩展 Octant 的功能。\u003c/p\u003e","tags":["vmware","kubernetes","Octant"],"title":"VMWare 开源的 Kubernetes 可视化工具 Octant","type":"post","url":"/post/vmware-k8s-dashboard-octant/","weight":0,"wordcount":859},{"author":null,"categories":null,"content":null,"date":1566864000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1566864000,"objectID":"","permalink":"https://qnxr.xyz/tags/calico/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/calico/","section":"tags","summary":"","tags":null,"title":"calico","type":"tags","url":"/tags/calico/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1566864000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1566864000,"objectID":"","permalink":"https://qnxr.xyz/tags/ipvs/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ipvs/","section":"tags","summary":"","tags":null,"title":"ipvs","type":"tags","url":"/tags/ipvs/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1566864000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":["kubeadm","kubernetes","coredns","ipvs","calico"],"kind":"page","lang":"en","lastmod":1566864000,"objectID":"d30fe09614e11d072c8d5f6d5c378ef8","permalink":"https://qnxr.xyz/post/use-kubeadm-install-kubernetes-1.15.3/","publishdate":"2019-08-27T00:00:00Z","readingtime":6,"relpermalink":"/post/use-kubeadm-install-kubernetes-1.15.3/","section":"post","summary":"\u003cp\u003e以前文章和视频中都是\u003ca href=\"/use-kubeadm-install-kubernetes-1.10/\"\u003e使用的 Kubeadm 搭建的 Kubernetes 集群\u003c/a\u003e，但是版本比较低了（1.10.0版本），近期有不少反馈让更新下版本，本文将通过 Kubeadm 来搭建最新版本的 Kubernetes 1.15.3 集群，其实和以前搭建的方式方法基本一致，我们这里准备使用 calico 网络插件以及 ipvs 模式的 kube-proxy。\u003c/p\u003e","tags":["kubeadm","kubernetes","coredns","ipvs","calico"],"title":"使用 kubeadm 搭建 v1.15.3 版本 Kubernetes 集群","type":"post","url":"/post/use-kubeadm-install-kubernetes-1.15.3/","weight":0,"wordcount":2930},{"author":null,"categories":null,"content":null,"date":1566604800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1566604800,"objectID":"","permalink":"https://qnxr.xyz/tags/cd/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cd/","section":"tags","summary":"","tags":null,"title":"CD","type":"tags","url":"/tags/cd/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1566604800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1566604800,"objectID":"","permalink":"https://qnxr.xyz/tags/ci/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ci/","section":"tags","summary":"","tags":null,"title":"ci","type":"tags","url":"/tags/ci/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1566604800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1566604800,"objectID":"","permalink":"https://qnxr.xyz/tags/pipeline/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pipeline/","section":"tags","summary":"","tags":null,"title":"pipeline","type":"tags","url":"/tags/pipeline/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1566604800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4300,"html":null,"keywords":["CI","CD","github","GitHub Actions","golang","pipeline"],"kind":"page","lang":"en","lastmod":1566604800,"objectID":"17d3faa5fa4c53f8dbe3fa539167679f","permalink":"https://qnxr.xyz/post/use-github-actions-build-go-app/","publishdate":"2019-08-24T00:00:00Z","readingtime":9,"relpermalink":"/post/use-github-actions-build-go-app/","section":"post","summary":"\u003cp\u003eGitHub 前一段时间推出了自家的自动化构建工具：\u003ca href=\"https://github.com/features/actions\"\u003eGitHub Actions\u003c/a\u003e，不过目前还没有开放注册，只能通过申请等待官方审核。我第一时间就提交了申请，现在已经审核通过了，所以第一时间体验了\u003ccode\u003eGitHub Actions\u003c/code\u003e的功能，总体感受是 Travis CI 之类的工具应该现在在墙角\u003ccode\u003e瑟瑟发抖\u003c/code\u003e吧😄？\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eGitHub Actions\u003c/code\u003e允许构建一个完整的 CI/CD Pipeline，与 GitHub 生态系统深度集成，而无需使用 Travis CI 或者 Circle CI 等第三方服务，对于开源项目都是可以免费使用的。如果你也想尽快使用的话，可以通过链接 \u003ca href=\"https://github.com/features/actions/signup\"\u003ehttps://github.com/features/actions/signup\u003c/a\u003e 去申请权限。\u003c/p\u003e\n\u003cp\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/github-actions.jpg\" alt=\"github actions\"\u003e\n\n\u003c/p\u003e","tags":["CI","CD","github","golang","pipeline"],"title":"使用 GitHub Actions 自动化构建 Golang 应用","type":"post","url":"/post/use-github-actions-build-go-app/","weight":0,"wordcount":4297},{"author":null,"categories":null,"content":null,"date":1565913600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4200,"html":null,"keywords":["kubernetes","helm","kustomize","模板"],"kind":"page","lang":"en","lastmod":1565913600,"objectID":"354ed544ffd611723355a04b9bed5b21","permalink":"https://qnxr.xyz/post/kustomize-101/","publishdate":"2019-08-16T00:00:00Z","readingtime":9,"relpermalink":"/post/kustomize-101/","section":"post","summary":"\u003cp\u003e如果你经常使用 Kubernetes，那么你肯定就有定制资源清单文件的需求，但是貌似现在大家都比较喜欢使用 Helm，Helm 很好用，但也有很多缺点，比如需要一个 tiller 服务端，需要超高的权限，最重要的是如果你要想自己做一个 Helm Chart 包的话，则不是那么容易的，需要你了解一些 go template 的相关知识，它抛弃了我们在 Docker 和 Kubernetes 上面学到的一些逻辑，今天我们将为大家介绍另外一种名为\u003ccode\u003eKustomize❤️\u003c/code\u003e的替代工具。\u003c/p\u003e","tags":["kubernetes","helm","kustomize"],"title":"使用 Kustomize 配置 Kubernetes 应用","type":"post","url":"/post/kustomize-101/","weight":0,"wordcount":4171},{"author":null,"categories":null,"content":null,"date":1565654400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1565654400,"objectID":"","permalink":"https://qnxr.xyz/tags/kubesphere/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kubesphere/","section":"tags","summary":"","tags":null,"title":"KubeSphere","type":"tags","url":"/tags/kubesphere/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1565654400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":["kubernetes","drone","CI","CD","github","动态","helm"],"kind":"page","lang":"en","lastmod":1565654400,"objectID":"2b9a3e7d7695521fc8c4f53c15cc115a","permalink":"https://qnxr.xyz/post/install-kubesphere-on-k8s/","publishdate":"2019-08-13T00:00:00Z","readingtime":5,"relpermalink":"/post/install-kubesphere-on-k8s/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://kubesphere.io\"\u003eKubeSphere\u003c/a\u003e是在 Kubernetes 之上构建的企业级分布式多租户容器管理平台，提供简单易用的操作界面以及向导式操作方式，在降低用户使用容器调度平台学习成本的同时，极大减轻开发、测试、运维的日常工作的复杂度，旨在解决 Kubernetes 本身存在的存储、网络、安全和易用性等痛点。除此之外，平台已经整合并优化了多个适用于容器场景的功能模块，以完整的解决方案帮助企业轻松应对敏捷开发与自动化运维、微服务治理、多租户管理、工作负载和集群管理、服务与网络管理、应用编排与管理、镜像仓库管理和存储管理等业务场景。\u003c/p\u003e","tags":["kubernetes","devops","KubeSphere","istio"],"title":"在现有 Kubernetes 集群上安装 KubeSphere","type":"post","url":"/post/install-kubesphere-on-k8s/","weight":0,"wordcount":2110},{"author":null,"categories":null,"content":null,"date":1565136000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1565136000,"objectID":"","permalink":"https://qnxr.xyz/tags/drone/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/drone/","section":"tags","summary":"","tags":null,"title":"drone","type":"tags","url":"/tags/drone/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1565136000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3100,"html":null,"keywords":["kubernetes","devops","drone","CI","CD","github","动态","helm"],"kind":"page","lang":"en","lastmod":1565136000,"objectID":"8a372e2ed3d13238df8789fdff6bf64e","permalink":"https://qnxr.xyz/post/drone-with-k8s-3/","publishdate":"2019-08-07T00:00:00Z","readingtime":7,"relpermalink":"/post/drone-with-k8s-3/","section":"post","summary":"\u003cp\u003e本文是 \u003ca href=\"/tags/drone/\"\u003eDrone 系列文章\u003c/a\u003e的第三篇，在\u003ca href=\"/post/drone-with-k8s-1/\"\u003e第一篇文章中我们介绍了如何在 Kubernetes 集群中使用 Helm 来快速安装 Drone\u003c/a\u003e，并且用 \u003ca href=\"/post/automatic-kubernetes-ingress-https-with-lets-encrypt/\"\u003ecert-manager\u003c/a\u003e 给 Drone 应用做了自动化 HTTPS，在\u003ca href=\"/post/drone-with-k8s-2/\"\u003e第二篇文章中我们介绍了如何在 Drone 中使用 Pipeline 来自动化构建 Docker 镜像\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e本文我们将创建一个 Helm Chart 包，然后使用 Drone Pipeline 来进行自动部署或更新应用到 Kubernetes 集群中。\u003c/p\u003e\n\u003cp\u003e如果对 Helm 如何部署应用还不熟悉的，同样的，可以查看我们前面的 \u003ca href=\"/tags/helm/\"\u003eHelm 系列文章\u003c/a\u003e\u003c/p\u003e","tags":["kubernetes","devops","drone","CI","CD","github","helm"],"title":"Drone 结合 Helm 部署 Kubernetes 应用","type":"post","url":"/post/drone-with-k8s-3/","weight":0,"wordcount":3047},{"author":null,"categories":null,"content":null,"date":1565049600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":["kubernetes","devops","drone","CI","CD","github","动态","helm"],"kind":"page","lang":"en","lastmod":1565049600,"objectID":"d820dd4001ea31e333d2683fe19dede9","permalink":"https://qnxr.xyz/post/drone-with-k8s-2/","publishdate":"2019-08-06T00:00:00Z","readingtime":4,"relpermalink":"/post/drone-with-k8s-2/","section":"post","summary":"\u003cp\u003e本文是 \u003ca href=\"/tags/drone/\"\u003eDrone 系列文章\u003c/a\u003e的第二篇，在\u003ca href=\"/post/drone-with-k8s-1/\"\u003e第一篇文章中我们介绍了如何在 Kubernetes 集群中使用 Helm 来快速安装 Drone\u003c/a\u003e，并且用 \u003ca href=\"/post/automatic-kubernetes-ingress-https-with-lets-encrypt/\"\u003ecert-manager\u003c/a\u003e 给 Drone 应用做了自动化 HTTPS。\u003c/p\u003e\n\u003cp\u003e本文我们将创建一个简单的 Golang 应用，通过 Drone 的 Pipeline 来自动化构建 Docker 镜像。\u003c/p\u003e","tags":["kubernetes","devops","drone","CI","CD","github","helm"],"title":"使用 Drone Pipeline 构建 Docker 镜像","type":"post","url":"/post/drone-with-k8s-2/","weight":0,"wordcount":1826},{"author":null,"categories":null,"content":null,"date":1564963200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":["kubernetes","devops","drone","CI","CD","github","动态","helm"],"kind":"page","lang":"en","lastmod":1564963200,"objectID":"e3d8667e7cbcfe680c440a1217f9f1c8","permalink":"https://qnxr.xyz/post/drone-with-k8s-1/","publishdate":"2019-08-05T00:00:00Z","readingtime":5,"relpermalink":"/post/drone-with-k8s-1/","section":"post","summary":"\u003cp\u003e我们知道 CI/CD 是 devops 中最重要的环节，特别是对于现在的云原生应用，CI/CD 更是不可或缺的部分，对于 CI/CD 工具有很多优秀的开源工具，比如前面我们介绍的\u003ca href=\"/tags/jenkins/\"\u003eJenkins\u003c/a\u003e以及\u003ca href=\"/post/gitlab-runner-install-on-k8s/\"\u003egitlab ci\u003c/a\u003e都是非常流行常用的 CI/CD 工具，但是这两个工具整体使用来说有点陈旧和笨重，本文将为大家介绍一个比较热门的轻量级 CI/CD 开源工具：\u003ca href=\"https://drone.io/\"\u003eDrone\u003c/a\u003e，介绍如何将 Drone 和 Kubernetes 进行结合使用。\u003c/p\u003e","tags":["kubernetes","devops","drone","CI","CD","github","helm"],"title":"使用 Kubernetes Helm 安装 Drone","type":"post","url":"/post/drone-with-k8s-1/","weight":0,"wordcount":2033},{"author":null,"categories":null,"content":null,"date":1562284800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1562284800,"objectID":"","permalink":"https://qnxr.xyz/tags/admission/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/admission/","section":"tags","summary":"","tags":null,"title":"admission","type":"tags","url":"/tags/admission/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1562284800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1562284800,"objectID":"","permalink":"https://qnxr.xyz/tags/webhook/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/webhook/","section":"tags","summary":"","tags":null,"title":"webhook","type":"tags","url":"/tags/webhook/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1562284800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":5900,"html":null,"keywords":["kubernetes","admission","webhook","istio","apiserver","准入控制","Envoy","Pod"],"kind":"page","lang":"en","lastmod":1562284800,"objectID":"788c46e94e9a0626cc4a3045c589be3d","permalink":"https://qnxr.xyz/post/k8s-admission-webhook/","publishdate":"2019-07-05T00:00:00Z","readingtime":12,"relpermalink":"/post/k8s-admission-webhook/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/tags/kubernetes/\"\u003eKubernetes\u003c/a\u003e 提供了需要扩展其内置功能的方法，最常用的可能是自定义资源类型和自定义控制器了，除此之外，\u003ca href=\"/tags/kubernetes/\"\u003eKubernetes\u003c/a\u003e 还有一些其他非常有趣的功能，比如 \u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#admission-webhooks\"\u003eadmission webhooks\u003c/a\u003e 或者 \u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#initializers\"\u003einitializers\u003c/a\u003e，这些也可以用于扩展 API，它们可以用于修改某些 Kubernetes 资源的基本行为，接下来我们来看看那些引入了 admission webhooks 的动态准入控制。\u003c/p\u003e","tags":["kubernetes","admission","webhook","istio"],"title":"深入理解 Kubernetes Admission Webhook","type":"post","url":"/post/k8s-admission-webhook/","weight":0,"wordcount":5831},{"author":null,"categories":null,"content":null,"date":1561939200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2600,"html":null,"keywords":["kubernetes","operator","elasticsearch","kibana","集群","volume"],"kind":"page","lang":"en","lastmod":1561939200,"objectID":"b99c712045dee98082805cd085478243","permalink":"https://qnxr.xyz/post/elastic-cloud-on-k8s/","publishdate":"2019-07-01T00:00:00Z","readingtime":6,"relpermalink":"/post/elastic-cloud-on-k8s/","section":"post","summary":"\u003cp\u003e随着 \u003ca href=\"/tags/kubernetes/\"\u003ekubernetes\u003c/a\u003e 的快速发展，很多应用都在往 \u003ca href=\"/tags/kubernetes/\"\u003ekubernetes\u003c/a\u003e 上面迁移，现阶段对于无状态应用的迁移是非常容易做到的，但是对于有状态应用的迁移还是有一定门槛的，主要是有状态应用的运行方式各有不同，比如 MySQL、MongoDB、Redis 这些应用运行的方式方法都不太相同，特别是对于线上环境需要高可用的集群模式的时候，则差别就更大了，这就导致了有状态应用向 Kubernetes 的迁移必然进度会很慢。现在比较好的解决方案就是针对有状态应用开发对应的 \u003ca href=\"/tags/operator/\"\u003eOperator\u003c/a\u003e 应用，比如 prometheus-operator、etcd-operator 等等，关于 Operator 的开发，可以查看前面的一篇入门文章：\u003ca href=\"https://www.qikqiak.com/post/k8s-operator-101/\"\u003eKubernetes Operator 快速入门教程\u003c/a\u003e 以了解更多信息。\u003c/p\u003e\n\u003cp\u003e同样的，对于 Elasticsearch 应用，现在官方也推出了基于 Kubernetes Operator 的应用：Elastic Cloud on Kubernetes (ECK)，用户可使用该产品在 Kubernetes 上配置、管理和运行 Elasticsearch 集群。\u003c/p\u003e","tags":["kubernetes","operator","elasticsearch","kibana"],"title":"使用Elasticsearch Operator快速部署Elasticsearch集群","type":"post","url":"/post/elastic-cloud-on-k8s/","weight":0,"wordcount":2561},{"author":null,"categories":null,"content":null,"date":1561680000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1561680000,"objectID":"","permalink":"https://qnxr.xyz/tags/dex/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dex/","section":"tags","summary":"","tags":null,"title":"dex","type":"tags","url":"/tags/dex/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1561680000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1561680000,"objectID":"","permalink":"https://qnxr.xyz/tags/kubectl/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kubectl/","section":"tags","summary":"","tags":null,"title":"kubectl","type":"tags","url":"/tags/kubectl/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1561680000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3800,"html":null,"keywords":["kubernetes","github","oauth","dex","kubectl","rbac","cert manager"],"kind":"page","lang":"en","lastmod":1561680000,"objectID":"39c80884a9d1b185a2fe1d01c33f2747","permalink":"https://qnxr.xyz/post/k8s-auth-via-oidc/","publishdate":"2019-06-28T00:00:00Z","readingtime":8,"relpermalink":"/post/k8s-auth-via-oidc/","section":"post","summary":"\u003cp\u003e我们知道可以\u003ca href=\"(/post/use-rbac-in-k8s/)\"\u003e通过 RBAC 为操作 kubectl 的用户或组来进行权限控制\u003c/a\u003e，但是我们往往是通过 \u003ca href=\"/tags/kubernetes/\"\u003ekubernetes\u003c/a\u003e 集群的超级管理员手动为这些用户进行分配的，并没有一个开箱即用的 kubectl 身份验证工具。\u003c/p\u003e\n\u003cp\u003e现在参加 \u003ca href=\"https://youdianzhishi.com/course/6n8xd6/\"\u003ekubernetes 进阶课程\u003c/a\u003e的学生比较多，其中可能有一部分学生暂时还没有一套可用的集群环境，那么我们就可以为这部分学生授权访问我们的集群，但是如果这么多学生都手动去给他们创建身份认证必然非常麻烦。\u003c/p\u003e\n\u003cp\u003e那么我们可以用什么办法来可以很方便的为用户进行授权访问 \u003ca href=\"/tags/kubernetes/\"\u003ekubernetes\u003c/a\u003e 集群呢？\u003c/p\u003e","tags":["kubernetes","github","dex","kubectl","rbac"],"title":"通过 GitHub OAuth 和 Dex 访问 Kubernetes 集群","type":"post","url":"/post/k8s-auth-via-oidc/","weight":0,"wordcount":3788},{"author":null,"categories":null,"content":null,"date":1560384000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2800,"html":null,"keywords":["Jenkins","Pipeline","Vault","Docker","Configuration-As-Code"],"kind":"page","lang":"en","lastmod":1560384000,"objectID":"ecb5779071f500bd78155d79402364b6","permalink":"https://qnxr.xyz/post/use-casc-run-jenkins/","publishdate":"2019-06-13T00:00:00Z","readingtime":6,"relpermalink":"/post/use-casc-run-jenkins/","section":"post","summary":"\u003cp\u003e今天了解到一个名为\u003ccode\u003eConfiguration as Code (JcasC)\u003c/code\u003e的插件可以来创建\u003ccode\u003eJenkins\u003c/code\u003e，这个插件允许你用 YAML 文件来定义 Jenkins 配置。一般我们在使用 Jenkins 的时候多少知道我们需要哪些插件或者其他配置来配合我们的 CI/CD 工作，使用 JcasC 插件，我们就可以将这些信息配置在可读性更高的 YAML 文件中。在本文中，我们会为大家演示如何使用\u003ccode\u003eConfiguration as Code\u003c/code\u003e插件来创建 Jenkins，然后使用 Git、Maven 等工具来编写一个声明式的 Pipeline 去构建一个 Java 应用，另外还会展示如何使用\u003ccode\u003eVault\u003c/code\u003e来管理一些私密数据。\u003c/p\u003e","tags":["Jenkins","Pipeline","Docker","Vault"],"title":"使用 Configuration-As-Code 运行 Jenkins","type":"post","url":"/post/use-casc-run-jenkins/","weight":0,"wordcount":2714},{"author":null,"categories":null,"content":null,"date":1559088000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1559088000,"objectID":"","permalink":"https://qnxr.xyz/tags/101/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/101/","section":"tags","summary":"","tags":null,"title":"101","type":"tags","url":"/tags/101/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1559088000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":5600,"html":null,"keywords":["kubernetes","operator","101","教程"],"kind":"page","lang":"en","lastmod":1559088000,"objectID":"2f70d52e9a29c660f171fb0fafa7720b","permalink":"https://qnxr.xyz/post/k8s-operator-101/","publishdate":"2019-05-29T00:00:00Z","readingtime":12,"relpermalink":"/post/k8s-operator-101/","section":"post","summary":"\u003cp\u003e在 Kubernetes 的监控方案中我们经常会使用到一个\u003ca href=\"/tags/operator/\"\u003ePromethues Operator\u003c/a\u003e的项目，该项目可以让我们更加方便的去使用 Prometheus，而不需要直接去使用最原始的一些资源对象，比如 Pod、Deployment，随着 Prometheus Operator 项目的成功，CoreOS 公司开源了一个比较厉害的工具：\u003ca href=\"https://github.com/operator-framework\"\u003eOperator Framework\u003c/a\u003e，该工具可以让开发人员更加容易的开发 Operator 应用。\u003c/p\u003e\n\u003cp\u003e在本篇文章中我们会为大家介绍一个简单示例来演示如何使用 Operator Framework 框架来开发一个 Operator 应用。\u003c/p\u003e","tags":["kubernetes","operator","101"],"title":"Kubernetes Operator 快速入门教程","type":"post","url":"/post/k8s-operator-101/","weight":0,"wordcount":5541},{"author":null,"categories":null,"content":null,"date":1558483200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":["kubernetes","metrics-server","安装","helm"],"kind":"page","lang":"en","lastmod":1558483200,"objectID":"0f752503a660f71e5976c1b6563cbb37","permalink":"https://qnxr.xyz/post/install-metrics-server/","publishdate":"2019-05-22T00:00:00Z","readingtime":4,"relpermalink":"/post/install-metrics-server/","section":"post","summary":"\u003cp\u003ekubernetes 集群资源监控之前可以通过 heapster 来获取数据，在 1.11 开始开始逐渐废弃 heapster 了，采用 metrics-server 来代替，metrics-server 是集群的核心监控数据的聚合器，它从 kubelet 公开的 Summary API 中采集指标信息，metrics-server 是扩展的 APIServer，依赖于\u003ca href=\"https://github.com/kubernetes/kube-aggregator\"\u003ekube-aggregator\u003c/a\u003e，因为我们需要在 APIServer 中开启相关参数。\u003c/p\u003e","tags":["kubernetes","metrics-server"],"title":"Metrics Server 安装","type":"post","url":"/post/install-metrics-server/","weight":0,"wordcount":1647},{"author":null,"categories":null,"content":null,"date":1558483200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1558483200,"objectID":"","permalink":"https://qnxr.xyz/tags/metrics-server/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/metrics-server/","section":"tags","summary":"","tags":null,"title":"metrics-server","type":"tags","url":"/tags/metrics-server/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1558137600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1558137600,"objectID":"","permalink":"https://qnxr.xyz/tags/kubelet/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kubelet/","section":"tags","summary":"","tags":null,"title":"kubelet","type":"tags","url":"/tags/kubelet/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1558137600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":["kubernetes","kubelet","kubeadm","更新","kubectl","docker"],"kind":"page","lang":"en","lastmod":1558137600,"objectID":"9a7aa9f8d18ae59d9792ea5107dc33da","permalink":"https://qnxr.xyz/post/use-kubeadm-upgrade-k8s/","publishdate":"2019-05-18T00:00:00Z","readingtime":5,"relpermalink":"/post/use-kubeadm-upgrade-k8s/","section":"post","summary":"\u003cp\u003e由于课程中的集群版本是 v1.10.0，这个版本相对有点旧了，最新版本都已经 v1.14.x 了，为了尽量保证课程内容的更新度，所以我们需要将集群版本更新。我们的集群是使用的 kubeadm 搭建的，我们知道使用 kubeadm 搭建的集群来更新是非常方便的，但是由于我们这里版本跨度太大，不能直接从 1.10.x 更新到 1.14.x，kubeadm 的更新是不支持跨多个主版本的，所以我们现在是 1.10，只能更新到 1.11 版本了，然后再重 1.11 更新到 1.12\u0026hellip;\u0026hellip; 不过版本更新的方式方法基本上都是一样的，所以后面要更新的话也挺简单了，下面我们就先将集群更新到 v1.11.0 版本。\u003c/p\u003e","tags":["kubernetes","kubelet","kubeadm"],"title":"使用 kubeadm 更新 kubernetes 集群","type":"post","url":"/post/use-kubeadm-upgrade-k8s/","weight":0,"wordcount":2277},{"author":null,"categories":null,"content":null,"date":1557878400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":["kubernetes","kubelet","状态","同步","apiserver"],"kind":"page","lang":"en","lastmod":1557878400,"objectID":"aa2458f0ffb0cacfb45ec3e6b0bf9bea","permalink":"https://qnxr.xyz/post/kubelet-sync-node-status/","publishdate":"2019-05-15T00:00:00Z","readingtime":4,"relpermalink":"/post/kubelet-sync-node-status/","section":"post","summary":"\u003cp\u003e当 Kubernetes 中 Node 节点出现状态异常的情况下，节点上的 Pod 会被重新调度到其他节点上去，但是有的时候我们会发现节点 Down 掉以后，Pod 并不会立即触发重新调度，这实际上就是和 Kubelet 的状态更新机制密切相关的，Kubernetes 提供了一些参数配置来触发重新调度到嗯时间，下面我们来分析下 Kubelet 状态更新的基本流程。\u003c/p\u003e","tags":["kubernetes","kubelet"],"title":"Kubelet 状态更新机制","type":"post","url":"/post/kubelet-sync-node-status/","weight":0,"wordcount":1553},{"author":null,"categories":null,"content":null,"date":1557705600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1557705600,"objectID":"","permalink":"https://qnxr.xyz/tags/groovy/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/groovy/","section":"tags","summary":"","tags":null,"title":"Groovy","type":"tags","url":"/tags/groovy/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1557705600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":["Groovy","java","jenkins","pipeline","教程"],"kind":"page","lang":"en","lastmod":1557705600,"objectID":"010faa1f3ea27d0cee870a67a078ceeb","permalink":"https://qnxr.xyz/post/groovy-simple-tutorial/","publishdate":"2019-05-13T00:00:00Z","readingtime":5,"relpermalink":"/post/groovy-simple-tutorial/","section":"post","summary":"\u003cp\u003e最近一直有很多同学提到不会写 Jenkins Pipeline 脚本，我都是直接摔一个 Jenkins 官方文档给他们，但是当我自己仔细去查看资料的时候发现并非如此简单，无论是声明式还是脚本式的 Pipeline 都依赖了 Groovy 脚本，所以如果要很好的掌握 Pipeline 脚本的用法，我们非常有必要去了解下 Groovy 语言。\u003c/p\u003e","tags":["Groovy","java","jenkins","pipeline"],"title":"Groovy 简明教程","type":"post","url":"/post/groovy-simple-tutorial/","weight":0,"wordcount":2291},{"author":null,"categories":null,"content":null,"date":1557705600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1557705600,"objectID":"","permalink":"https://qnxr.xyz/tags/java/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/java/","section":"tags","summary":"","tags":null,"title":"java","type":"tags","url":"/tags/java/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556928000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556928000,"objectID":"","permalink":"https://qnxr.xyz/tags/harbor/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/harbor/","section":"tags","summary":"","tags":null,"title":"harbor","type":"tags","url":"/tags/harbor/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556928000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4300,"html":null,"keywords":["kubernetes","Jenkins","Gitlab","Harbor","Helm","Docker","Pipeline","CI/CD","流水线","devops"],"kind":"page","lang":"en","lastmod":1556928000,"objectID":"04f1231f18c9880368f9e036acd35a13","permalink":"https://qnxr.xyz/post/complete-cicd-demonstrate-2/","publishdate":"2019-05-04T00:00:00Z","readingtime":9,"relpermalink":"/post/complete-cicd-demonstrate-2/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/complete-cicd-demonstrate-1/\"\u003e上节课我们完成了最基本的流水线流程\u003c/a\u003e，接下来的工作就是来实现之前的具体 Pipeline 脚本了。\u003c/p\u003e","tags":["kubernetes","Jenkins","Gitlab","Harbor","Helm","Docker","Pipeline","devops"],"title":"基于 Jenkins、Gitlab、Harbor、Helm 和 Kubernetes 的 CI/CD(二)","type":"post","url":"/post/complete-cicd-demonstrate-2/","weight":0,"wordcount":4210},{"author":null,"categories":null,"content":null,"date":1556496000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":["kubernetes","helm","chart","template","golang","模板"],"kind":"page","lang":"en","lastmod":1556496000,"objectID":"0055b2d9c9299abdae6cbc0b7399cb2a","permalink":"https://qnxr.xyz/post/helm-chart-tips-and-tricks/","publishdate":"2019-04-29T00:00:00Z","readingtime":5,"relpermalink":"/post/helm-chart-tips-and-tricks/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/tags/helm/\"\u003eHelm\u003c/a\u003e Chart 在我们使用的时候非常方便的，但是对于开发人员来说 Helm Chart 模板就并不一定显得那么友好了，本文主要介绍了 Helm Chart 模板开发人员在构建生产级的 Chart 包时的一些技巧和窍门。\u003c/p\u003e","tags":["kubernetes","helm","golang"],"title":"Helm Chart 模板开发技巧","type":"post","url":"/post/helm-chart-tips-and-tricks/","weight":0,"wordcount":2275},{"author":null,"categories":null,"content":null,"date":1556323200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556323200,"objectID":"","permalink":"https://qnxr.xyz/tags/iptables/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/iptables/","section":"tags","summary":"","tags":null,"title":"iptables","type":"tags","url":"/tags/iptables/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556323200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":["kubernetes","Netfilter","网络","Linux","iptables","tcpdump","防火墙"],"kind":"page","lang":"en","lastmod":1556323200,"objectID":"6d4508b71313e291492fb730abf26e67","permalink":"https://qnxr.xyz/post/troubleshooting-k8s-network/","publishdate":"2019-04-27T00:00:00Z","readingtime":5,"relpermalink":"/post/troubleshooting-k8s-network/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/troubleshooting-k8s-network\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/lbpr6.png?x-oss-process=image/resize,w_800\" alt=\"troubleshooting kubernetes\"\u003e\n\n\u003c/a\u003e\n网络可以说是 Kubernetes 部署和使用过程中最容易出问题的了，最主要的是对网络技术非常熟悉的人员相对较少，和 Kubernetes 结合后能搞透彻网络这块的就更加稀少了，导致我们在部署使用过程中经常遇到一些网络问题。本文将重点关注网络，列出我们遇到的一些问题，包括解决和发现问题的简单方法，并就如何避免这些故障提供一些建议。\u003c/p\u003e","tags":["kubernetes","iptables","Netfilter","tcpdump"],"title":"Kubernetes 网络故障常见排查方法","type":"post","url":"/post/troubleshooting-k8s-network/","weight":0,"wordcount":2118},{"author":null,"categories":null,"content":null,"date":1556323200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":["kubernetes","Netfilter","网络","Linux","iptables","tcpdump","防火墙"],"kind":"page","lang":"en","lastmod":1556323200,"objectID":"fb55d17a78149025b3dee3409e71a9dd","permalink":"https://qnxr.xyz/post/troubleshooting-k8s-network/","publishdate":"2019-04-27T00:00:00Z","readingtime":2,"relpermalink":"/post/troubleshooting-k8s-network/","section":"post","summary":"有人建了一个 GitHub 仓库，专门汇总使用 Kubernetes 失败的案例。Kubernetes 是一个相当复杂的系统，它有许多组件，生态在不断发展，并且还在添加更多层，比","tags":["kubernetes","iptables","Netfilter","tcpdump"],"title":"Kubernetes翻船事故汇总","type":"post","url":"/post/troubleshooting-k8s-network/","weight":0,"wordcount":674},{"author":null,"categories":null,"content":null,"date":1556323200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556323200,"objectID":"","permalink":"https://qnxr.xyz/tags/netfilter/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/netfilter/","section":"tags","summary":"","tags":null,"title":"Netfilter","type":"tags","url":"/tags/netfilter/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556323200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556323200,"objectID":"","permalink":"https://qnxr.xyz/tags/tcpdump/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tcpdump/","section":"tags","summary":"","tags":null,"title":"tcpdump","type":"tags","url":"/tags/tcpdump/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556150400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556150400,"objectID":"","permalink":"https://qnxr.xyz/tags/oss/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/oss/","section":"tags","summary":"","tags":null,"title":"OSS","type":"tags","url":"/tags/oss/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556150400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556150400,"objectID":"","permalink":"https://qnxr.xyz/tags/%E5%9B%BE%E5%BA%8A/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%9B%BE%E5%BA%8A/","section":"tags","summary":"","tags":null,"title":"图床","type":"tags","url":"/tags/%E5%9B%BE%E5%BA%8A/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556150400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556150400,"objectID":"","permalink":"https://qnxr.xyz/tags/%E5%BE%AE%E5%8D%9A/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BE%AE%E5%8D%9A/","section":"tags","summary":"","tags":null,"title":"微博","type":"tags","url":"/tags/%E5%BE%AE%E5%8D%9A/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556150400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":["微博","阿里云","OSS","图床"],"kind":"page","lang":"en","lastmod":1556150400,"objectID":"bc7476f352e86ee916530fadcadc2823","permalink":"https://qnxr.xyz/post/sina-img-transfer-to-oss/","publishdate":"2019-04-25T00:00:00Z","readingtime":2,"relpermalink":"/post/sina-img-transfer-to-oss/","section":"post","summary":"\u003cp\u003e今天发现博客上大量图片显示不出来了，打开\u003ccode\u003eChrome\u003c/code\u003e控制台一看出现了大量的 403 图片\u003c/p\u003e\n\u003cp\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/2mmzz.png\" alt=\"sina image 403\"\u003e\n\n\u003c/p\u003e\n\u003cp\u003e这就是薅微博图床的羊毛的后果，应该是微博图床这边升级了访问策略，幸运的是直接打开图片地址还是可以访问的，不然就有得ಥ_ಥ了，这么多图片丢失了那就坑爹了，怎么办？迁移呗~~\u003c/p\u003e","tags":["微博","阿里云","OSS","图床"],"title":"微博图床一键迁移到阿里云 OSS","type":"post","url":"/post/sina-img-transfer-to-oss/","weight":0,"wordcount":785},{"author":null,"categories":null,"content":null,"date":1556150400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556150400,"objectID":"","permalink":"https://qnxr.xyz/tags/%E9%98%BF%E9%87%8C%E4%BA%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%98%BF%E9%87%8C%E4%BA%91/","section":"tags","summary":"","tags":null,"title":"阿里云","type":"tags","url":"/tags/%E9%98%BF%E9%87%8C%E4%BA%91/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556064000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556064000,"objectID":"","permalink":"https://qnxr.xyz/tags/highlight/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/highlight/","section":"tags","summary":"","tags":null,"title":"highlight","type":"tags","url":"/tags/highlight/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556064000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556064000,"objectID":"","permalink":"https://qnxr.xyz/tags/keynote/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/keynote/","section":"tags","summary":"","tags":null,"title":"keynote","type":"tags","url":"/tags/keynote/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556064000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1556064000,"objectID":"","permalink":"https://qnxr.xyz/tags/mac/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mac/","section":"tags","summary":"","tags":null,"title":"Mac","type":"tags","url":"/tags/mac/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1556064000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":["keynote","highlight","Mac","高亮","PPT"],"kind":"page","lang":"en","lastmod":1556064000,"objectID":"47e1756e18ce22ee5e76f4ac3c6f9965","permalink":"https://qnxr.xyz/post/insert-code-on-keynote/","publishdate":"2019-04-24T00:00:00Z","readingtime":2,"relpermalink":"/post/insert-code-on-keynote/","section":"post","summary":"\u003cp\u003e这两天在开始做 Golang 的实战课程，课程内容基本上规划得差不多了，现在在开始做 PPT 内容，但是做出的 PPT 内容始终感觉有点丑陋，特别是有时候需要或多或少的在 PPT 中展示下代码的时候，直接截图效果也不是很有好。于是一通查找在 keynote 中能够很好的显示代码的方法，找到一个比较友好的解决方法：\u003cstrong\u003e使用 RTF 格式插入文字格式的高亮代码。\u003c/strong\u003e\u003c/p\u003e","tags":["keynote","highlight","Mac"],"title":"如何在 Keynote 中插入高亮代码？","type":"post","url":"/post/insert-code-on-keynote/","weight":0,"wordcount":597},{"author":null,"categories":null,"content":null,"date":1555459200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1555459200,"objectID":"","permalink":"https://qnxr.xyz/tags/hugo/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/hugo/","section":"tags","summary":"","tags":null,"title":"Hugo","type":"tags","url":"/tags/hugo/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1555459200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1555459200,"objectID":"","permalink":"https://qnxr.xyz/tags/pipes/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pipes/","section":"tags","summary":"","tags":null,"title":"Pipes","type":"tags","url":"/tags/pipes/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1555459200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1555459200,"objectID":"","permalink":"https://qnxr.xyz/tags/webpack/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/webpack/","section":"tags","summary":"","tags":null,"title":"webpack","type":"tags","url":"/tags/webpack/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1555459200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":["Hugo","Pipes","压缩","合并","静态资源"],"kind":"page","lang":"en","lastmod":1555459200,"objectID":"24d77cea6fe13a24845d53bd886177a6","permalink":"https://qnxr.xyz/post/hugo-pipes-process-assets/","publishdate":"2019-04-17T00:00:00Z","readingtime":4,"relpermalink":"/post/hugo-pipes-process-assets/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://www.qikqiak.com/tags/hugo/\"\u003eHugo\u003c/a\u003e是一个非常强大的静态博客生成工具，没错你们正在看的本博客也是用\u003ccode\u003eHugo\u003c/code\u003e来生成的博客文章。作为一个对速度有着强烈要求的博主，整个网站使用的阿里云的全站加速功能，虽然博客上图片资源不算少，但是大部分用户访问的时候应该速度不算太慢，为了能够进一步提升访问速度，自然而然想到的就是对 CSS 样式或者 JS 文件进行合并压缩了。\u003c/p\u003e","tags":["Hugo","Pipes","webpack"],"title":"利用 Hugo Pipes 处理资源文件","type":"post","url":"/post/hugo-pipes-process-assets/","weight":0,"wordcount":1554},{"author":null,"categories":null,"content":null,"date":1555286400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1555286400,"objectID":"","permalink":"https://qnxr.xyz/tags/adsense/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/adsense/","section":"tags","summary":"","tags":null,"title":"Adsense","type":"tags","url":"/tags/adsense/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1555286400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":["Hugo","Adsense","广告","Google"],"kind":"page","lang":"en","lastmod":1555286400,"objectID":"459035e32031c7f10f6e82558b289c66","permalink":"https://qnxr.xyz/post/add-adsense-in-hugo-article/","publishdate":"2019-04-15T00:00:00Z","readingtime":2,"relpermalink":"/post/add-adsense-in-hugo-article/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/add-adsense-in-hugo-article/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/Lu3u0b.jpg\" alt=\"adsense hugo\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e之前在首页添加了 Google Adsense 信息流广告，文章详情页没有添加，而文章详情页是 Hugo 编译 markdown 文档过后的，我们可以通过主题下面的\u003ccode\u003elayouts/_default/single.html\u003c/code\u003e看到模板中是通\u003ccode\u003e{{ .Content }}\u003c/code\u003e进行渲染的，那么如果我们想要在文章中添加 Adsense 广告的话呢？应该怎样添加呢？\u003c/p\u003e\n\u003cp\u003e其实很简单，我们只需要在文章中加上一个特殊的标签，然后在模板中将该标签替换掉即可。我们在用 Hugo 写文章的时候添加的\u003ccode\u003e\u0026lt; !--more--\u0026gt;\u003c/code\u003e标签就是这种原理。\u003c/p\u003e","tags":["Hugo","Adsense"],"title":"在 Hugo 文章中添加 Adsense 广告单元","type":"post","url":"/post/add-adsense-in-hugo-article/","weight":0,"wordcount":762},{"author":null,"categories":null,"content":null,"date":1555200000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["kubernetes","nginx","ingress","helm","traefik"],"kind":"page","lang":"en","lastmod":1555200000,"objectID":"26f03adf020a48e734d873b8e9886a45","permalink":"https://qnxr.xyz/post/install-nginx-ingress/","publishdate":"2019-04-14T00:00:00Z","readingtime":3,"relpermalink":"/post/install-nginx-ingress/","section":"post","summary":"\u003cp\u003enginx-ingress 和 traefik 都是比如热门的 ingress-controller，作为反向代理将外部流量导入集群内部，将 Kubernetes 内部的 Service 暴露给外部，在 Ingress 对象中通过域名匹配 Service，这样就可以直接通过域名访问到集群内部的服务了。相对于 traefik 来说，nginx-ingress 性能更加优秀，但是配置比 traefik 要稍微复杂一点，当然功能也要强大一些，支持的功能多许多，前面我们为大家介绍了 traefik 的使用，今天为大家介绍下 nginx-ingress 在 Kubernetes 中的安装使用。\u003c/p\u003e","tags":["kubernetes","nginx","ingress","helm","traefik"],"title":"nginx-ingress 的安装使用","type":"post","url":"/post/install-nginx-ingress/","weight":0,"wordcount":1247},{"author":null,"categories":null,"content":null,"date":1555200000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1555200000,"objectID":"","permalink":"https://qnxr.xyz/tags/oauth/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/oauth/","section":"tags","summary":"","tags":null,"title":"oauth","type":"tags","url":"/tags/oauth/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1555200000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":["kubernetes","traefik","nginx","ingress","oauth","basic auth","安全"],"kind":"page","lang":"en","lastmod":1555200000,"objectID":"b9afeac8aeb5cb7db55bbc69141e5f15","permalink":"https://qnxr.xyz/post/how-to-protect-exposed-k8s-server/","publishdate":"2019-04-14T00:00:00Z","readingtime":4,"relpermalink":"/post/how-to-protect-exposed-k8s-server/","section":"post","summary":"\u003cp\u003e有时候我们需要在 Kubernetes 中暴露一些没有任何安全验证机制的服务，比如没有安装 xpack 的 Kibana，没有开启登录认证的 Jenkins 服务之类的，我们也想通过域名来进行访问，比较域名比较方便，更主要的是对于 Kubernetes 里面的服务，通过 Ingress 暴露一个服务太方便了，而且还可以通过 cert-manager 来自动的完成\u003ccode\u003eHTTPS\u003c/code\u003e化。所以就非常有必要对这些服务进行一些安全验证了。\u003c/p\u003e","tags":["kubernetes","traefik","nginx","ingress","oauth"],"title":"如何保护对外暴露的 Kubernetes 服务","type":"post","url":"/post/how-to-protect-exposed-k8s-server/","weight":0,"wordcount":1803},{"author":null,"categories":null,"content":null,"date":1555027200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4900,"html":null,"keywords":["kubernetes","Jenkins","Gitlab","Harbor","Helm","Docker","Pipeline","CI/CD","流水线","devops"],"kind":"page","lang":"en","lastmod":1555027200,"objectID":"768fa879ef017b230a380170fa023cf9","permalink":"https://qnxr.xyz/post/complete-cicd-demonstrate-1/","publishdate":"2019-04-12T00:00:00Z","readingtime":10,"relpermalink":"/post/complete-cicd-demonstrate-1/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/gitlab-ci-k8s-cluster-feature/\"\u003e上节课和大家介绍了\u003ccode\u003eGitlab CI\u003c/code\u003e结合\u003ccode\u003eKubernetes\u003c/code\u003e进行 CI/CD 的完整过程\u003c/a\u003e。这节课结合前面所学的知识点给大家介绍一个完整的示例：使用 Jenkins + Gitlab + Harbor + Helm + Kubernetes 来实现一个完整的 CI/CD 流水线作业。\u003c/p\u003e\n\u003cp\u003e其实前面的课程中我们就\u003ca href=\"/post/kubernetes-jenkins1/\"\u003e已经学习了 Jenkins Pipeline 与 Kubernetes 的完美结合\u003c/a\u003e，我们利用 Kubernetes 来动态运行 Jenkins 的 Slave 节点，可以和好的来解决传统的 Jenkins Slave 浪费大量资源的缺点。之前的示例中我们是将项目放置在 Github 仓库上的，将 Docker 镜像推送到了 Docker Hub，这节课我们来结合我们前面学习的知识点来综合运用下，使用 Jenkins、Gitlab、Harbor、Helm、Kubernetes 来实现一个完整的持续集成和持续部署的流水线作业。\u003c/p\u003e","tags":["kubernetes","Jenkins","Gitlab","Harbor","Helm","Docker","Pipeline","devops"],"title":"基于 Jenkins、Gitlab、Harbor、Helm 和 Kubernetes 的 CI/CD(一)","type":"post","url":"/post/complete-cicd-demonstrate-1/","weight":0,"wordcount":4845},{"author":null,"categories":null,"content":null,"date":1554076800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":["kubernetes","prometheus","书籍","深入浅出"],"kind":"page","lang":"en","lastmod":1554076800,"objectID":"52fe1137d64cdecf4f8149d5c545c867","permalink":"https://qnxr.xyz/post/prometheus-book/","publishdate":"2019-04-01T00:00:00Z","readingtime":6,"relpermalink":"/post/prometheus-book/","section":"post","summary":"\u003cp\u003e千呼万唤始出来，国内第一本全方位讲解\u003ccode\u003ePrometheus\u003c/code\u003e的书籍\u003ccode\u003e《深入浅出Prometheus》\u003c/code\u003e终于出版了，非常荣幸能和陈晓宇、陈啸两位老师参与本书的编写，这也是我参与的第一本严格意义上的书籍，另外两位老师对于\u003ccode\u003ePrometheus\u003c/code\u003e研究的深度让我非常佩服，在编写本书的过程中也学习到了很多专业的知识，特别是关于\u003ccode\u003ePrometheus\u003c/code\u003e原理和源码方面的认识，之前都只是局限于应用层面，在了解了原理过后显然可以让我们更加有信心去使用\u003ccode\u003ePrometheus\u003c/code\u003e。\u003c/p\u003e","tags":["kubernetes","prometheus"],"title":"《深入浅出Prometheus》","type":"post","url":"/post/prometheus-book/","weight":0,"wordcount":2638},{"author":null,"categories":null,"content":null,"date":1553126400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4400,"html":null,"keywords":["kubernetes","devops","gitlab","ci","CI/CD","runner"],"kind":"page","lang":"en","lastmod":1553126400,"objectID":"f3aa527e0cab81bca20f5e09a11ffbbe","permalink":"https://qnxr.xyz/post/gitlab-ci-k8s-cluster-feature/","publishdate":"2019-03-21T00:00:00Z","readingtime":9,"relpermalink":"/post/gitlab-ci-k8s-cluster-feature/","section":"post","summary":"\u003cp\u003e上节课我们将 \u003ca href=\"/post/gitlab-runner-install-on-k8s/\"\u003eGitlab CI Runner 安装到了 Kubernetes\u003c/a\u003e 集群中，接下来看看如何结合 Kubernetes 和 Gitlab CI 进行持续集成和持续部署。\u003c/p\u003e","tags":["kubernetes","devops","gitlab","ci"],"title":"Gitlab CI 与 Kubernetes 的结合","type":"post","url":"/post/gitlab-ci-k8s-cluster-feature/","weight":0,"wordcount":4376},{"author":null,"categories":null,"content":null,"date":1552953600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2900,"html":null,"keywords":["kubernetes","devops","gitlab","ci","runner"],"kind":"page","lang":"en","lastmod":1552953600,"objectID":"b2ac6305406faa618e20ae12287d649f","permalink":"https://qnxr.xyz/post/gitlab-runner-install-on-k8s/","publishdate":"2019-03-19T00:00:00Z","readingtime":6,"relpermalink":"/post/gitlab-runner-install-on-k8s/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/gitlab-install-on-k8s/\"\u003e上节课我们使用 Helm 快速的将 Gitlab 安装到了我们的 Kubernetes 集群中\u003c/a\u003e，这节课来和大家介绍如何使用 Gitlab CI 来做持续集成，首先先给大家介绍一些关于 Gitlab CI 的一些基本概念，以及如何在 Kubernetes 上安装 Gitlab CI Runner。\u003c/p\u003e","tags":["kubernetes","devops","gitlab","ci"],"title":"在 Kubernetes 上安装 Gitlab CI Runner","type":"post","url":"/post/gitlab-runner-install-on-k8s/","weight":0,"wordcount":2896},{"author":null,"categories":null,"content":null,"date":1552867200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":["kubernetes","培训","课程","线下"],"kind":"page","lang":"en","lastmod":1552867200,"objectID":"f7e3be1947d0187eb2c28a099ac35380","permalink":"https://qnxr.xyz/post/k8s-offline-training/","publishdate":"2019-03-18T00:00:00Z","readingtime":1,"relpermalink":"/post/k8s-offline-training/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/k8s-offline-training/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/7wz2en.jpg\" alt=\"k8s training\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eKubernetes 是谷歌开源的容器集群编排平台，是一个完备的分布式系统支撑平台，为容器化应用提供部署运行、资源调度、服务发现和动态伸缩等一系列完整功能，具有强大的故障发现和自我修复机制、服务滚动升级和在线扩容能力，可扩展资源自动调度机制以及多粒度的资源配额管理能力。\u003c/p\u003e","tags":["kubernetes","培训","课程"],"title":"Kubernetes 线下3天闭门集训","type":"post","url":"/post/k8s-offline-training/","weight":0,"wordcount":387},{"author":null,"categories":null,"content":null,"date":1552867200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1552867200,"objectID":"","permalink":"https://qnxr.xyz/tags/%E5%9F%B9%E8%AE%AD/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%9F%B9%E8%AE%AD/","section":"tags","summary":"","tags":null,"title":"培训","type":"tags","url":"/tags/%E5%9F%B9%E8%AE%AD/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1551916800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1551916800,"objectID":"","permalink":"https://qnxr.xyz/tags/redis/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/redis/","section":"tags","summary":"","tags":null,"title":"redis","type":"tags","url":"/tags/redis/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1551916800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":["helm","devops","docker","kubernetes","安装","redis","gitlab","postgresql"],"kind":"page","lang":"en","lastmod":1551916800,"objectID":"608981603533baa3b3a65f396bd38b8b","permalink":"https://qnxr.xyz/post/gitlab-install-on-k8s/","publishdate":"2019-03-07T00:00:00Z","readingtime":5,"relpermalink":"/post/gitlab-install-on-k8s/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/gitlab-install-on-k8s/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/vTUWg8.jpg\" alt=\"gitlab on k8s\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eGitlab\u003c/code\u003e官方提供了 Helm 的方式在 Kubernetes 集群中来快速安装，但是在使用的过程中发现 Helm 提供的 Chart 包中有很多其他额外的配置，所以我们这里使用自定义的方式来安装，也就是自己来定义一些资源清单文件。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eGitlab\u003c/code\u003e主要涉及到3个应用：Redis、Postgresql、Gitlab 核心程序，实际上我们只要将这3个应用分别启动起来，然后加上对应的配置就可以很方便的安装 Gitlab 了，我们这里选择使用的镜像不是官方的，而是 Gitlab 容器化中使用非常多的一个第三方镜像：\u003ccode\u003esameersbn/gitlab\u003c/code\u003e，基本上和官方保持同步更新，地址：\u003ca href=\"http://www.damagehead.com/docker-gitlab/\"\u003ehttp://www.damagehead.com/docker-gitlab/\u003c/a\u003e\u003c/p\u003e","tags":["gitlab","devops","docker","kubernetes","redis"],"title":"在 Kubernetes 上安装 Gitlab","type":"post","url":"/post/gitlab-install-on-k8s/","weight":0,"wordcount":2154},{"author":null,"categories":null,"content":null,"date":1550793600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":5200,"html":null,"keywords":["harbor","docker","kubernetes","安装","registry"],"kind":"page","lang":"en","lastmod":1550793600,"objectID":"9e43b4df27b7218053ebfece9999632a","permalink":"https://qnxr.xyz/post/harbor-quick-install/","publishdate":"2019-02-22T00:00:00Z","readingtime":11,"relpermalink":"/post/harbor-quick-install/","section":"post","summary":"\u003cp\u003e前面我们和大家简单分析了\u003ca href=\"/post/harbor-code-analysis/\"\u003eHarbor 的实现原理和部分源代码\u003c/a\u003e，这节课给大家介绍下如何快速安装并使用 Harbor。\u003c/p\u003e","tags":["harbor","docker","kubernetes","helm"],"title":"在 Kubernetes 在快速安装 Harbor","type":"post","url":"/post/harbor-quick-install/","weight":0,"wordcount":5143},{"author":null,"categories":null,"content":null,"date":1550620800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4700,"html":null,"keywords":["harbor","docker","kubernetes","源码","registry"],"kind":"page","lang":"en","lastmod":1550620800,"objectID":"6900d9e9bb7c978c7c3df42bd25e744a","permalink":"https://qnxr.xyz/post/harbor-code-analysis/","publishdate":"2019-02-20T00:00:00Z","readingtime":10,"relpermalink":"/post/harbor-code-analysis/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/harbor-code-analysis/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/Q2xt5X.jpg\" alt=\"harbor\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/goharbor/harbor\"\u003eHarbor\u003c/a\u003e 是一个\u003ccode\u003eCNCF\u003c/code\u003e基金会托管的开源的可信的云原生\u003ccode\u003edocker registry\u003c/code\u003e项目，可以用于存储、签名、扫描镜像内容，Harbor 通过添加一些常用的功能如安全性、身份权限管理等来扩展 docker registry 项目，此外还支持在 registry 之间复制镜像，还提供更加高级的安全功能，如用户管理、访问控制和活动审计等，在新版本中还添加了\u003ccode\u003eHelm\u003c/code\u003e仓库托管的支持。\u003c/p\u003e","tags":["harbor","docker","kubernetes"],"title":"Harbor 源码浅析","type":"post","url":"/post/harbor-code-analysis/","weight":0,"wordcount":4675},{"author":null,"categories":null,"content":null,"date":1550534400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1550534400,"objectID":"","permalink":"https://qnxr.xyz/tags/metaclass/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/metaclass/","section":"tags","summary":"","tags":null,"title":"metaclass","type":"tags","url":"/tags/metaclass/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1550534400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4800,"html":null,"keywords":["python","元类","metaclass"],"kind":"page","lang":"en","lastmod":1550534400,"objectID":"337c76de06c55f80ff0517ccb79a3869","permalink":"https://qnxr.xyz/post/what-is-metaclass-in-python/","publishdate":"2019-02-19T00:00:00Z","readingtime":10,"relpermalink":"/post/what-is-metaclass-in-python/","section":"post","summary":"\u003cp\u003e这是一篇在\u003ca href=\"http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python\"\u003eStack overflow\u003c/a\u003e上很热的帖子。提问者自称已经掌握了有关 Python OOP 编程中的各种概念，但始终觉得元类(metaclass)难以理解。他知道这肯定和自省有关，但仍然觉得不太明白，希望大家可以给出一些实际的例子和代码片段以帮助理解，以及在什么情况下需要进行元编程。于是 e-satis 同学给出了神一般的回复，该回复获得了985点的赞同点数，更有人评论说这段回复应该加入到 Python 的官方文档中去。\u003c/p\u003e","tags":["python","metaclass"],"title":"深入理解 Python 元类","type":"post","url":"/post/what-is-metaclass-in-python/","weight":0,"wordcount":4792},{"author":null,"categories":null,"content":null,"date":1550448000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2600,"html":null,"keywords":["机器学习","入门","AI","小白","必修课"],"kind":"page","lang":"en","lastmod":1550448000,"objectID":"e977bfc7bcd9bfb9c65aaaf17bbfe0d2","permalink":"https://qnxr.xyz/post/ai-start-course/","publishdate":"2019-02-18T00:00:00Z","readingtime":6,"relpermalink":"/post/ai-start-course/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/ai-start-course/\"\u003e\n  \u003cimg src=\"https://images.gitbook.cn/FkgyuMCADQVOT1IYxJ9pR2HnFlV2\" alt=\"21天入门机器学习\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eAI 时代，大家都对各种人工智能岗位充满好奇和憧憬，但普遍都不了解，各个岗位具体是做什么工作的。在这里给大家打个比喻，虽然不太恰当，但非常形象！\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e做算法是屠龙，仗剑江湖，天外飞仙；\u003c/li\u003e\n\u003cli\u003e做工程是狩猎，跃马奔腾，纵酒狂歌；\u003c/li\u003e\n\u003cli\u003e做数据是养猪，每天拌猪食清猪粪，一脸土一身泥。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAI 原本是一个专业领域，没什么特别的。作为码农一枚，笔者的工作内容正好在这个领域。\u003c/p\u003e","tags":["机器学习","AI","python"],"title":"21天入门机器学习","type":"post","url":"/post/ai-start-course/","weight":0,"wordcount":2523},{"author":null,"categories":null,"content":null,"date":1550448000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1550448000,"objectID":"","permalink":"https://qnxr.xyz/tags/ai/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ai/","section":"tags","summary":"","tags":null,"title":"AI","type":"tags","url":"/tags/ai/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1550448000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1550448000,"objectID":"","permalink":"https://qnxr.xyz/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/","section":"tags","summary":"","tags":null,"title":"机器学习","type":"tags","url":"/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1548720000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1548720000,"objectID":"","permalink":"https://qnxr.xyz/tags/django/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/django/","section":"tags","summary":"","tags":null,"title":"django","type":"tags","url":"/tags/django/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1548720000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1548720000,"objectID":"","permalink":"https://qnxr.xyz/tags/mysql/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mysql/","section":"tags","summary":"","tags":null,"title":"mysql","type":"tags","url":"/tags/mysql/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1548720000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":["django","DateTimeField","mysql"],"kind":"page","lang":"en","lastmod":1548720000,"objectID":"1f3207f14b96aa4143a7f6c499a73e47","permalink":"https://qnxr.xyz/post/how-to-add-datetimefield-in-django-without-microsecond/","publishdate":"2019-01-29T00:00:00Z","readingtime":4,"relpermalink":"/post/how-to-add-datetimefield-in-django-without-microsecond/","section":"post","summary":"\u003cp\u003e今天在项目中遇到一个\u003ccode\u003eDjango\u003c/code\u003e的大坑，一个很简单的分页问题，造成了数据重复。最后排查发现是\u003ccode\u003eDateTimeField\u003c/code\u003e 属性引起的。\u003c/p\u003e\n\u003cp\u003e下面描述下问题，下面是我需要用到的一个 Task Model 基本定义：\u003c/p\u003e","tags":["django","mysql"],"title":"在 Django 中如何添加没有微秒的 DateTimeField 属性","type":"post","url":"/post/how-to-add-datetimefield-in-django-without-microsecond/","weight":0,"wordcount":1676},{"author":null,"categories":null,"content":null,"date":1548288000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1548288000,"objectID":"","permalink":"https://qnxr.xyz/tags/deployment/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/deployment/","section":"tags","summary":"","tags":null,"title":"deployment","type":"tags","url":"/tags/deployment/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1548288000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":6000,"html":null,"keywords":["kubernetes","deployment","灰度","蓝绿","AB测试"],"kind":"page","lang":"en","lastmod":1548288000,"objectID":"6b3c8498b952d951d1aa3705cbe2a648","permalink":"https://qnxr.xyz/post/k8s-deployment-strategies/","publishdate":"2019-01-24T00:00:00Z","readingtime":12,"relpermalink":"/post/k8s-deployment-strategies/","section":"post","summary":"\u003cp\u003e在\u003ccode\u003eKubernetes\u003c/code\u003e中有几种不同的方式发布应用，所以为了让应用在升级期间依然平稳提供服务，选择一个正确的发布策略就非常重要了。\u003c/p\u003e\n\u003cp\u003e选择正确的部署策略是要依赖于我们的业务需求的，下面我们列出了一些可能会使用到的策略：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e重建(recreate)：停止旧版本部署新版本\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e滚动更新(rolling-update)：一个接一个地以滚动更新方式发布新版本\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e蓝绿(blue/green)：新版本与旧版本一起存在，然后切换流量\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e金丝雀(canary)：将新版本面向一部分用户发布，然后继续全量发布\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA/B测(a/b testing)：以精确的方式（HTTP 头、cookie、权重等）向部分用户发布新版本。\u003ccode\u003eA/B测\u003c/code\u003e实际上是一种基于数据统计做出业务决策的技术。在 Kubernetes 中并不原生支持，需要额外的一些高级组件来完成改设置（比如Istio、Linkerd、Traefik、或者自定义 Nginx/Haproxy 等）。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","tags":["kubernetes","deployment"],"title":"Kubernetes 部署策略详解","type":"post","url":"/post/k8s-deployment-strategies/","weight":0,"wordcount":5910},{"author":null,"categories":null,"content":null,"date":1548028800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":["kubernetes","CloudNative","课程","华为","istio"],"kind":"page","lang":"en","lastmod":1548028800,"objectID":"7937bcd85d8f19f9fca26280763ad967","permalink":"https://qnxr.xyz/post/k8s-istio-course/","publishdate":"2019-01-21T00:00:00Z","readingtime":2,"relpermalink":"/post/k8s-istio-course/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/k8s-istio-course/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/BF9SiB.jpg\" alt=\"istio\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eIstio\u003c/code\u003e，是一个由 Google，Lyft，IBM 联合开发的开源项目，是服务网格（Service Mesh）技术的一个标准化的开源实现，致力于解决应用的微服务化组件之间的连接控制与安全、流量管理与可观测性。Istio 是云原生领域在 Kubernetes 之后最受关注的项目，帮助容器技术实践者从基础设施层的“容器编排“进阶到应用层的“服务治理”。Istio 先天与 Kubernetes 无缝衔接，了解并使用 Istio 可以极大地提升研发和运维的工作效率。\u003c/p\u003e","tags":["kubernetes","istio","课程"],"title":"Istio 实训免费视频课程","type":"post","url":"/post/k8s-istio-course/","weight":0,"wordcount":778},{"author":null,"categories":null,"content":null,"date":1547510400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1547510400,"objectID":"","permalink":"https://qnxr.xyz/tags/cka/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cka/","section":"tags","summary":"","tags":null,"title":"CKA","type":"tags","url":"/tags/cka/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1547510400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":["kubernetes","CloudNative","课程","华为","CKA"],"kind":"page","lang":"en","lastmod":1547510400,"objectID":"cc2ba1276b9e4fbe0b6eb5a70be7441b","permalink":"https://qnxr.xyz/post/k8s-cka-course/","publishdate":"2019-01-15T00:00:00Z","readingtime":2,"relpermalink":"/post/k8s-cka-course/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/k8s-cka-course/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/kqPNDq.jpg\" alt=\"cka\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e本系列课程参考 CKA (Certificted Kubernetes Administrator) 知识体系进行课程设计，并结合华为在 kubernetes 项目推广过程中的实践经验，理论+实践让用户快速掌握kubernetes的使用和维护技能。\u003c/p\u003e","tags":["kubernetes","CKA","课程"],"title":"Kubernetes CKA 实训免费视频课程","type":"post","url":"/post/k8s-cka-course/","weight":0,"wordcount":727},{"author":null,"categories":null,"content":null,"date":1547164800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1547164800,"objectID":"","permalink":"https://qnxr.xyz/tags/dns/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dns/","section":"tags","summary":"","tags":null,"title":"dns","type":"tags","url":"/tags/dns/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1547164800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":["kubernetes","coredns","kubedns","网络互通"],"kind":"page","lang":"en","lastmod":1547164800,"objectID":"a44a49eadc4640c8dc9a632776a768f3","permalink":"https://qnxr.xyz/post/office-env-k8s-network/","publishdate":"2019-01-11T00:00:00Z","readingtime":4,"relpermalink":"/post/office-env-k8s-network/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/office-env-k8s-network/\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/HbjHRJ.jpg\" alt=\"office-env-k8s-network\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e在 kubernetes 的网络模型中，基于官方默认的 CNI 网络插件 Flannel，这种 Overlay Network（覆盖网络）可以轻松的实现 pod 间网络的互通。当我们把基于 spring cloud 的微服务迁移到 k8s 中后，无须任何改动，微服务 pod 可以通过 Eureka 注册后可以互相轻松访问。除此之外，我们可以通过 ingress + ingress controller ，在每个节点上，把基于 http 80端口、https 443端口的用户请求流量引入到集群服务中。\u003c/p\u003e","tags":["kubernetes","dns","coredns"],"title":"办公环境下 kubernetes 网络互通方案","type":"post","url":"/post/office-env-k8s-network/","weight":0,"wordcount":1941},{"author":null,"categories":null,"content":null,"date":1546992000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1546992000,"objectID":"2f05902e7435de187bb5303fb74f55e2","permalink":"https://qnxr.xyz/post/readme/","publishdate":"2019-01-09T00:00:00Z","readingtime":2,"relpermalink":"/post/readme/","section":"post","summary":"Clean White Theme for Hugo CleanWhite is a clean, elegant, but fully functional blog theme for Hugo. Here is a live demo site using this theme. It is based on huxblog Jekyll Theme and Clean Blog Jekyll Theme. These two upstream projects have done awesome jobs to create a blog theme, what I\u0026rsquo;m doing here is porting it to Hugo, of which I like the simplicity and the much faster","tags":null,"title":"Clean White Theme for Hugo","type":"post","url":"/post/readme/","weight":0,"wordcount":953},{"author":null,"categories":null,"content":null,"date":1546646400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1546646400,"objectID":"","permalink":"https://qnxr.xyz/tags/jvm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/jvm/","section":"tags","summary":"","tags":null,"title":"jvm","type":"tags","url":"/tags/jvm/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1546646400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":["docker","容器","java","jvm"],"kind":"page","lang":"en","lastmod":1546646400,"objectID":"9720871866795884cf80908b8bcba395","permalink":"https://qnxr.xyz/post/running-jvm-inside-a-container/","publishdate":"2019-01-05T00:00:00Z","readingtime":1,"relpermalink":"/post/running-jvm-inside-a-container/","section":"post","summary":"https://medium.com/domain-tech/running-jvm-inside-a-container-what-you-need-to-know-aac6fa6c12c8","tags":["docker","java","jvm"],"title":"在 Docker 容器中运行 JVM 的注意事项","type":"post","url":"/post/running-jvm-inside-a-container/","weight":0,"wordcount":1},{"author":null,"categories":null,"content":null,"date":1546041600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":["Prometheus","删除","数据指标","metrics"],"kind":"page","lang":"en","lastmod":1546041600,"objectID":"687e750126f0e0a5f82f03669382f30f","permalink":"https://qnxr.xyz/post/prometheus-delete-metrics/","publishdate":"2018-12-29T00:00:00Z","readingtime":2,"relpermalink":"/post/prometheus-delete-metrics/","section":"post","summary":"\u003cp\u003e有的时候我们可能希望从 Prometheus 中删除一些不需要的数据指标，或者只是单纯的想要释放一些磁盘空间。Prometheus 中的时间序列只能通过 HTTP API 来进行管理。\u003c/p\u003e","tags":["Prometheus"],"title":"Prometheus 删除数据指标","type":"post","url":"/post/prometheus-delete-metrics/","weight":0,"wordcount":619},{"author":null,"categories":null,"content":null,"date":1545955200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2600,"html":null,"keywords":["kubernetes","EFK","ElasticSearch","Kibana","Fluentd","架构"],"kind":"page","lang":"en","lastmod":1545955200,"objectID":"57ebb6b8e4f940a23421c64230f98696","permalink":"https://qnxr.xyz/post/kubernetes-logs-architecture/","publishdate":"2018-12-28T00:00:00Z","readingtime":6,"relpermalink":"/post/kubernetes-logs-architecture/","section":"post","summary":"\u003cp\u003e前面的课程中和大家一起学习了 Kubernetes 集群中监控系统的搭建，除了对集群的监控报警之外，还有一项运维工作是非常重要的，那就是日志的收集。\u003c/p\u003e","tags":["kubernetes","ElasticSearch","fluentd"],"title":"kubernetes 日志架构","type":"post","url":"/post/kubernetes-logs-architecture/","weight":0,"wordcount":2543},{"author":null,"categories":null,"content":null,"date":1545436800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":["kubernetes","课程","优惠"],"kind":"page","lang":"en","lastmod":1545436800,"objectID":"092873d7836a2cea35982d795ec88851","permalink":"https://qnxr.xyz/post/shengdan-promotion/","publishdate":"2018-12-22T00:00:00Z","readingtime":1,"relpermalink":"/post/shengdan-promotion/","section":"post","summary":"\u003cp\u003e学生A：今天冬至了，老师你们的课程有没有优惠活动啊？\u003c/p\u003e\n\u003cp\u003e老师：呃\u0026hellip;\u0026hellip;\u003c/p\u003e\n\u003cp\u003e学生B：老师马上圣诞节了，课程可不可以优惠点啊？\u003c/p\u003e\n\u003cp\u003e老师：呃\u0026hellip;\u0026hellip;\u003c/p\u003e\n\u003cp\u003e学生C：老师你看马上就是元旦节了哦，肯定会有优惠的吧？\u003c/p\u003e\n\u003cp\u003e老师：呃\u0026hellip;\u0026hellip;（为什么会有这么多节日呢？崩溃\u0026hellip;\u0026hellip;）\u003c/p\u003e","tags":["kubernetes","课程"],"title":"圣诞元旦课程优惠活动","type":"post","url":"/post/shengdan-promotion/","weight":0,"wordcount":436},{"author":null,"categories":null,"content":null,"date":1545264000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":["kubernetes","prometheus","operator","alertmanager","prometheus-operator","钉钉","持久化","自动发现"],"kind":"page","lang":"en","lastmod":1545264000,"objectID":"9c5da701026aaf3339830a73b3a97c83","permalink":"https://qnxr.xyz/post/prometheus-operator-advance/","publishdate":"2018-12-20T00:00:00Z","readingtime":5,"relpermalink":"/post/prometheus-operator-advance/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://mp.weixin.qq.com/s/M47g8E3BHzb6IhLiI1P5oA\"\u003e\n  \u003cimg src=\"https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/goc2kc.jpg\" alt=\"Prometheus Operator 高级配置\"\u003e\n\n\u003c/a\u003e\n\u003ca href=\"https://www.qikqiak.com/post/prometheus-operator-monitor-etcd\"\u003e上节课我们一起学习了如何在 Prometheus Operator 下面自定义一个监控选项\u003c/a\u003e，以及\u003ca href=\"https://www.qikqiak.com/post/prometheus-operator-custom-alert\"\u003e自定义报警规则\u003c/a\u003e的使用。那么我们还能够直接使用前面课程中的自动发现功能吗？如果在我们的 Kubernetes 集群中有了很多的 Service/Pod，那么我们都需要一个一个的去建立一个对应的 ServiceMonitor 对象来进行监控吗？这样岂不是又变得麻烦起来了？\u003c/p\u003e","tags":["kubernetes","prometheus","operator","storageclass"],"title":"Prometheus Operator 高级配置","type":"post","url":"/post/prometheus-operator-advance/","weight":0,"wordcount":2291},{"author":null,"categories":null,"content":null,"date":1545264000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1545264000,"objectID":"","permalink":"https://qnxr.xyz/tags/storageclass/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/storageclass/","section":"tags","summary":"","tags":null,"title":"StorageClass","type":"tags","url":"/tags/storageclass/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1545177600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":["kubernetes","prometheus","operator","alertmanager","prometheus-operator","钉钉"],"kind":"page","lang":"en","lastmod":1545177600,"objectID":"c3d431fe59df7153f1da2bee99d61008","permalink":"https://qnxr.xyz/post/prometheus-operator-custom-alert/","publishdate":"2018-12-19T00:00:00Z","readingtime":5,"relpermalink":"/post/prometheus-operator-custom-alert/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://www.qikqiak.com/post/prometheus-operator-monitor-etcd\"\u003e上篇文章我们介绍了如何自定义一个 ServiceMonitor 对象\u003c/a\u003e，但是如果需要自定义一个报警规则的话呢？又该怎么去做呢？\u003c/p\u003e","tags":["kubernetes","prometheus","operator","alertmanager"],"title":"Prometheus Operator 自定义报警","type":"post","url":"/post/prometheus-operator-custom-alert/","weight":0,"wordcount":2270},{"author":null,"categories":null,"content":null,"date":1545091200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1545091200,"objectID":"","permalink":"https://qnxr.xyz/tags/etcd/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/etcd/","section":"tags","summary":"","tags":null,"title":"etcd","type":"tags","url":"/tags/etcd/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1545091200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":["kubernetes","prometheus","operator","etcd","prometheus-operator"],"kind":"page","lang":"en","lastmod":1545091200,"objectID":"5e5867538b75855094dd3da9d6bf1498","permalink":"https://qnxr.xyz/post/prometheus-operator-monitor-etcd/","publishdate":"2018-12-18T00:00:00Z","readingtime":4,"relpermalink":"/post/prometheus-operator-monitor-etcd/","section":"post","summary":"\u003cp\u003e\u003ca href=\"/post/first-use-prometheus-operator/\"\u003e上节课和大家讲解了 Prometheus Operator 的安装和基本使用方法\u003c/a\u003e，这节课给大家介绍如何在 Prometheus Operator 中添加一个自定义的监控项。\u003c/p\u003e\n\u003cp\u003e除了 Kubernetes 集群中的一些资源对象、节点以及组件需要监控，有的时候我们可能还需要根据实际的业务需求去添加自定义的监控项，添加一个自定义监控的步骤也是非常简单的。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e第一步建立一个 ServiceMonitor 对象，用于 Prometheus 添加监控项\u003c/li\u003e\n\u003cli\u003e第二步为 ServiceMonitor 对象关联 metrics 数据接口的一个 Service 对象\u003c/li\u003e\n\u003cli\u003e第三步确保 Service 对象可以正确获取到 metrics 数据\u003c/li\u003e\n\u003c/ul\u003e","tags":["kubernetes","prometheus","operator","etcd"],"title":"Prometheus Operator 监控 etcd 集群","type":"post","url":"/post/prometheus-operator-monitor-etcd/","weight":0,"wordcount":1751},{"author":null,"categories":null,"content":null,"date":1544745600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["kubernetes","prometheus","grafana","loki","日志"],"kind":"page","lang":"en","lastmod":1544745600,"objectID":"66471c3aef4db80d2ac5392f7314fac9","permalink":"https://qnxr.xyz/post/grafana-log-tool-loki/","publishdate":"2018-12-14T00:00:00Z","readingtime":3,"relpermalink":"/post/grafana-log-tool-loki/","section":"post","summary":"\u003cp\u003e\n  \u003cimg src=\"/img/posts/grafana-loki-cover.png\" alt=\"\"\u003e\n\n\n\u003ccode\u003eLoki\u003c/code\u003e是 Grafana Labs 团队最新的开源项目，是一个水平可扩展，高可用性，多租户的日志聚合系统。它的设计非常经济高效且易于操作，因为它不会为日志内容编制索引，而是为每个日志流编制一组标签。项目受 Prometheus 启发，官方的介绍就是：\u003ccode\u003eLike Prometheus, but for logs.\u003c/code\u003e，类似于 Prometheus 的日志系统。\u003c/p\u003e","tags":["kubernetes","prometheus","grafana","loki","日志"],"title":"Grafana 日志聚合工具 Loki","type":"post","url":"/post/grafana-log-tool-loki/","weight":0,"wordcount":1081},{"author":null,"categories":null,"content":null,"date":1544745600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1544745600,"objectID":"","permalink":"https://qnxr.xyz/tags/%E6%97%A5%E5%BF%97/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%97%A5%E5%BF%97/","section":"tags","summary":"","tags":null,"title":"日志","type":"tags","url":"/tags/%E6%97%A5%E5%BF%97/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1544486400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3600,"html":null,"keywords":["kubernetes","prometheus","operator","安装","prometheus-operator"],"kind":"page","lang":"en","lastmod":1544486400,"objectID":"971b128b730207f4fafe63c7999c4a9a","permalink":"https://qnxr.xyz/post/first-use-prometheus-operator/","publishdate":"2018-12-11T00:00:00Z","readingtime":8,"relpermalink":"/post/first-use-prometheus-operator/","section":"post","summary":"\u003cp\u003e前面的课程中我们学习了\u003ca href=\"https://www.qikqiak.com/k8s-book/docs/52.Prometheus%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html\"\u003e用自定义的方式来对 Kubernetes 集群进行监控\u003c/a\u003e，但是还是有一些缺陷，比如 Prometheus、AlertManager 这些组件服务本身的高可用，当然我们也完全可以用自定义的方式来实现这些需求，我们也知道 Prometheus 在代码上就已经对 Kubernetes 有了原生的支持，可以通过服务发现的形式来自动监控集群，因此我们可以使用另外一种更加高级的方式来部署 Prometheus：\u003ccode\u003eOperator\u003c/code\u003e 框架。\u003c/p\u003e","tags":["kubernetes","prometheus","operator"],"title":"Prometheus Operator 初体验","type":"post","url":"/post/first-use-prometheus-operator/","weight":0,"wordcount":3598},{"author":null,"categories":null,"content":null,"date":1544140800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1544140800,"objectID":"","permalink":"https://qnxr.xyz/tags/api/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/api/","section":"tags","summary":"","tags":null,"title":"api","type":"tags","url":"/tags/api/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1544140800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":["kubernetes","api","Group","Version"],"kind":"page","lang":"en","lastmod":1544140800,"objectID":"c0083a1e9dc12ed0997cf3fbdbcd8851","permalink":"https://qnxr.xyz/post/k8s-api-resources-group-and-version/","publishdate":"2018-12-07T00:00:00Z","readingtime":4,"relpermalink":"/post/k8s-api-resources-group-and-version/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eKubernetes\u003c/code\u003e使用声明式的 API 让系统更加健壮。但是这样也就意味着我们想要系统执行某些操作就需要通过使用\u003ccode\u003eCLI\u003c/code\u003e或者\u003ccode\u003eREST API\u003c/code\u003e来创建一个资源对象，为此，我们需要定义 API 资源的名称、组和版本等信息。但是很多用户就会为此感到困惑了，因为有太多的资源、太多的版本、太多的组了，这些都非常容易产生混淆。如果我们通过 YAML 文件定义过 Deployment 这样的资源清单文件的话，那么你应该会看到\u003ccode\u003eapiVersion: apps/v1beta2\u003c/code\u003e、\u003ccode\u003eapiVersion: apps/v1\u003c/code\u003e等等这样的信息，那么我们到底应该使用哪一个呢？哪一个才是正确的呢？如何检查\u003ccode\u003eKubernetes\u003c/code\u003e集群支持哪些？其实我们使用\u003ccode\u003ekubectl\u003c/code\u003e工具就可以来解决我们的这些疑惑。\u003c/p\u003e","tags":["kubernetes","api"],"title":"Kubernetes API 资源使用","type":"post","url":"/post/k8s-api-resources-group-and-version/","weight":0,"wordcount":1882},{"author":null,"categories":null,"content":null,"date":1543968000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":["kubernetes","ingress","https","traefik"],"kind":"page","lang":"en","lastmod":1543968000,"objectID":"ff2eb7451e701bafc2ac10eb6dac643e","permalink":"https://qnxr.xyz/post/automatic-kubernetes-ingress-https-with-lets-encrypt/","publishdate":"2018-12-05T00:00:00Z","readingtime":5,"relpermalink":"/post/automatic-kubernetes-ingress-https-with-lets-encrypt/","section":"post","summary":"\u003cp\u003e我们知道\u003ccode\u003eHTTPS\u003c/code\u003e的服务非常安全，Google 现在对非\u003ccode\u003eHTTPS\u003c/code\u003e的服务默认是拒绝的，而且还能避免国内各种乱七八糟的劫持，所以启用\u003ccode\u003eHTTPS\u003c/code\u003e服务是真的非常有必要的。一些正规机构颁发的\u003ccode\u003eCA\u003c/code\u003e证书费用又特别高，不过比较幸运的是也有免费的午餐 - \u003ccode\u003eLet's Encrypt\u003c/code\u003e，虽然只有90天的证书有效期，但是我们完全可以在证书失效之前，重新生成证书替换掉。在\u003ccode\u003eKubernetes\u003c/code\u003e集群中就更方便了，我们可以通过 Kubernetes Ingress 和 Let\u0026rsquo;s Encrypt 实现外部服务的自动化 HTTPS。\u003c/p\u003e","tags":["kubernetes","ingress","traefik"],"title":"Kubernetes Ingress 自动化 HTTPS","type":"post","url":"/post/automatic-kubernetes-ingress-https-with-lets-encrypt/","weight":0,"wordcount":2021},{"author":null,"categories":null,"content":null,"date":1542585600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":["kubernetes","360","开源","dashboard","wayne"],"kind":"page","lang":"en","lastmod":1542585600,"objectID":"256a2cb265317db4f250adb168819ab7","permalink":"https://qnxr.xyz/post/kubernetes-dashboard-wayne-usage/","publishdate":"2018-11-19T00:00:00Z","readingtime":6,"relpermalink":"/post/kubernetes-dashboard-wayne-usage/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eKubernetes\u003c/code\u003e 官方本身就提供了一个管理集群的 Dashboard 插件，但是官方的 Dashboard 插件还是有一些局限性，近日360开源了内部使用的 Kubernetes Dashboard 插件：\u003ca href=\"https://github.com/Qihoo360/wayne/\"\u003eWayne\u003c/a\u003e。 \u003ccode\u003eWayne\u003c/code\u003e 是一个通用的、基于 Web 的 Kubernetes 多集群管理平台。通过可视化 Kubernetes 对象模板编辑的方式，降低业务接入成本， 拥有完整的权限管理系统，适应多租户场景，是一款适合企业级集群使用的发布平台。\u003c/p\u003e","tags":["kubernetes","wayne"],"title":"360 开源 K8S Dashboard Wayne 的安装使用","type":"post","url":"/post/kubernetes-dashboard-wayne-usage/","weight":0,"wordcount":2667},{"author":null,"categories":null,"content":null,"date":1542585600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1542585600,"objectID":"","permalink":"https://qnxr.xyz/tags/wayne/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/wayne/","section":"tags","summary":"","tags":null,"title":"wayne","type":"tags","url":"/tags/wayne/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1542412800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1542412800,"objectID":"","permalink":"https://qnxr.xyz/tags/alertmanger/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/alertmanger/","section":"tags","summary":"","tags":null,"title":"AlertManger","type":"tags","url":"/tags/alertmanger/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1542412800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":5700,"html":null,"keywords":["kubernetes","prometheus","grafana","AlertManger"],"kind":"page","lang":"en","lastmod":1542412800,"objectID":"b951494c2deff65f2a0711b9138c9281","permalink":"https://qnxr.xyz/post/grafana-usage-in-k8s/","publishdate":"2018-11-17T00:00:00Z","readingtime":12,"relpermalink":"/post/grafana-usage-in-k8s/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://mp.weixin.qq.com/s/ir3shARUPqjyBtDWcuzutQ\"\u003e\n  \u003cimg src=\"/img/posts/grafana-cover.png\" alt=\"grafana in k8s \"\u003e\n\n\u003c/a\u003e\n\u003ca href=\"https://www.qikqiak.com/k8s-book/docs/55.%E7%9B%91%E6%8E%A7Kubernetes%E5%B8%B8%E7%94%A8%E8%B5%84%E6%BA%90%E5%AF%B9%E8%B1%A1.html\"\u003e前面的课程中我们使用 Prometheus 采集了 Kubernetes 集群中的一些监控数据指标\u003c/a\u003e，我们也尝试使用\u003ccode\u003epromQL\u003c/code\u003e语句查询出了一些数据，并且在 Prometheus 的 Dashboard 中进行了展示，但是明显可以感觉到 Prometheus 的图表功能相对较弱，所以一般情况下我们会一个第三方的工具来展示这些数据，今天我们要和大家使用到的就是\u003ccode\u003egrafana\u003c/code\u003e。\u003c/p\u003e","tags":["kubernetes","prometheus","grafana","AlertManger"],"title":"Grafana 在 Kubernetes 中的使用","type":"post","url":"/post/grafana-usage-in-k8s/","weight":0,"wordcount":5652},{"author":null,"categories":null,"content":null,"date":1541376000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1541376000,"objectID":"","permalink":"https://qnxr.xyz/tags/monitor/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/monitor/","section":"tags","summary":"","tags":null,"title":"monitor","type":"tags","url":"/tags/monitor/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1541376000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4300,"html":null,"keywords":["kubernetes","监控","prometheus"],"kind":"page","lang":"en","lastmod":1541376000,"objectID":"460a598ddbecf00017bb5e2bb64bcaf4","permalink":"https://qnxr.xyz/post/promethues-monitor-k8s-nodes/","publishdate":"2018-11-05T00:00:00Z","readingtime":9,"relpermalink":"/post/promethues-monitor-k8s-nodes/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://mp.weixin.qq.com/s/JAOW9Zc8FSPk4xtIXVruag\"\u003e\n  \u003cimg src=\"/img/posts/promethus-k8s-node-cover.png\" alt=\"prometheus monitor k8s node\"\u003e\n\n\u003c/a\u003e\n\u003ca href=\"https://www.qikqiak.com/post/promethues-monitor-k8s-app/\"\u003e上节课我们和大家学习了怎样用 Promethues 来监控 Kubernetes 集群中的应用\u003c/a\u003e，但是对于 Kubernetes 集群本身的监控也是非常重要的，我们需要时时刻刻了解集群的运行状态。\u003c/p\u003e\n\u003cp\u003e对于集群的监控一般我们需要考虑以下几个方面：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eKubernetes 节点的监控：比如节点的 cpu、load、disk、memory 等指标\u003c/li\u003e\n\u003cli\u003e内部系统组件的状态：比如 kube-scheduler、kube-controller-manager、kubedns/coredns 等组件的详细运行状态\u003c/li\u003e\n\u003cli\u003e编排级的 metrics：比如 Deployment 的状态、资源请求、调度和 API 延迟等数据指标\u003c/li\u003e\n\u003c/ul\u003e","tags":["prometheus","monitor","kubernetes"],"title":"监控 Kubernetes 集群节点","type":"post","url":"/post/promethues-monitor-k8s-nodes/","weight":0,"wordcount":4238},{"author":null,"categories":null,"content":null,"date":1540684800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":["kubernetes","监控","prometheus"],"kind":"page","lang":"en","lastmod":1540684800,"objectID":"b9039374c3831ad7b1afbe5dac5152fe","permalink":"https://qnxr.xyz/post/promethues-monitor-k8s-app/","publishdate":"2018-10-28T00:00:00Z","readingtime":5,"relpermalink":"/post/promethues-monitor-k8s-app/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://mp.weixin.qq.com/s/cMy-ApGlIeYKIBnCanwwFQ\"\u003e\n  \u003cimg src=\"/img/posts/promethus-k8s-cover.png\" alt=\"promethues monitor k8s app\"\u003e\n\n\u003c/a\u003e\n\u003ca href=\"https://www.qikqiak.com/k8s-book/docs/52.Prometheus%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html\"\u003e上一节\u003c/a\u003e我们和大家介绍了\u003ccode\u003ePrometheus\u003c/code\u003e的数据指标是通过一个公开的 HTTP(S) 数据接口获取到的，我们不需要单独安装监控的 agent，只需要暴露一个 metrics 接口，Prometheus 就会定期去拉取数据；对于一些普通的 HTTP 服务，我们完全可以直接重用这个服务，添加一个\u003ccode\u003e/metrics\u003c/code\u003e接口暴露给 Prometheus；而且获取到的指标数据格式是非常易懂的，不需要太高的学习成本。\u003c/p\u003e","tags":["prometheus","monitor","kubernetes"],"title":"Kubernetes 应用监控","type":"post","url":"/post/promethues-monitor-k8s-app/","weight":0,"wordcount":2487},{"author":null,"categories":null,"content":null,"date":1539820800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1539820800,"objectID":"","permalink":"https://qnxr.xyz/tags/affinity/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/affinity/","section":"tags","summary":"","tags":null,"title":"affinity","type":"tags","url":"/tags/affinity/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1539820800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1539820800,"objectID":"","permalink":"https://qnxr.xyz/tags/nodeselector/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nodeselector/","section":"tags","summary":"","tags":null,"title":"nodeSelector","type":"tags","url":"/tags/nodeselector/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1539820800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1539820800,"objectID":"","permalink":"https://qnxr.xyz/tags/%E4%BA%B2%E5%92%8C%E6%80%A7/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%B2%E5%92%8C%E6%80%A7/","section":"tags","summary":"","tags":null,"title":"亲和性","type":"tags","url":"/tags/%E4%BA%B2%E5%92%8C%E6%80%A7/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1539820800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1539820800,"objectID":"","permalink":"https://qnxr.xyz/tags/%E5%AE%B9%E5%BF%8D/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AE%B9%E5%BF%8D/","section":"tags","summary":"","tags":null,"title":"容忍","type":"tags","url":"/tags/%E5%AE%B9%E5%BF%8D/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1539820800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1539820800,"objectID":"","permalink":"https://qnxr.xyz/tags/%E6%B1%A1%E7%82%B9/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%B1%A1%E7%82%B9/","section":"tags","summary":"","tags":null,"title":"污点","type":"tags","url":"/tags/%E6%B1%A1%E7%82%B9/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1539820800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1539820800,"objectID":"","permalink":"https://qnxr.xyz/tags/%E8%B0%83%E5%BA%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%B0%83%E5%BA%A6/","section":"tags","summary":"","tags":null,"title":"调度","type":"tags","url":"/tags/%E8%B0%83%E5%BA%A6/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1539820800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4800,"html":null,"keywords":["kubernetes","affinity","调度"],"kind":"page","lang":"en","lastmod":1539820800,"objectID":"99537437f1f30503cdfaca3610f85045","permalink":"https://qnxr.xyz/post/kubernetes-affinity-scheduler/","publishdate":"2018-10-18T00:00:00Z","readingtime":10,"relpermalink":"/post/kubernetes-affinity-scheduler/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://mp.weixin.qq.com/s/HBxyO9k615x9--BVawOnSw\"\u003e\n  \u003cimg src=\"/img/posts/affinity-schedule.png\" alt=\"亲和性调度\"\u003e\n\n\u003c/a\u003e\n前面一篇文章\u003ca href=\"/post/understand-kubernetes-affinity\"\u003e理解 Kubernetes 的亲和性调度\u003c/a\u003e，现在仔细回头去看看，发现有很多地方没有理解透彻，不够深入，今天我们重新来理解下亲和性调度这一块知识。\u003c/p\u003e","tags":["kubernetes","亲和性","调度","affinity","nodeSelector","污点","容忍"],"title":"重新理解 kubernetes 亲和性调度","type":"post","url":"/post/kubernetes-affinity-scheduler/","weight":0,"wordcount":4789},{"author":null,"categories":null,"content":null,"date":1539216000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3700,"html":null,"keywords":["kubernetes","scheduler","亲和性","调度","affinity"],"kind":"page","lang":"en","lastmod":1539216000,"objectID":"eb9567ab27b1709776d955ddfaa98725","permalink":"https://qnxr.xyz/post/kube-scheduler-introduction/","publishdate":"2018-10-11T00:00:00Z","readingtime":8,"relpermalink":"/post/kube-scheduler-introduction/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://mp.weixin.qq.com/s/zXy5iYDTFxffzI7_IeLU7Q\"\u003e\n  \u003cimg src=\"/img/posts/kube-scheduler-cover.png\" alt=\"kube-scheduler\"\u003e\n\n\u003c/a\u003e\n\u003ccode\u003ekube-scheduler\u003c/code\u003e是 kubernetes 系统的核心组件之一，主要负责整个集群资源的调度功能，根据特定的调度算法和策略，将 Pod 调度到最优的工作节点上面去，从而更加合理、更加充分的利用集群的资源，这也是我们选择使用 kubernetes 一个非常重要的理由。如果一门新的技术不能帮助企业节约成本、提供效率，我相信是很难推进的。\u003c/p\u003e","tags":["kubernetes","scheduler","调度"],"title":"Kubernetes 调度器介绍","type":"post","url":"/post/kube-scheduler-introduction/","weight":0,"wordcount":3687},{"author":null,"categories":null,"content":null,"date":1538870400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":["kubernetes","helm","hook"],"kind":"page","lang":"en","lastmod":1538870400,"objectID":"ac98a412cbd090fed21c603ba734960b","permalink":"https://qnxr.xyz/post/helm-hooks-usage/","publishdate":"2018-10-07T00:00:00Z","readingtime":5,"relpermalink":"/post/helm-hooks-usage/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://mp.weixin.qq.com/s/S84k_PKAw3sjMnIO6D9O6Q\"\u003e\n  \u003cimg src=\"/img/posts/helm-hooks.png\" alt=\"Helm Hooks\"\u003e\n\n\u003c/a\u003e\n和\u003ccode\u003eKubernetes\u003c/code\u003e里面的容器一样，\u003ccode\u003eHelm\u003c/code\u003e也提供了 \u003ca href=\"https://docs.helm.sh/developing_charts/#hooks\"\u003eHook\u003c/a\u003e 的机制，允许 chart 开发人员在 release 的生命周期中的某些节点来进行干预，比如我们可以利用 Hooks 来做下面的这些事情：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e在加载任何其他 chart 之前，在安装过程中加载 ConfigMap 或 Secret\u003c/li\u003e\n\u003cli\u003e在安装新 chart 之前执行作业以备份数据库，然后在升级后执行第二个作业以恢复数据\u003c/li\u003e\n\u003cli\u003e在删除 release 之前运行作业，以便在删除 release 之前优雅地停止服务\u003c/li\u003e\n\u003c/ul\u003e","tags":["kubernetes","helm"],"title":"Helm Hooks 的使用","type":"post","url":"/post/helm-hooks-usage/","weight":0,"wordcount":2201},{"author":null,"categories":null,"content":null,"date":1538006400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":["kubernetes","国庆","课程","活动"],"kind":"page","lang":"en","lastmod":1538006400,"objectID":"bf78a29f2952e15b416ef1f6bb6e3ae8","permalink":"https://qnxr.xyz/post/k8s-course-promotion/","publishdate":"2018-09-27T00:00:00Z","readingtime":1,"relpermalink":"/post/k8s-course-promotion/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://mp.weixin.qq.com/s/HUvo61Gmu3U-sJLZYXA5gw\"\u003e\n  \u003cimg src=\"/img/posts/k8s-course-promotion.png\" alt=\"k8s course\"\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e真真实实的实惠活动，没有乱七八糟的规矩、不需要扫码加群、不需要分享朋友圈，是不是非常良心？\u003c/p\u003e\n\u003cp\u003e为迎接祖国妈妈的生日，特地为我们的优点知识的会员朋友们提供一次优惠活动，将下面3个付费内容整体打包优惠，优惠后你将获得如下课程：\u003c/p\u003e","tags":["kubernetes","课程"],"title":"国庆 K8S 课程特别活动","type":"post","url":"/post/k8s-course-promotion/","weight":0,"wordcount":336},{"author":null,"categories":null,"content":null,"date":1537660800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":["kubernetes","helm","模板"],"kind":"page","lang":"en","lastmod":1537660800,"objectID":"14105f06833821f21c85a8db567a58da","permalink":"https://qnxr.xyz/post/helm-name-template-usage/","publishdate":"2018-09-23T00:00:00Z","readingtime":5,"relpermalink":"/post/helm-name-template-usage/","section":"post","summary":"\u003cp\u003e前面我们学习了一些\u003ccode\u003eHelm\u003c/code\u003e模板中的一些常用使用方法，但是我们都是操作的一个模板文件，在实际的应用中，很多都是相对比较复杂的，往往会超过一个模板，如果有多个应用模板，我们应该如何进行处理呢？这就需要用到新的概念：\u003cstrong\u003e命名模板\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003eHelm 其他资料地址：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://k8s.qikqiak.com/docs/42.Helm%E5%AE%89%E8%A3%85.html\"\u003eHelm 的安装使用\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://k8s.qikqiak.com/docs/43.Helm%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html\"\u003eHelm 的基本使用\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://k8s.qikqiak.com/docs/44.Helm%E6%A8%A1%E6%9D%BF%E4%B9%8B%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0%E5%92%8CValues.html\"\u003eHelm 模板之内置函数和Values\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://k8s.qikqiak.com/docs/45.Helm%E6%A8%A1%E6%9D%BF%E4%B9%8B%E6%A8%A1%E6%9D%BF%E5%87%BD%E6%95%B0%E4%B8%8E%E7%AE%A1%E9%81%93.html\"\u003eHelm 模板之模板函数与管道\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://k8s.qikqiak.com/docs/46.Helm%E6%A8%A1%E6%9D%BF%E4%B9%8B%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B.html\"\u003eHelm 模板之控制流程\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","tags":["kubernetes","helm"],"title":"Helm 命名模板的使用","type":"post","url":"/post/helm-name-template-usage/","weight":0,"wordcount":2450},{"author":null,"categories":null,"content":null,"date":1537142400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1537142400,"objectID":"","permalink":"https://qnxr.xyz/tags/%E5%B9%B6%E5%8F%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B9%B6%E5%8F%91/","section":"tags","summary":"","tags":null,"title":"并发","type":"tags","url":"/tags/%E5%B9%B6%E5%8F%91/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1537142400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":7000,"html":null,"keywords":["并发","高并发","线程","进程","协程","同步","异步","阻塞","非阻塞"],"kind":"page","lang":"en","lastmod":1537142400,"objectID":"f574775326154720d4c738007334fbb7","permalink":"https://qnxr.xyz/post/concurrency-model-compare/","publishdate":"2018-09-17T00:00:00Z","readingtime":14,"relpermalink":"/post/concurrency-model-compare/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eGolang\u003c/code\u003e的特色之一就是\u003ccode\u003egoroutine\u003c/code\u003e，使得程序员进行并发编程更加方便，适合用来进行服务器编程。作为后端开发工程师，有必要了解并发编程面临的场景和常见的解决方案。一般情况下，是怎样做高并发的编程呢？有那些经典的模型呢？\u003c/p\u003e","tags":["并发","golang"],"title":"并发模型","type":"post","url":"/post/concurrency-model-compare/","weight":0,"wordcount":6997},{"author":null,"categories":null,"content":null,"date":1536710400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":7000,"html":null,"keywords":["kubernetes","docker","dockerfile","实践"],"kind":"page","lang":"en","lastmod":1536710400,"objectID":"9d2ee82cc414cb838374ebd6ba6898b3","permalink":"https://qnxr.xyz/post/dockerfile-best-practice/","publishdate":"2018-09-12T00:00:00Z","readingtime":14,"relpermalink":"/post/dockerfile-best-practice/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eDocker\u003c/code\u003e官方关于\u003ccode\u003eDockerfile\u003c/code\u003e最佳实践原文链接地址：\u003ca href=\"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/\"\u003ehttps://docs.docker.com/develop/develop-images/dockerfile_best-practices/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eDocker\u003c/code\u003e可以通过从\u003ccode\u003eDockerfile\u003c/code\u003e包含所有命令的文本文件中读取指令自动构建镜像，以便构建给定镜像。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eDockerfiles\u003c/code\u003e使用特定的格式并使用一组特定的指令。您可以在 \u003ca href=\"https://docs.docker.com/engine/reference/builder/\"\u003eDockerfile Reference\u003c/a\u003e 页面上了解基础知识 。如果你是新手写作\u003ccode\u003eDockerfile\u003c/code\u003e，你应该从那里开始。\u003c/p\u003e\n\u003cp\u003e本文档介绍了由 Docker，Inc. 和 Docker 社区推荐的用于构建高效镜像的最佳实践和方法。要查看更多实践和建议，请查看 \u003ca href=\"https://github.com/docker-library/buildpack-deps/blob/master/jessie/Dockerfile\"\u003eDockerfile for buildpack-deps\u003c/a\u003e。\u003c/p\u003e","tags":["kubernetes","docker","dockerfile"],"title":"Dockerfile 最佳实践","type":"post","url":"/post/dockerfile-best-practice/","weight":0,"wordcount":6928},{"author":null,"categories":null,"content":null,"date":1536278400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":["kubernetes","Qos"],"kind":"page","lang":"en","lastmod":1536278400,"objectID":"8937dac4dd45b7440b3bf1a0196669a9","permalink":"https://qnxr.xyz/post/kubernetes-qos-usage/","publishdate":"2018-09-07T00:00:00Z","readingtime":4,"relpermalink":"/post/kubernetes-qos-usage/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eQoS\u003c/code\u003e是 Quality of Service 的缩写，即\u003cstrong\u003e服务质量\u003c/strong\u003e。为了实现资源被有效调度和分配的同时提高资源利用率，\u003ccode\u003ekubernetes\u003c/code\u003e针对不同服务质量的预期，通过 QoS（Quality of Service）来对 pod 进行服务质量管理。对于一个 pod 来说，服务质量体现在两个具体的指标：\u003ccode\u003eCPU 和内存\u003c/code\u003e。当节点上内存资源紧张时，kubernetes 会根据预先设置的不同 QoS 类别进行相应处理。\u003c/p\u003e","tags":["kubernetes","Qos"],"title":"Kubernetes 服务质量 Qos 解析","type":"post","url":"/post/kubernetes-qos-usage/","weight":0,"wordcount":1547},{"author":null,"categories":null,"content":null,"date":1536278400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1536278400,"objectID":"","permalink":"https://qnxr.xyz/tags/qos/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/qos/","section":"tags","summary":"","tags":null,"title":"Qos","type":"tags","url":"/tags/qos/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1536019200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4100,"html":null,"keywords":["kubernetes","helm","用法"],"kind":"page","lang":"en","lastmod":1536019200,"objectID":"cbfb8af341d87b98690e2e6be639c80b","permalink":"https://qnxr.xyz/post/kubernetes-helm-usage/","publishdate":"2018-09-04T00:00:00Z","readingtime":9,"relpermalink":"/post/kubernetes-helm-usage/","section":"post","summary":"\u003cp\u003e上节课我们成功安装了\u003ccode\u003eHelm\u003c/code\u003e的客户端以及服务端\u003ccode\u003eTiller Server\u003c/code\u003e，我们也自己尝试创建了我们的第一个 Helm Chart 包，这节课就来和大家一起学习下 Helm 中的一些常用的操作方法。\u003c/p\u003e","tags":["kubernetes","helm"],"title":"Helm 的基本使用","type":"post","url":"/post/kubernetes-helm-usage/","weight":0,"wordcount":4021},{"author":null,"categories":null,"content":null,"date":1535673600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1535673600,"objectID":"","permalink":"https://qnxr.xyz/tags/cloudnative/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cloudnative/","section":"tags","summary":"","tags":null,"title":"CloudNative","type":"tags","url":"/tags/cloudnative/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1535673600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":["kubernetes","CloudNative","课程","华为"],"kind":"page","lang":"en","lastmod":1535673600,"objectID":"2b4d039cd3195579964ab42e232b0a2c","permalink":"https://qnxr.xyz/post/huawei-cloudnativelives-k8s-course/","publishdate":"2018-08-31T00:00:00Z","readingtime":2,"relpermalink":"/post/huawei-cloudnativelives-k8s-course/","section":"post","summary":"\u003cp\u003e前几天观看看华为\u003ccode\u003eCloudNativeLives\u003c/code\u003e推出的\u003ccode\u003eKubernetes\u003c/code\u003e系列直播课程，有不少干货，这里推荐给大家。结尾有获取离线视频方式。\n\n  \u003cimg src=\"/img/posts/cloudnativelives-video.png\" alt=\"cloudnativelives\"\u003e\n\n\u003c/p\u003e","tags":["kubernetes","CloudNative","课程"],"title":"华为 CloudNativeLives K8S 系列课程","type":"post","url":"/post/huawei-cloudnativelives-k8s-course/","weight":0,"wordcount":609},{"author":null,"categories":null,"content":null,"date":1535673600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":["kubernetes","ingress","openssl","traefik","https","nginx"],"kind":"page","lang":"en","lastmod":1535673600,"objectID":"84e498049d8385fd9985048f8801e07c","permalink":"https://qnxr.xyz/post/ingress-traefik2/","publishdate":"2018-08-31T00:00:00Z","readingtime":4,"relpermalink":"/post/ingress-traefik2/","section":"post","summary":"\u003cp\u003e上节课给大家展示了\u003ccode\u003etraefik\u003c/code\u003e的安装使用以及简单的\u003ccode\u003eingress\u003c/code\u003e的配置方法，这节课我们来学习一下 ingress tls 以及 path 路径在 ingress 对象中的使用方法。\u003c/p\u003e","tags":["kubernetes","ingress","traefik","nginx","https"],"title":"外部服务发现之 ingress(二)","type":"post","url":"/post/ingress-traefik2/","weight":0,"wordcount":1949},{"author":null,"categories":null,"content":null,"date":1535500800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1535500800,"objectID":"","permalink":"https://qnxr.xyz/tags/k8s/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/k8s/","section":"tags","summary":"","tags":null,"title":"k8s","type":"tags","url":"/tags/k8s/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1535500800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3300,"html":null,"keywords":["kubernetes","学习","视频","专栏","极客时间","优点知识"],"kind":"page","lang":"en","lastmod":1535500800,"objectID":"60e70222a8321cb8e0d1e10e416a7576","permalink":"https://qnxr.xyz/post/how-to-learn-kubernetes/","publishdate":"2018-08-29T00:00:00Z","readingtime":7,"relpermalink":"/post/how-to-learn-kubernetes/","section":"post","summary":"\u003cp\u003e不管你是否意识到，在过去的几年时间里，以Docker、Kubernetes为代表的容器技术已经悄然发展成为一项通用技术。放眼国外，Google、Microsoft、IBM等互联网巨头们，仍在容器开源基础设施的技术市场上厮杀。回看国内，包括BAT、滴滴、京东、头条在内的大厂也都争相把容器和Kubernetes项目作为其技术重心，试图“放长线钓大鱼”。\u003c/p\u003e","tags":["kubernetes","k8s"],"title":"如何学习Kubernetes？","type":"post","url":"/post/how-to-learn-kubernetes/","weight":0,"wordcount":3241},{"author":null,"categories":null,"content":null,"date":1534982400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3400,"html":null,"keywords":["ipvs","iptables","kubernetes","kube-proxy"],"kind":"page","lang":"en","lastmod":1534982400,"objectID":"4e2d2d691f08d6cdf95cbc37aa949df8","permalink":"https://qnxr.xyz/post/how-to-use-ipvs-in-kubernetes/","publishdate":"2018-08-23T00:00:00Z","readingtime":7,"relpermalink":"/post/how-to-use-ipvs-in-kubernetes/","section":"post","summary":"\u003cp\u003e\u003cstrong\u003eipvs (IP Virtual Server)\u003c/strong\u003e 实现了传输层负载均衡，也就是我们常说的4层\u003ccode\u003eLAN\u003c/code\u003e交换，作为 Linux 内核的一部分。\u003ccode\u003eipvs\u003c/code\u003e运行在主机上，在真实服务器集群前充当负载均衡器。\u003ccode\u003eipvs\u003c/code\u003e可以将基于\u003ccode\u003eTCP\u003c/code\u003e和\u003ccode\u003eUDP\u003c/code\u003e的服务请求转发到真实服务器上，并使真实服务器的服务在单个 IP 地址上显示为虚拟服务。\u003c/p\u003e","tags":["ipvs","iptables","kubernetes","kubeadm"],"title":"ipvs 基本介绍","type":"post","url":"/post/how-to-use-ipvs-in-kubernetes/","weight":0,"wordcount":3336},{"author":null,"categories":null,"content":null,"date":1534636800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":["kubernetes","发音","k8s"],"kind":"page","lang":"en","lastmod":1534636800,"objectID":"d8ff9108bcfcfe11cca86526068cfe1b","permalink":"https://qnxr.xyz/post/kubernetes-how-to-pronunciation/","publishdate":"2018-08-19T00:00:00Z","readingtime":1,"relpermalink":"/post/kubernetes-how-to-pronunciation/","section":"post","summary":"\u003cp\u003e有很多人不知道\u003ccode\u003ekubernetes\u003c/code\u003e应该怎么发音，包括我之前也读错了，正确的发音是**[kubə\u0026rsquo;netis]**，重音在第三个音节，读音：**库伯耐踢死**，我们可以 github issue 上找到相关讨论：\u003ca href=\"https://github.com/kubernetes/kubernetes/issues/44308\"\u003ehttps://github.com/kubernetes/kubernetes/issues/44308\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e那么为什么\u003ccode\u003ekubernetes\u003c/code\u003e又叫\u003ccode\u003ek8s\u003c/code\u003e呢？\u003c/p\u003e","tags":["kubernetes","发音","k8s"],"title":"kubernetes 如何发音？","type":"post","url":"/post/kubernetes-how-to-pronunciation/","weight":0,"wordcount":324},{"author":null,"categories":null,"content":null,"date":1534636800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1534636800,"objectID":"","permalink":"https://qnxr.xyz/tags/%E5%8F%91%E9%9F%B3/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8F%91%E9%9F%B3/","section":"tags","summary":"","tags":null,"title":"发音","type":"tags","url":"/tags/%E5%8F%91%E9%9F%B3/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1534291200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2800,"html":null,"keywords":["kubernetes","ingress","traefik","nginx","haproxy","kong"],"kind":"page","lang":"en","lastmod":1534291200,"objectID":"cd19a5728b2896b8ce0891cea9a253b0","permalink":"https://qnxr.xyz/post/ingress-traefik1/","publishdate":"2018-08-15T00:00:00Z","readingtime":6,"relpermalink":"/post/ingress-traefik1/","section":"post","summary":"\u003cp\u003e上节课我们学习了在\u003ccode\u003eKubernetes\u003c/code\u003e集群内部使用\u003ccode\u003ekube-dns\u003c/code\u003e实现服务发现的功能，那么我们部署在\u003ccode\u003eKubernetes\u003c/code\u003e集群中的应用如何暴露给外部的用户使用呢？我们知道前面我们使用 NodePort 和 LoadBlancer 类型的 Service 可以实现把应用暴露给外部用户使用，除此之外，Kubernetes 还为我们提供了一个非常重要的资源对象可以用来暴露服务给外部用户，那就是 \u003ccode\u003eingress\u003c/code\u003e。对于小规模的应用我们使用\u003ccode\u003eNodePort\u003c/code\u003e或许能够满足我们的需求，但是当你的应用越来越多的时候，你就会发现对于 NodePort 的管理就非常麻烦了，这个时候使用 ingress 就非常方便了，可以避免管理大量的 Port。\u003c/p\u003e","tags":["kubernetes","ingress","traefik","nginx","haproxy","kong"],"title":"外部服务发现之 ingress(一)","type":"post","url":"/post/ingress-traefik1/","weight":0,"wordcount":2754},{"author":null,"categories":null,"content":null,"date":1533686400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1533686400,"objectID":"","permalink":"https://qnxr.xyz/tags/kubends/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kubends/","section":"tags","summary":"","tags":null,"title":"kubends","type":"tags","url":"/tags/kubends/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1533686400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4000,"html":null,"keywords":["kubernetes","kubends","coredns","service","服务发现"],"kind":"page","lang":"en","lastmod":1533686400,"objectID":"93fd1cab45309193a7ab07c7adfee22f","permalink":"https://qnxr.xyz/post/service-found-dns/","publishdate":"2018-08-08T00:00:00Z","readingtime":8,"relpermalink":"/post/service-found-dns/","section":"post","summary":"\u003cp\u003e前面我们给大家讲解了\u003ccode\u003eService\u003c/code\u003e的用法，我们可以通过 Service 生成的\u003ccode\u003eClusterIP(VIP)\u003c/code\u003e来访问 Pod 提供的服务，但是在使用的时候还有一个问题：我们怎么知道某个应用的 VIP 呢？比如我们有两个应用，一个是 api 应用，一个是 db 应用，两个应用都是通过\u003ccode\u003eDeployment\u003c/code\u003e进行管理的，并且都通过 Service 暴露出了端口提供服务。api 需要连接到 db 这个应用，我们只知道 db 应用的名称和 db 对应的 Service 的名称，但是并不知道它的 VIP 地址，我们前面的 Service 课程中是不是学习到我们通过\u003ccode\u003eClusterIP\u003c/code\u003e就可以访问到后面的\u003ccode\u003ePod\u003c/code\u003e服务，如果我们知道了 VIP 的地址是不是就行了？\u003c/p\u003e","tags":["kubernetes","kubends","coredns","service"],"title":"集群内部服务发现之 DNS","type":"post","url":"/post/service-found-dns/","weight":0,"wordcount":3940},{"author":null,"categories":null,"content":null,"date":1533168000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1533168000,"objectID":"","permalink":"https://qnxr.xyz/tags/blueocean/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/blueocean/","section":"tags","summary":"","tags":null,"title":"blueocean","type":"tags","url":"/tags/blueocean/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1533168000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2600,"html":null,"keywords":["kubernetes","devops","jenkins","blueocean","CI","CD","pipeline"],"kind":"page","lang":"en","lastmod":1533168000,"objectID":"2574ca2b71e1eb1aa649ea31e78fde3a","permalink":"https://qnxr.xyz/post/kubernetes-jenkins3/","publishdate":"2018-08-02T00:00:00Z","readingtime":6,"relpermalink":"/post/kubernetes-jenkins3/","section":"post","summary":"\u003cp\u003e上节课我们讲解了使用\u003ccode\u003eJenkins Pipeline\u003c/code\u003e来自动化部署一个\u003ccode\u003eKubernetes\u003c/code\u003e应用的方法，在实际的项目中，往往一个代码仓库都会有很多分支的，比如开发、测试、线上这些分支都是分开的，一般情况下开发或者测试的分支我们希望提交代码后就直接进行\u003ccode\u003eCI/CD\u003c/code\u003e 操作，而线上的话最好增加一个人工干预的步骤，这就需要\u003ccode\u003eJenkins\u003c/code\u003e对代码仓库有多分支的支持，当然这个特性是被\u003ccode\u003eJenkins\u003c/code\u003e支持的。\u003c/p\u003e","tags":["kubernetes","devops","jenkins","blueocean","CI","CD","github","pipeline"],"title":"Jenkins Blue Ocean 的使用","type":"post","url":"/post/kubernetes-jenkins3/","weight":0,"wordcount":2594},{"author":null,"categories":null,"content":null,"date":1532822400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4700,"html":null,"keywords":["kubernetes","devops","jenkins","slave","CI","CD","pipeline"],"kind":"page","lang":"en","lastmod":1532822400,"objectID":"4cef63e1783592fdcce367e2ee183a28","permalink":"https://qnxr.xyz/post/kubernetes-jenkins2/","publishdate":"2018-07-29T00:00:00Z","readingtime":10,"relpermalink":"/post/kubernetes-jenkins2/","section":"post","summary":"\u003cp\u003e上节课我们实现了在\u003ccode\u003eKubernetes\u003c/code\u003e环境中动态生成\u003ccode\u003eJenkins Slave\u003c/code\u003e 的方法，这节课我们来给大家讲解下如何在 Jenkins 中来部署一个 Kubernetes 应用。\u003c/p\u003e","tags":["kubernetes","devops","jenkins","slave","CI","CD","github","pipeline"],"title":"Jenkins Pipeline 部署 Kubernetes 应用(二)","type":"post","url":"/post/kubernetes-jenkins2/","weight":0,"wordcount":4698},{"author":null,"categories":null,"content":null,"date":1532822400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1532822400,"objectID":"","permalink":"https://qnxr.xyz/tags/slave/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/slave/","section":"tags","summary":"","tags":null,"title":"slave","type":"tags","url":"/tags/slave/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1532736000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4700,"html":null,"keywords":["kubernetes","devops","jenkins","slave","CI","CD","gitlab","动态"],"kind":"page","lang":"en","lastmod":1532736000,"objectID":"f733d6033e9ed48594aa98a41058fa7d","permalink":"https://qnxr.xyz/post/kubernetes-jenkins1/","publishdate":"2018-07-28T00:00:00Z","readingtime":10,"relpermalink":"/post/kubernetes-jenkins1/","section":"post","summary":"\u003cp\u003e前面的课程中我们学习了持久化数据存储在\u003ccode\u003eKubernetes\u003c/code\u003e中的使用方法，其实接下来按照我们的课程进度来说应该是讲解服务发现这一部分的内容的，但是最近有很多同学要求我先讲解下 CI/CD 这块的内容，所以我们先把这块内容提前来讲解了。提到基于\u003ccode\u003eKubernete\u003c/code\u003e的\u003ccode\u003eCI/CD\u003c/code\u003e，可以使用的工具有很多，比如\u003ccode\u003eJenkins\u003c/code\u003e、\u003ccode\u003eGitlab CI\u003c/code\u003e已经新兴的\u003ccode\u003edrone\u003c/code\u003e之类的，我们这里会使用大家最为熟悉的\u003ccode\u003eJenkins\u003c/code\u003e来做\u003ccode\u003eCI/CD\u003c/code\u003e的工具。\u003c/p\u003e","tags":["kubernetes","devops","jenkins","slave","CI","CD","gitlab"],"title":"基于 kubernetes 的动态 jenkins slave","type":"post","url":"/post/kubernetes-jenkins1/","weight":0,"wordcount":4633},{"author":null,"categories":null,"content":null,"date":1532390400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1532390400,"objectID":"","permalink":"https://qnxr.xyz/tags/configmap/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/configmap/","section":"tags","summary":"","tags":null,"title":"ConfigMap","type":"tags","url":"/tags/configmap/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1532390400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":["kubernetes","Pod","nginx","configmap","subPath","volume"],"kind":"page","lang":"en","lastmod":1532390400,"objectID":"c92bc4d6e64d9681a231796d8fd0ca89","permalink":"https://qnxr.xyz/post/pod-mount-single-file/","publishdate":"2018-07-24T00:00:00Z","readingtime":2,"relpermalink":"/post/pod-mount-single-file/","section":"post","summary":"\u003cp\u003e有很多同学发现在\u003ccode\u003ePod\u003c/code\u003e中通过\u003ccode\u003evolume\u003c/code\u003e挂载数据的时候，如果挂载目录下原来有文件，挂载后将被覆盖掉。有的时候，我们希望将文件挂载到某个目录，但希望只是挂载该文件，不要影响挂载目录下的其他文件。有办法吗？\u003c/p\u003e","tags":["kubernetes","Pod","nginx","configmap"],"title":"Pod 中挂载单个文件的方法","type":"post","url":"/post/pod-mount-single-file/","weight":0,"wordcount":767},{"author":null,"categories":null,"content":null,"date":1531958400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":["kubernetes","pv","pvc","nfs","StorageClass","持久化","存储","StatefulSet"],"kind":"page","lang":"en","lastmod":1531958400,"objectID":"70bcdca9592db8aab62b7be06591944f","permalink":"https://qnxr.xyz/post/kubernetes-persistent-volume2/","publishdate":"2018-07-19T00:00:00Z","readingtime":6,"relpermalink":"/post/kubernetes-persistent-volume2/","section":"post","summary":"\u003cp\u003e前面的课程中我们学习了 \u003ccode\u003ePV\u003c/code\u003e 和 \u003ccode\u003ePVC\u003c/code\u003e 的使用方法，但是前面的 PV 都是静态的，什么意思？就是我要使用的一个 PVC 的话就必须手动去创建一个 PV，我们也说过这种方式在很大程度上并不能满足我们的需求，比如我们有一个应用需要对存储的并发度要求比较高，而另外一个应用对读写速度又要求比较高，特别是对于 \u003ccode\u003eStatefulSet\u003c/code\u003e 类型的应用简单的来使用静态的 PV 就很不合适了，这种情况下我们就需要用到动态 PV，也就是我们今天要讲解的 \u003ccode\u003eStorageClass\u003c/code\u003e。\u003c/p\u003e","tags":["kubernetes","pv","pvc","nfs","StorageClass"],"title":"kubernetes 持久化存储(二)","type":"post","url":"/post/kubernetes-persistent-volume2/","weight":0,"wordcount":2972},{"author":null,"categories":null,"content":null,"date":1531958400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1531958400,"objectID":"","permalink":"https://qnxr.xyz/tags/nfs/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nfs/","section":"tags","summary":"","tags":null,"title":"nfs","type":"tags","url":"/tags/nfs/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1531872000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":6400,"html":null,"keywords":["kubernetes","pv","pvc","nfs","StorageClass","持久化","存储"],"kind":"page","lang":"en","lastmod":1531872000,"objectID":"8c740e17854fdeaa1454c2998c7a71d6","permalink":"https://qnxr.xyz/post/kubernetes-persistent-volume1/","publishdate":"2018-07-18T00:00:00Z","readingtime":13,"relpermalink":"/post/kubernetes-persistent-volume1/","section":"post","summary":"\u003cp\u003e前面我们和大家一起学习了一些基本的资源对象的使用方法，前面我们也和大家讲到了有状态的应用和对数据有持久化的应用，我们有通过 \u003ccode\u003ehostPath\u003c/code\u003e 或者 \u003ccode\u003eemptyDir\u003c/code\u003e 的方式来持久化我们的数据，但是显然我们还需要更加可靠的存储来保存应用的持久化数据，这样容器在重建后，依然可以使用之前的数据。但是显然存储资源和 CPU 资源以及内存资源有很大不同，为了屏蔽底层的技术实现细节，让用户更加方便的使用，\u003ccode\u003eKubernetes\u003c/code\u003e 便引入了 \u003ccode\u003ePV\u003c/code\u003e 和 \u003ccode\u003ePVC\u003c/code\u003e 两个重要的资源对象来实现对存储的管理。\u003c/p\u003e","tags":["kubernetes","pv","pvc","nfs","StorageClass"],"title":"kubernetes 持久化存储(一)","type":"post","url":"/post/kubernetes-persistent-volume1/","weight":0,"wordcount":6387},{"author":null,"categories":null,"content":null,"date":1530748800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":["mac","python","pip","cryptography"],"kind":"page","lang":"en","lastmod":1530748800,"objectID":"69bb66f72c5d94339d2e7b72d9d41349","permalink":"https://qnxr.xyz/post/install-cryptography-failed-in-mac/","publishdate":"2018-07-05T00:00:00Z","readingtime":1,"relpermalink":"/post/install-cryptography-failed-in-mac/","section":"post","summary":"\u003cp\u003e在\u003ccode\u003eMac\u003c/code\u003e下面安装\u003ccode\u003ecryptography\u003c/code\u003e依赖包，始终报错，出现\u003ccode\u003e'openssl/opensslv.h' file not found\u003c/code\u003e的错误。\u003c/p\u003e","tags":["mac","python"],"title":"Mac 下安装 cryptography 失败","type":"post","url":"/post/install-cryptography-failed-in-mac/","weight":0,"wordcount":240},{"author":null,"categories":null,"content":null,"date":1529625600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4600,"html":null,"keywords":["kubernetes","RBAC"],"kind":"page","lang":"en","lastmod":1529625600,"objectID":"80ba4b7cba46a1a7c1dd1a1fcdbac809","permalink":"https://qnxr.xyz/post/use-rbac-in-k8s/","publishdate":"2018-06-22T00:00:00Z","readingtime":9,"relpermalink":"/post/use-rbac-in-k8s/","section":"post","summary":"\u003cp\u003e前面两节课我们学习了\u003ccode\u003eKubernetes\u003c/code\u003e中的两个用于配置信息的重要资源对象：\u003ccode\u003eConfigMap\u003c/code\u003e和\u003ccode\u003eSecret\u003c/code\u003e，其实到这里我们基本上学习的内容已经覆盖到\u003ccode\u003eKubernetes\u003c/code\u003e中一些重要的资源对象了，来部署一个应用程序是完全没有问题的了。在我们演示一个完整的示例之前，我们还需要给大家讲解一个重要的概念：\u003ccode\u003eRBAC\u003c/code\u003e - 基于角色的访问控制。\u003c/p\u003e","tags":["kubernetes","RBAC"],"title":"Kubernetes RBAC 详解","type":"post","url":"/post/use-rbac-in-k8s/","weight":0,"wordcount":4505},{"author":null,"categories":null,"content":null,"date":1529452800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1529452800,"objectID":"","permalink":"https://qnxr.xyz/tags/secret/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/secret/","section":"tags","summary":"","tags":null,"title":"secret","type":"tags","url":"/tags/secret/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1529452800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2800,"html":null,"keywords":["kubernetes","secret"],"kind":"page","lang":"en","lastmod":1529452800,"objectID":"d01d43feca701d0278d5772db0468634","permalink":"https://qnxr.xyz/post/use-secret-in-k8s/","publishdate":"2018-06-20T00:00:00Z","readingtime":6,"relpermalink":"/post/use-secret-in-k8s/","section":"post","summary":"\u003cp\u003e上节课我们学习了\u003ccode\u003eConfigMap\u003c/code\u003e的使用，我们说\u003ccode\u003eConfigMap\u003c/code\u003e这个资源对象是\u003ccode\u003eKubernetes\u003c/code\u003e当中非常重要的一个对象，一般情况下\u003ccode\u003eConfigMap\u003c/code\u003e是用来存储一些非安全的配置信息，如果涉及到一些安全相关的数据的话用\u003ccode\u003eConfigMap\u003c/code\u003e就非常不妥了，因为\u003ccode\u003eConfigMap\u003c/code\u003e是明文存储的，我们说这个时候我们就需要用到另外一个资源对象了：\u003ccode\u003eSecret\u003c/code\u003e，\u003ccode\u003eSecret\u003c/code\u003e用来保存敏感信息，例如密码、OAuth 令牌和 ssh key等等，将这些信息放在\u003ccode\u003eSecret\u003c/code\u003e中比放在\u003ccode\u003ePod\u003c/code\u003e的定义中或者\u003ccode\u003edocker\u003c/code\u003e镜像中来说更加安全和灵活。\u003c/p\u003e","tags":["kubernetes","secret"],"title":"Secret 的使用","type":"post","url":"/post/use-secret-in-k8s/","weight":0,"wordcount":2778},{"author":null,"categories":null,"content":null,"date":1528848000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3600,"html":null,"keywords":["kubernetes","service","pod"],"kind":"page","lang":"en","lastmod":1528848000,"objectID":"92304d7a9ad1d73b821eb32c4e1c3d0e","permalink":"https://qnxr.xyz/post/use-service-in-k8s/","publishdate":"2018-06-13T00:00:00Z","readingtime":8,"relpermalink":"/post/use-service-in-k8s/","section":"post","summary":"\u003cp\u003e我们前面的课程中学习了\u003ccode\u003ePod\u003c/code\u003e的基本用法，我们也了解到\u003ccode\u003ePod\u003c/code\u003e的生命是有限的，死亡过后不会复活了。我们后面学习到的\u003ccode\u003eRC\u003c/code\u003e和\u003ccode\u003eDeployment\u003c/code\u003e可以用来动态的创建和销毁\u003ccode\u003ePod\u003c/code\u003e。尽管每个\u003ccode\u003ePod\u003c/code\u003e都有自己的\u003ccode\u003eIP\u003c/code\u003e地址，但是如果\u003ccode\u003ePod\u003c/code\u003e重新启动了的话那么他的\u003ccode\u003eIP\u003c/code\u003e很有可能也就变化了。这就会带来一个问题：比如我们有一些后端的\u003ccode\u003ePod\u003c/code\u003e的集合为集群中的其他前端的\u003ccode\u003ePod\u003c/code\u003e集合提供\u003ccode\u003eAPI\u003c/code\u003e服务，如果我们在前端的\u003ccode\u003ePod\u003c/code\u003e中把所有的这些后端的\u003ccode\u003ePod\u003c/code\u003e的地址都写死，然后去某种方式去访问其中一个\u003ccode\u003ePod\u003c/code\u003e的服务，这样看上去是可以工作的，对吧？但是如果这个\u003ccode\u003ePod\u003c/code\u003e挂掉了，然后重新启动起来了，是不是\u003ccode\u003eIP\u003c/code\u003e地址非常有可能就变了，这个时候前端就极大可能访问不到后端的服务了。\u003c/p\u003e","tags":["kubernetes","Pod"],"title":"Service 的使用","type":"post","url":"/post/use-service-in-k8s/","weight":0,"wordcount":3554},{"author":null,"categories":null,"content":null,"date":1528502400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1528502400,"objectID":"","permalink":"https://qnxr.xyz/tags/cronjob/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cronjob/","section":"tags","summary":"","tags":null,"title":"CronJob","type":"tags","url":"/tags/cronjob/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1528502400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1528502400,"objectID":"","permalink":"https://qnxr.xyz/tags/job/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/job/","section":"tags","summary":"","tags":null,"title":"Job","type":"tags","url":"/tags/job/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1528502400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":["kubernetes","job","cronjob","pod"],"kind":"page","lang":"en","lastmod":1528502400,"objectID":"e89a3ffd773a61fc8959cc131b97dd8c","permalink":"https://qnxr.xyz/post/use-job-cronjob/","publishdate":"2018-06-09T00:00:00Z","readingtime":3,"relpermalink":"/post/use-job-cronjob/","section":"post","summary":"\u003cp\u003e上节课我们学习了\u003ccode\u003ePod\u003c/code\u003e自动伸缩的方法，我们使用到了\u003ccode\u003eHPA\u003c/code\u003e这个资源对象，我们在后面的课程中还会和大家接触到\u003ccode\u003eHPA\u003c/code\u003e的。今天我们来给大家介绍另外一类资源对象：Job，我们在日常的工作中经常都会遇到一些需要进行批量数据处理和分析的需求，当然也会有按时间来进行调度的工作，在我们的\u003ccode\u003eKubernetes\u003c/code\u003e集群中为我们提供了\u003ccode\u003eJob\u003c/code\u003e和\u003ccode\u003eCronJob\u003c/code\u003e两种资源对象来应对我们的这种需求。\u003c/p\u003e","tags":["kubernetes","Pod","Job","CronJob"],"title":"Job和CronJob 的使用方法","type":"post","url":"/post/use-job-cronjob/","weight":0,"wordcount":1485},{"author":null,"categories":null,"content":null,"date":1528070400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1528070400,"objectID":"","permalink":"https://qnxr.xyz/categories/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/","section":"categories","summary":"","tags":null,"title":"Categories","type":"categories","url":"/categories/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"介绍Istio v1alpha3 routing API及其设计原则","date":1528070400,"description":"介绍Istio v1alpha3 routing API及其设计原则","dir":"post\\","excerpt_html":"介绍Istio v1alpha3 routing API及其设计原则","excerpt_text":"介绍Istio v1alpha3 routing API及其设计原则","expirydate":-62135596800,"fuzzywordcount":5500,"html":"介绍Istio v1alpha3 routing API及其设计原则","keywords":null,"kind":"page","lang":"en","lastmod":1528070400,"objectID":"419548ad13183dac6d96760c9815824b","permalink":"https://qnxr.xyz/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","publishdate":"2018-06-04T00:00:00Z","readingtime":11,"relpermalink":"/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","section":"post","summary":"\u003cp\u003e到目前为止，Istio提供了一个简单的API来进行流量管理，该API包括了四种资源：RouteRule，DestinationPolicy，EgressRule和Ingress（直接使用了Kubernets的Ingress资源）。借助此API，用户可以轻松管理Istio服务网格中的流量。该API允许用户将请求路由到特定版本的服务，为弹性测试注入延迟和失败，添加超时和断路器等等，所有这些功能都不必更改应用程序本身的代码。\u003c/p\u003e","tags":["Istio"],"title":"Istio v1aplha3 routing API介绍(译文）","type":"post","url":"/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","weight":0,"wordcount":5412},{"author":null,"categories":null,"content":null,"date":1528070400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1528070400,"objectID":"","permalink":"https://qnxr.xyz/categories/tech/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/tech/","section":"categories","summary":"","tags":null,"title":"Tech","type":"categories","url":"/categories/tech/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","date":1527897600,"description":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","dir":"post\\","excerpt_html":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","excerpt_text":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","expirydate":-62135596800,"fuzzywordcount":1800,"html":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","keywords":null,"kind":"page","lang":"en","lastmod":1527897600,"objectID":"5419b65011b3dcb9020c0728e6d70695","permalink":"https://qnxr.xyz/2018/06/02/istio08/","publishdate":"2018-06-02T00:00:00Z","readingtime":4,"relpermalink":"/2018/06/02/istio08/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003e在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["Istio"],"title":"Istio 0.8 Release发布","type":"post","url":"/2018/06/02/istio08/","weight":0,"wordcount":1796},{"author":null,"categories":null,"content":null,"date":1527897600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":["kubernetes","rc","rs","pod"],"kind":"page","lang":"en","lastmod":1527897600,"objectID":"7b0b77faa2e1c53b97688c596e4838d9","permalink":"https://qnxr.xyz/post/use-rc-rs-manage-pod/","publishdate":"2018-06-02T00:00:00Z","readingtime":5,"relpermalink":"/post/use-rc-rs-manage-pod/","section":"post","summary":"\u003cp\u003e前面\u003ca href=\"https://www.haimaxy.com/course/6n8xd6/\"\u003e我们的课程\u003c/a\u003e中学习了\u003ccode\u003ePod\u003c/code\u003e的一些基本使用方法，而且前面我们都是直接来操作的\u003ccode\u003ePod\u003c/code\u003e，假如我们现在有一个\u003ccode\u003ePod\u003c/code\u003e正在提供线上的服务，我们来想想一下我们可能会遇到的一些场景：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e某次运营活动非常成功，网站访问量突然暴增\u003c/li\u003e\n\u003cli\u003e运行当前\u003ccode\u003ePod\u003c/code\u003e的节点发生故障了，\u003ccode\u003ePod\u003c/code\u003e不能正常提供服务了\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e第一种情况，可能比较好应对，一般活动之前我们会大概计算下会有多大的访问量，提前多启动几个\u003ccode\u003ePod\u003c/code\u003e，活动结束后再把多余的\u003ccode\u003ePod\u003c/code\u003e杀掉，虽然有点麻烦，但是应该还是能够应对这种情况的。\u003c/p\u003e\n\u003cp\u003e第二种情况，可能某天夜里收到大量报警说服务挂了，然后起来打开电脑在另外的节点上重新启动一个新的\u003ccode\u003ePod\u003c/code\u003e，问题也很好的解决了。\u003c/p\u003e","tags":["kubernetes","Pod"],"title":"RC、RS 使用方法","type":"post","url":"/post/use-rc-rs-manage-pod/","weight":0,"wordcount":2284},{"author":null,"categories":null,"content":null,"date":1527897600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":["kubernetes","Pod","Docker","runc","CRI"],"kind":"page","lang":"en","lastmod":1527897600,"objectID":"659ca66442dc4710e3f5e6de4819c10a","permalink":"https://qnxr.xyz/post/what-is-oci-runc-containerd-cri-docker/","publishdate":"2018-06-02T00:00:00Z","readingtime":1,"relpermalink":"/post/what-is-oci-runc-containerd-cri-docker/","section":"post","summary":"TODO","tags":["kubernetes","Pod","Docker"],"title":"名称解释OCI、runc、containerd、Docker、CRI、CRI-O","type":"post","url":"/post/what-is-oci-runc-containerd-cri-docker/","weight":0,"wordcount":1},{"author":null,"categories":null,"content":null,"date":1527552000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2800,"html":null,"keywords":["kubernetes","docker"],"kind":"page","lang":"en","lastmod":1527552000,"objectID":"3dc99127d7aa48c44346e5457c96fdb6","permalink":"https://qnxr.xyz/post/pod-init-container/","publishdate":"2018-05-29T00:00:00Z","readingtime":6,"relpermalink":"/post/pod-init-container/","section":"post","summary":"\u003cp\u003e上节课我们学习了容器的健康检查的两个探针：\u003ca href=\"https://www.haimaxy.com/course/6n8xd6/mg0106/\"\u003eliveness probe（存活探针）和 readiness probe（可读性探针）\u003c/a\u003e的使用方法，我们说在这两个探针是可以影响容器的生命周期的，包括我们之前提到的容器的\u003ca href=\"https://www.haimaxy.com/course/6n8xd6/m2kvjm/\"\u003e两个钩子函数 PostStart 和 PreStop \u003c/a\u003e。我们今天要给大家介绍的是\u003ccode\u003eInit Container\u003c/code\u003e（初始化容器）。\u003c/p\u003e","tags":["kubernetes","docker"],"title":"初始化容器","type":"post","url":"/post/pod-init-container/","weight":0,"wordcount":2760},{"author":null,"categories":["Tips"],"content":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","date":1527120000,"description":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","dir":"post\\","excerpt_html":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","excerpt_text":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","expirydate":-62135596800,"fuzzywordcount":200,"html":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","keywords":null,"kind":"page","lang":"en","lastmod":1527120000,"objectID":"acef740336515250f115284b46f1f096","permalink":"https://qnxr.xyz/2018/05/24/set_up_my_ubuntu_desktop/","publishdate":"2018-05-24T00:00:00Z","readingtime":1,"relpermalink":"/2018/05/24/set_up_my_ubuntu_desktop/","section":"post","summary":"Generate SSH Key Pair ssh-keygen -C \u0026quot;zhaohuabing@gmail.com\u0026quot; Shadowsocks Install shadowsokcs sudo apt-get install python3-pip sudo pip3 install shadowsocks Create config at config/shadowsocks.json, with the following content: { \u0026quot;server\u0026quot;:\u0026quot;remote-shadowsocks-server-ip-addr\u0026quot;, \u0026quot;server_port\u0026quot;:443, \u0026quot;local_address\u0026quot;:\u0026quot;127.0.0.1\u0026quot;, \u0026quot;local_port\u0026quot;:1080, \u0026quot;password\u0026quot;:\u0026quot;your-passwd\u0026quot;, \u0026quot;timeout\u0026quot;:300, \u0026quot;method\u0026quot;:\u0026quot;aes-256-cfb\u0026quot;, \u0026quot;fast_open\u0026quot;:false, \u0026quot;workers\u0026quot;:1 } Start a local socks proxy sudo sslocal -c config/shadowsocks.json -d start In case there is an openssl error, modify shadowsocks source file. sudo vi /usr/local/lib/python3.6/dist-packages/shadowsocks/crypto/openssl.py :%s/cleanup/reset/gc Convert shadowsocks socks proxy to http proxy","tags":["ubuntu"],"title":"Everything about Setting Up My Ubuntu Desktop","type":"post","url":"/2018/05/24/set_up_my_ubuntu_desktop/","weight":0,"wordcount":121},{"author":null,"categories":null,"content":null,"date":1527120000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1527120000,"objectID":"","permalink":"https://qnxr.xyz/categories/tips/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/tips/","section":"categories","summary":"","tags":null,"title":"Tips","type":"categories","url":"/categories/tips/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1527120000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1527120000,"objectID":"","permalink":"https://qnxr.xyz/tags/ubuntu/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ubuntu/","section":"tags","summary":"","tags":null,"title":"ubuntu","type":"tags","url":"/tags/ubuntu/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1527098400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1527098400,"objectID":"","permalink":"https://qnxr.xyz/tags/microservice/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/microservice/","section":"tags","summary":"","tags":null,"title":"Microservice","type":"tags","url":"/tags/microservice/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1527098400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1527098400,"objectID":"","permalink":"https://qnxr.xyz/tags/security/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/security/","section":"tags","summary":"","tags":null,"title":"Security","type":"tags","url":"/tags/security/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","date":1527098400,"description":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","dir":"post\\","excerpt_html":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","excerpt_text":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","expirydate":-62135596800,"fuzzywordcount":2400,"html":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","keywords":null,"kind":"page","lang":"en","lastmod":1527098400,"objectID":"bcf92db93ffdd43ba91e4322cf6c6ece","permalink":"https://qnxr.xyz/2018/05/23/external_system_auth/","publishdate":"2018-05-23T18:00:00Z","readingtime":5,"relpermalink":"/2018/05/23/external_system_auth/","section":"post","summary":"外部系统访问控制 除用户访问和微服务之间的相互访问外，外部的第三方系统也可能需要访问系统内部的微服务。例如在上一篇博客的网上商店例子中，外部的","tags":["Microservice","Security"],"title":"微服务安全沉思录之三","type":"post","url":"/2018/05/23/external_system_auth/","weight":0,"wordcount":2340},{"author":null,"categories":["Tech"],"content":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","date":1527087600,"description":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","dir":"post\\","excerpt_html":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","excerpt_text":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","expirydate":-62135596800,"fuzzywordcount":2000,"html":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","keywords":null,"kind":"page","lang":"en","lastmod":1527087600,"objectID":"d7d93ee7d2a2b13ec20c157389fd7a3a","permalink":"https://qnxr.xyz/2018/05/23/service_2_service_auth/","publishdate":"2018-05-23T15:00:00Z","readingtime":4,"relpermalink":"/2018/05/23/service_2_service_auth/","section":"post","summary":"\u003ch2 id=\"服务间认证与鉴权\"\u003e服务间认证与鉴权\u003c/h2\u003e\n\u003cp\u003e除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问，包括下述场景：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e用户间接触发的微服务之间的相互访问\u003c!-- raw HTML omitted --\u003e\n例如在一个网上商店应用中，用户访问购物车微服务进行结算时，购物车微服务可能需要访问用户评级微服务获取用户的会员级别，以得到用户可以享受购物折扣。\u003c/li\u003e\n\u003cli\u003e非用户触发的微服务之间的相互访问\u003c!-- raw HTML omitted --\u003e\n例如数据同步或者后台定时任务导致的微服务之间的相互访问。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e根据应用系统的数据敏感程度的不同，对于系统内微服务的相互访问可能有不同的安全要求。\u003c/p\u003e","tags":["Microservice","Security"],"title":"微服务安全沉思录之二","type":"post","url":"/2018/05/23/service_2_service_auth/","weight":0,"wordcount":1935},{"author":null,"categories":["Tech"],"content":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","date":1527069600,"description":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","dir":"post\\","excerpt_html":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","excerpt_text":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","expirydate":-62135596800,"fuzzywordcount":3100,"html":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","keywords":null,"kind":"page","lang":"en","lastmod":1527069600,"objectID":"3fc17cbcf909103e423326182d72a807","permalink":"https://qnxr.xyz/2018/05/22/user_authentication_authorization/","publishdate":"2018-05-23T10:00:00Z","readingtime":7,"relpermalink":"/2018/05/22/user_authentication_authorization/","section":"post","summary":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清了在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在","tags":["Microservice","Security"],"title":"微服务安全沉思录之一","type":"post","url":"/2018/05/22/user_authentication_authorization","weight":0,"wordcount":3049},{"author":null,"categories":["Tech"],"content":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","date":1527033600,"description":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","dir":"post\\","excerpt_html":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","excerpt_text":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","expirydate":-62135596800,"fuzzywordcount":1200,"html":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","keywords":null,"kind":"page","lang":"en","lastmod":1527033600,"objectID":"61cbee2b7380aaa6e9b9f882840da6a0","permalink":"https://qnxr.xyz/2018/05/23/istio-auto-injection-with-webhook/","publishdate":"2018-05-23T00:00:00Z","readingtime":3,"relpermalink":"/2018/05/23/istio-auto-injection-with-webhook/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003eKubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。\u003c/p\u003e\n\u003cp\u003e使用webhook的优势是不需要对API Server的源码进行修改和重新编译就可以扩展其功能。插入的逻辑实现为一个独立的web进程，通过参数方式传入到kubernets中，由kubernets在进行自身逻辑处理时对扩展逻辑进行回调。\u003c/p\u003e\n\u003cp\u003eIstio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。\u003c/p\u003e","tags":["Kubernetes","Istio"],"title":"Istio Sidecar自动注入原理","type":"post","url":"/2018/05/23/istio-auto-injection-with-webhook/","weight":0,"wordcount":1133},{"author":null,"categories":null,"content":null,"date":1526900400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1526900400,"objectID":"","permalink":"https://qnxr.xyz/tags/bitcoin/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/bitcoin/","section":"tags","summary":"","tags":null,"title":"Bitcoin","type":"tags","url":"/tags/bitcoin/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1526900400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1526900400,"objectID":"","permalink":"https://qnxr.xyz/tags/jekyllq/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/jekyllq/","section":"tags","summary":"","tags":null,"title":"Jekyll:q","type":"tags","url":"/tags/jekyllq/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1526900400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1526900400,"objectID":"","permalink":"https://qnxr.xyz/categories/note/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/note/","section":"categories","summary":"","tags":null,"title":"Note","type":"categories","url":"/categories/note/","weight":0,"wordcount":0},{"author":null,"categories":["Note"],"content":null,"date":1526900400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1526900400,"objectID":"bf66956078def1376b24541987e8dd17","permalink":"https://qnxr.xyz/2018/05/21/algolia-integration-with-jekyll/","publishdate":"2018-05-21T11:00:00Z","readingtime":2,"relpermalink":"/2018/05/21/algolia-integration-with-jekyll/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis series of articles are my notes of \u0026ldquo;Bitcoin and Cryptocurrency Technologies\u0026rdquo; online course.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"table-of-content\"\u003eTable of Content\u003c/h2\u003e\n\u003cp\u003e{:.no_toc}\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTable of Content\n{:toc}\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"scrooge-coin-transaction\"\u003eScrooge Coin Transaction\u003c/h2\u003e\n\u003cp\u003eScrooge Coin programming assignment is a little bit tricky, the video of this lesson hasn\u0026rsquo;t explained some implementation details. To help you understand the transaction data structure used in Scrooge Coin, I draw this diagram:\n\n  \u003cimg src=\"https://img.zhaohuabing.com/in-post/2018-5-20-cryptocurrency_week1_scroogecoin/scroogecoin.png\" alt=\"Scrooge Coin\"\u003e\n\n\u003c/p\u003e","tags":["Jekyll:q","Bitcoin"],"title":"使用Algolia为Gitpage博客提供站内搜索","type":"post","url":"/2018/05/21/algolia-integration-with-jekyll","weight":0,"wordcount":792},{"author":null,"categories":null,"content":null,"date":1526342400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["kubernetes","Pod","workflow","工作流"],"kind":"page","lang":"en","lastmod":1526342400,"objectID":"40362e3dc8d3b6b111f07356353d575e","permalink":"https://qnxr.xyz/post/pod-workflow/","publishdate":"2018-05-15T00:00:00Z","readingtime":2,"relpermalink":"/post/pod-workflow/","section":"post","summary":"\u003cp\u003e我们知道\u003ccode\u003ePod\u003c/code\u003e是\u003ccode\u003eKubernetes\u003c/code\u003e中最小的调度单元，平时我们操作\u003ccode\u003ePod\u003c/code\u003e的时间也是最多的，那么你知道\u003ccode\u003ePod\u003c/code\u003e是怎样被创建出来的吗？知道他的工作流程吗？\u003c/p\u003e","tags":["kubernetes","Pod"],"title":"Kubernetes Pod 工作流","type":"post","url":"/post/pod-workflow/","weight":0,"wordcount":957},{"author":null,"categories":null,"content":null,"date":1525132800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1525132800,"objectID":"","permalink":"https://qnxr.xyz/categories/life/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/life/","section":"categories","summary":"","tags":null,"title":"Life","type":"categories","url":"/categories/life/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1525132800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1525132800,"objectID":"","permalink":"https://qnxr.xyz/tags/travel/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/travel/","section":"tags","summary":"","tags":null,"title":"Travel","type":"tags","url":"/tags/travel/","weight":0,"wordcount":0},{"author":null,"categories":["Life"],"content":null,"date":1525132800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1525132800,"objectID":"14429f8bcce027e828700689f3857119","permalink":"https://qnxr.xyz/2018/05/01/may-day-jiulonghu/","publishdate":"2018-05-01T00:00:00Z","readingtime":8,"relpermalink":"/2018/05/01/may-day-jiulonghu/","section":"post","summary":"\u003ch2 id=\"寻浮云牧场不遇\"\u003e寻浮云牧场不遇\u003c/h2\u003e\n\u003cp\u003e五一节前的一周内，几个朋友就纷纷坐不住了，一个二个不再安心上班，开始在微信群里讨论过节要到哪里耍。\n大家思来想去，最后决定还是去理县方向。因为根据多年自驾的经验，只要出了汶川，沿途都是风景。\u003c/p\u003e","tags":["Travel"],"title":"川西秘境探险","type":"post","url":"/2018/05/01/may-day-jiulonghu","weight":0,"wordcount":3568},{"author":null,"categories":["Tech"],"content":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","date":1523890800,"description":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","dir":"post\\","excerpt_html":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","excerpt_text":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","expirydate":-62135596800,"fuzzywordcount":5000,"html":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","keywords":null,"kind":"page","lang":"en","lastmod":1523890800,"objectID":"8160a1bd8df0fbf81c4f36a3c6e7d3af","permalink":"https://qnxr.xyz/2018/04/16/using-helm-to-deploy-to-kubernetes/","publishdate":"2018-04-16T15:00:00Z","readingtime":10,"relpermalink":"/2018/04/16/using-helm-to-deploy-to-kubernetes/","section":"post","summary":"前言 Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Hel","tags":["Kubernetes","Helm"],"title":"Helm介绍","type":"post","url":"/2018/04/16/using-helm-to-deploy-to-kubernetes/","weight":0,"wordcount":4994},{"author":null,"categories":null,"content":null,"date":1523836800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":["django","django2","实战","实战项目"],"kind":"page","lang":"en","lastmod":1523836800,"objectID":"cf293b207da3dd576c158a3a41bffff9","permalink":"https://qnxr.xyz/post/django20-practice-project-course/","publishdate":"2018-04-16T00:00:00Z","readingtime":1,"relpermalink":"/post/django20-practice-project-course/","section":"post","summary":"\u003cp\u003e在本课程中，你将学习如何使用\u003ccode\u003eDjango2.0\u003c/code\u003e快速开发一个\u003ccode\u003eWEB 应用\u003c/code\u003e，了解到在实际开发过程中关于\u003ccode\u003eDjango\u003c/code\u003e的一些最佳实践技巧，学习到\u003ccode\u003eDjango2.0\u003c/code\u003e与\u003ccode\u003e1.x\u003c/code\u003e版本的一些异同点以及优势。无论你之前是否学习过 Django 应用框架，通过本课程你都将能够很快速的掌握 Django 的使用。\u003c/p\u003e\n\u003cp\u003e课程链接地址：\u003ca href=\"https://www.haimaxy.com/course/m12jop/?utm_source=blog\"\u003ehttps://www.haimaxy.com/course/m12jop/\u003c/a\u003e\u003c/p\u003e","tags":["django","实战"],"title":"Django2.0 实战项目","type":"post","url":"/post/django20-practice-project-course/","weight":0,"wordcount":180},{"author":null,"categories":null,"content":null,"date":1523836800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1523836800,"objectID":"","permalink":"https://qnxr.xyz/tags/%E5%AE%9E%E6%88%98/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AE%9E%E6%88%98/","section":"tags","summary":"","tags":null,"title":"实战","type":"tags","url":"/tags/%E5%AE%9E%E6%88%98/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1523664000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3800,"html":null,"keywords":["kubernetes","kubeadm"],"kind":"page","lang":"en","lastmod":1523664000,"objectID":"36e804c241f1cce9520ae275e365c14c","permalink":"https://qnxr.xyz/post/use-kubeadm-install-kubernetes-1.10/","publishdate":"2018-04-14T00:00:00Z","readingtime":8,"relpermalink":"/post/use-kubeadm-install-kubernetes-1.10/","section":"post","summary":"\u003cp\u003e\u003ccode\u003ekubeadm\u003c/code\u003e是\u003ccode\u003eKubernetes\u003c/code\u003e官方提供的用于快速安装 Kubernetes 集群的工具，通过将集群的各个组件进行容器化安装管理，通过\u003ccode\u003ekubeadm\u003c/code\u003e的方式安装集群比二进制的方式安装要方便不少，但是目录\u003ccode\u003ekubeadm\u003c/code\u003e还处于\u003ccode\u003ebeta\u003c/code\u003e状态，还不能用于生产环境，\u003ca href=\"https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/\"\u003eUsing kubeadm to Create a Cluster\u003c/a\u003e文档中已经说明\u003ccode\u003ekubeadm\u003c/code\u003e将会很快能够用于生产环境了。\u003c/p\u003e\n\u003cp\u003e所以现在来了解下\u003ccode\u003ekubeadm\u003c/code\u003e的使用方式的话还是很有必要的，对于现阶段想要用于生产环境的，建议还是参考我们前面的文章：\u003ca href=\"/post/manual-install-high-available-kubernetes-cluster/\"\u003e手动搭建高可用的kubernetes 集群\u003c/a\u003e或者\u003ca href=\"https://youdianzhishi.com/course/pjrqxm/?utm_source=blog\"\u003e视频教程\u003c/a\u003e。\u003c/p\u003e","tags":["kubernetes","kubeadm"],"title":"使用kubeadm搭建kubernetes1.10集群","type":"post","url":"/post/use-kubeadm-install-kubernetes-1.10/","weight":0,"wordcount":3778},{"author":null,"categories":null,"content":null,"date":1523439120,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1523439120,"objectID":"","permalink":"https://qnxr.xyz/tags/api-gateway/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/api-gateway/","section":"tags","summary":"","tags":null,"title":"API Gateway","type":"tags","url":"/tags/api-gateway/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1523439120,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1523439120,"objectID":"","permalink":"https://qnxr.xyz/tags/service-mesh/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/service-mesh/","section":"tags","summary":"","tags":null,"title":"service Mesh","type":"tags","url":"/tags/service-mesh/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","date":1523439120,"description":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","dir":"post\\","excerpt_html":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","excerpt_text":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","expirydate":-62135596800,"fuzzywordcount":1700,"html":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","keywords":null,"kind":"page","lang":"en","lastmod":1523439120,"objectID":"10512631762a4eb4fe14a47b7cb61d54","permalink":"https://qnxr.xyz/2018/04/11/service-mesh-vs-api-gateway/","publishdate":"2018-04-11T09:32:00Z","readingtime":4,"relpermalink":"/2018/04/11/service-mesh-vs-api-gateway/","section":"post","summary":"Service Mesh vs API Gateway 在前一篇关于Service Mesh的文章中,我提到了几个关于Service Mesh和API Gateway之间关系的问题，在本篇文章","tags":["Microservice","Service Mesh","API Gateway"],"title":"Service Mesh 和 API Gateway的关系探讨（译文）","type":"post","url":"/2018/04/11/service-mesh-vs-api-gateway/","weight":0,"wordcount":1697},{"author":null,"categories":null,"content":null,"date":1522627200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1522627200,"objectID":"","permalink":"https://qnxr.xyz/tags/%E4%B8%80%E7%82%B9%E7%9F%A5%E8%AF%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%B8%80%E7%82%B9%E7%9F%A5%E8%AF%86/","section":"tags","summary":"","tags":null,"title":"一点知识","type":"tags","url":"/tags/%E4%B8%80%E7%82%B9%E7%9F%A5%E8%AF%86/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1522627200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1522627200,"objectID":"","permalink":"https://qnxr.xyz/tags/%E4%B8%8A%E7%BA%BF/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%B8%8A%E7%BA%BF/","section":"tags","summary":"","tags":null,"title":"上线","type":"tags","url":"/tags/%E4%B8%8A%E7%BA%BF/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1522627200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["海马学院","一点知识","上线","视频教程","实战项目"],"kind":"page","lang":"en","lastmod":1522627200,"objectID":"f489079a6396765eee2922234366d191","permalink":"https://qnxr.xyz/post/haimaxy-online/","publishdate":"2018-04-02T00:00:00Z","readingtime":3,"relpermalink":"/post/haimaxy-online/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://www.haimaxy.com\"\u003e海马学院\u003c/a\u003e这个 Sideproject 我断断续续差不多做了一年了，最开始的需求是身边有几个做客户端的朋友想要学习\u003ccode\u003ePython\u003c/code\u003e，然后我给他们推荐了几本入门的书籍，然后遇到问题的时候再来问我，慢慢地他们发现这种方式学习太慢了，主要是太不系统了，然后我就说要不我给你们录制一套实战项目的视频吧，你们跟着做一遍实际的项目肯定感觉就会好很多了，而且根据我个人的学习经验来说，学习一门编程语言最好的方式方法就是做一个实际的项目，最后的结果当然也是符合预期的，现在他们基本上能独立完成一个 Web 项目了。\u003c/p\u003e","tags":["海马学院","一点知识","上线"],"title":"好吧，海马学院正式上线了","type":"post","url":"/post/haimaxy-online/","weight":0,"wordcount":1270},{"author":null,"categories":null,"content":null,"date":1522627200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1522627200,"objectID":"","permalink":"https://qnxr.xyz/tags/%E6%B5%B7%E9%A9%AC%E5%AD%A6%E9%99%A2/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%B5%B7%E9%A9%AC%E5%AD%A6%E9%99%A2/","section":"tags","summary":"","tags":null,"title":"海马学院","type":"tags","url":"/tags/%E6%B5%B7%E9%A9%AC%E5%AD%A6%E9%99%A2/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1522540800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":["kubernetes","知识星球","k8s技术圈","精选"],"kind":"page","lang":"en","lastmod":1522540800,"objectID":"8785e1d116425b6be339806d0fba66a3","permalink":"https://qnxr.xyz/post/k8s-tech-weekly-collection-phase3/","publishdate":"2018-04-01T00:00:00Z","readingtime":1,"relpermalink":"/post/k8s-tech-weekly-collection-phase3/","section":"post","summary":"\u003cp\u003e老规矩，本周的\u003ccode\u003ek8s技术圈\u003c/code\u003e的几个精选的问题，分享给大家。另外，也欢迎大家加入我们的\u003ccode\u003e【微信群】\u003c/code\u003e和\u003ccode\u003e【知识星球】\u003c/code\u003e共同探讨，共同进步。\u003c/p\u003e","tags":["kubernetes","知识星球","k8s技术圈"],"title":"k8s技术圈一周精选[第3期]","type":"post","url":"/post/k8s-tech-weekly-collection-phase3/","weight":0,"wordcount":126},{"author":null,"categories":["Tech"],"content":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","date":1522324800,"description":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","dir":"post\\","excerpt_html":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","excerpt_text":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","expirydate":-62135596800,"fuzzywordcount":8500,"html":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","keywords":null,"kind":"page","lang":"en","lastmod":1522324800,"objectID":"58e1fcbb286268d60015d8695e72e3b4","permalink":"https://qnxr.xyz/2018/03/29/what-is-service-mesh-and-istio/","publishdate":"2018-03-29T12:00:00Z","readingtime":17,"relpermalink":"/2018/03/29/what-is-service-mesh-and-istio/","section":"post","summary":"\u003ch2 id=\"微服务架构的演进\"\u003e微服务架构的演进\u003c/h2\u003e\n\u003cp\u003e作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。\u003c/p\u003e\n\u003cp\u003e另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性。\u003c/p\u003e","tags":["Microservice","Service Mesh","Istio"],"title":"谈谈微服务架构中的基础设施：Service Mesh与Istio","type":"post","url":"/2018/03/29/what-is-service-mesh-and-istio/","weight":0,"wordcount":8405},{"author":null,"categories":null,"content":null,"date":1522108800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1522108800,"objectID":"","permalink":"https://qnxr.xyz/tags/skaffold/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/skaffold/","section":"tags","summary":"","tags":null,"title":"skaffold","type":"tags","url":"/tags/skaffold/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1522108800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":["kubernetes","skaffold","持续开发","神器","CI/CD"],"kind":"page","lang":"en","lastmod":1522108800,"objectID":"893c84f6c20b2416a05c99242f101e08","permalink":"https://qnxr.xyz/post/skaffold-simple-local-develop-k8s-app-tools/","publishdate":"2018-03-27T00:00:00Z","readingtime":5,"relpermalink":"/post/skaffold-simple-local-develop-k8s-app-tools/","section":"post","summary":"\u003cp\u003e在我们开发\u003ccode\u003ekubernetes\u003c/code\u003e应用的过程中，一般情况下是我们在本地开发调试测试完成以后，再通过\u003ccode\u003eCI/CD\u003c/code\u003e的方式部署到\u003ccode\u003ekubernetes\u003c/code\u003e的集群中，这个过程首先是非常繁琐的，而且效率非常低下，因为你想验证你的每次代码修改，就得提交代码重新走一遍\u003ccode\u003eCI/CD\u003c/code\u003e的流程，我们知道编译打包成镜像这些过程就是很耗时的，即使我们在自己本地搭建一套开发\u003ccode\u003ekubernetes\u003c/code\u003e集群，也同样的效率很低。在实践中，若不在本地运行那些服务，调试将变得颇具挑战。就在几天前，我遇到了\u003ccode\u003eSkaffold\u003c/code\u003e，它是一款命令行工具，旨在促进\u003ccode\u003ekubernetes\u003c/code\u003e应用的持续开发，\u003ccode\u003eSkaffold\u003c/code\u003e可以将构建、推送及向\u003ccode\u003ekubernetes\u003c/code\u003e集群部署应用程序的过程自动化，听上去是不是很舒服呀~~~\u003c/p\u003e","tags":["kubernetes","skaffold","CI/CD"],"title":"Skaffold-简化本地开发kubernetes应用的神器","type":"post","url":"/post/skaffold-simple-local-develop-k8s-app-tools/","weight":0,"wordcount":2489},{"author":null,"categories":null,"content":null,"date":1521936000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":["kubernetes","知识星球","k8s技术圈","精选"],"kind":"page","lang":"en","lastmod":1521936000,"objectID":"dfcfb2c607d0033f8a4867252f17a4e7","permalink":"https://qnxr.xyz/post/k8s-tech-weekly-collection-phase2/","publishdate":"2018-03-25T00:00:00Z","readingtime":1,"relpermalink":"/post/k8s-tech-weekly-collection-phase2/","section":"post","summary":"\u003cp\u003e上周我们发布了\u003ca href=\"/post/k8s-tech-weekly-collection-phase1/\"\u003ek8s技术圈一周精选第1期\u003c/a\u003e，从后面的反馈来看非常不错，之前很多问题其实大家都遇到过，只是没有记录沉淀下来，导致后面很多同学去踩同样的坑，这其实是非常浪费时间浪费资源的。一周时间还是非常快的，这不我们的第2期又来了。\u003c/p\u003e\n\u003cp\u003e另外，也欢迎大家加入我们的\u003ccode\u003e【微信群】\u003c/code\u003e和\u003ccode\u003e【知识星球】\u003c/code\u003e共同探讨，共同进步。\u003c/p\u003e","tags":["kubernetes","知识星球","k8s技术圈"],"title":"k8s技术圈一周精选[第2期]","type":"post","url":"/post/k8s-tech-weekly-collection-phase2/","weight":0,"wordcount":231},{"author":null,"categories":null,"content":null,"date":1521763200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":["kubernetes","resource","quato","资源配额"],"kind":"page","lang":"en","lastmod":1521763200,"objectID":"bb3ebc94d75bb7425352ea963021876e","permalink":"https://qnxr.xyz/post/kubernetes-resource-quota-usage/","publishdate":"2018-03-23T00:00:00Z","readingtime":5,"relpermalink":"/post/kubernetes-resource-quota-usage/","section":"post","summary":"\u003cp\u003e有很多团队在使用\u003ccode\u003ekubernetes\u003c/code\u003e的时候是将一个\u003ccode\u003enamespace\u003c/code\u003e当成一个租户的，所以对\u003ccode\u003enamespace\u003c/code\u003e的权限控制，资源控制就很重要了，你总是会担心你的某个租户使用的资源就超出了应有的配额。幸运的是\u003ccode\u003ekubernetes\u003c/code\u003e本身就为我们提供了解决这一问题的工具：资源配额控制器(\u003ccode\u003eResourceQuotaController\u003c/code\u003e)\u003c/p\u003e\n\u003cp\u003e资源配额控制器确保了指定的资源对象始终不会超过配置的资源，能够有效的降低整个系统宕机的机率，增强系统的鲁棒性，对整个集群的稳定性有非常重要的作用。\u003c/p\u003e","tags":["kubernetes","resource","quato"],"title":"kubernetes 的资源配额控制器","type":"post","url":"/post/kubernetes-resource-quota-usage/","weight":0,"wordcount":2048},{"author":null,"categories":null,"content":null,"date":1521763200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1521763200,"objectID":"","permalink":"https://qnxr.xyz/tags/quato/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/quato/","section":"tags","summary":"","tags":null,"title":"quato","type":"tags","url":"/tags/quato/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1521763200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1521763200,"objectID":"","permalink":"https://qnxr.xyz/tags/resource/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/resource/","section":"tags","summary":"","tags":null,"title":"resource","type":"tags","url":"/tags/resource/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1521331200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":["kubernetes","知识星球","k8s技术圈","精选"],"kind":"page","lang":"en","lastmod":1521331200,"objectID":"722a8be126a8c998796d502bb4916350","permalink":"https://qnxr.xyz/post/k8s-tech-weekly-collection-phase1/","publishdate":"2018-03-18T00:00:00Z","readingtime":1,"relpermalink":"/post/k8s-tech-weekly-collection-phase1/","section":"post","summary":"\u003cp\u003e一转眼都已经过了龙抬头的日子了，可能你自己没注意到，要是仔细一算的话，2018年已经过了1/4了，是不是今年的规划还没提上日程呢？总之，咱们还是需要撸起袖子加油继续干啊~~~\u003c/p\u003e\n\u003cp\u003e今天的文章是总结我们\u003ccode\u003e知识星球\u003c/code\u003e在本周的一些精华的分享内容，同时，也欢迎大家加入我们的\u003ccode\u003e【微信群】\u003c/code\u003e和\u003ccode\u003e【知识星球】\u003c/code\u003e共同探讨，共同进步。\u003c/p\u003e","tags":["kubernetes","知识星球","k8s技术圈"],"title":"k8s技术圈一周精选[第1期]","type":"post","url":"/post/k8s-tech-weekly-collection-phase1/","weight":0,"wordcount":220},{"author":null,"categories":null,"content":null,"date":1520964000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1520964000,"objectID":"","permalink":"https://qnxr.xyz/tags/tips/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tips/","section":"tags","summary":"","tags":null,"title":"Tips","type":"tags","url":"/tags/tips/","weight":0,"wordcount":0},{"author":null,"categories":["Tips"],"content":"如何配置docker使用HTTP代理","date":1520964000,"description":"如何配置docker使用HTTP代理","dir":"post\\","excerpt_html":"如何配置docker使用HTTP代理","excerpt_text":"如何配置docker使用HTTP代理","expirydate":-62135596800,"fuzzywordcount":100,"html":"如何配置docker使用HTTP代理","keywords":null,"kind":"page","lang":"en","lastmod":1520964000,"objectID":"98b8057999561a04d562f017fde4df05","permalink":"https://qnxr.xyz/2018/03/13/use-docker-behind-http-proxy/","publishdate":"2018-03-13T18:00:00Z","readingtime":1,"relpermalink":"/2018/03/13/use-docker-behind-http-proxy/","section":"post","summary":"\u003ch2 id=\"ubuntu\"\u003eUbuntu\u003c/h2\u003e\n\u003ch3 id=\"设置docker使用http-proxy\"\u003e设置docker使用http proxy\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003esudo /etc/default/docker\n\nexport http_proxy=\u0026quot;http://127.0.0.1:3128/\u0026quot;\nexport https_proxy=\u0026quot;http://127.0.0.1:3128/\u0026quot;\nexport HTTP_PROXY=\u0026quot;http://127.0.0.1:3128/\u0026quot;\nexport HTTPS_PROXY=\u0026quot;http://127.0.0.1:3128/\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e","tags":["Tips","Docker"],"title":"如何配置docker使用HTTP代理","type":"post","url":"/2018/03/13/use-docker-behind-http-proxy/","weight":0,"wordcount":92},{"author":null,"categories":null,"content":null,"date":1520467200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3200,"html":null,"keywords":["kubernetes","亲和性","调度","affinity","nodeSelector","污点","容忍"],"kind":"page","lang":"en","lastmod":1520467200,"objectID":"d718de04313e878ea1ef51bb1d81f5c7","permalink":"https://qnxr.xyz/post/understand-kubernetes-affinity/","publishdate":"2018-03-08T00:00:00Z","readingtime":7,"relpermalink":"/post/understand-kubernetes-affinity/","section":"post","summary":"\u003cp\u003e一般情况下我们部署的 POD 是通过集群自动调度选择某个节点的，默认情况下调度器考虑的是资源足够，并且负载尽量平均，但是有的时候我们需要能够更加细粒度的去控制 POD 的调度，比如我们内部的一些服务 gitlab 之类的也是跑在\u003ccode\u003eKubernetes\u003c/code\u003e集群上的，我们就不希望对外的一些服务和内部的服务跑在同一个节点上了，害怕内部服务对外部的服务产生影响；有的时候呢我们两个服务直接交流比较频繁，又希望能够将这两个服务的 POD 调度到同样的节点上。这就需要用到 Kubernetes 里面的一个概念：亲和性，亲和性主要分为两类：\u003ccode\u003enodeAffinity\u003c/code\u003e和\u003ccode\u003epodAffinity\u003c/code\u003e。\u003c/p\u003e","tags":["kubernetes","affinity","调度"],"title":"理解 Kubernetes 的亲和性调度","type":"post","url":"/post/understand-kubernetes-affinity/","weight":0,"wordcount":3165},{"author":null,"categories":null,"content":null,"date":1520208000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1520208000,"objectID":"","permalink":"https://qnxr.xyz/tags/gitment/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gitment/","section":"tags","summary":"","tags":null,"title":"gitment","type":"tags","url":"/tags/gitment/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1520208000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["Hugo","评论","gitment","github","Algolia"],"kind":"page","lang":"en","lastmod":1520208000,"objectID":"1927f71544cb64c749a24cd339297aa3","permalink":"https://qnxr.xyz/post/hugo-integrated-gitment-plugin/","publishdate":"2018-03-05T00:00:00Z","readingtime":3,"relpermalink":"/post/hugo-integrated-gitment-plugin/","section":"post","summary":"\u003cp\u003e前面我们为\u003ca href=\"https://gohugo.io/\"\u003eHugo\u003c/a\u003e集成了\u003ccode\u003eAlgolia\u003c/code\u003e搜索插件，要让我们的网站具备博客的基本功能的话，一般情况下评论也是非常需要的，评论承载着作者与读者之间交流的桥梁，所以我们可以看到市面上有很多单独的评论服务，比如最出名的\u003ca href=\"https://disqus.com/\"\u003edisqus\u003c/a\u003e，国内也有之前比较出名的\u003ccode\u003e多说\u003c/code\u003e(现在已经关闭)、\u003ca href=\"http://www.uyan.cc/\"\u003e有言\u003c/a\u003e等等，要使用他们非常简单，只需要嵌入一些简单的代码即刻开启移动社交评论\n服务。不是这些服务不好，只是觉得稍微有点笨重，这里我们使用一个基于\u003ccode\u003eGitHub Issues\u003c/code\u003e的轻量级评论系统：\u003ca href=\"https://github.com/imsun/gitment\"\u003eGitment\u003c/a\u003e。\u003c/p\u003e","tags":["Hugo","gitment","github"],"title":"Hugo 集成 Gitment 评论插件","type":"post","url":"/post/hugo-integrated-gitment-plugin/","weight":0,"wordcount":1290},{"author":null,"categories":null,"content":null,"date":1519948800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1519948800,"objectID":"","permalink":"https://qnxr.xyz/tags/downward/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/downward/","section":"tags","summary":"","tags":null,"title":"downward","type":"tags","url":"/tags/downward/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1519948800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":["kubernetes","pod","downward","用法"],"kind":"page","lang":"en","lastmod":1519948800,"objectID":"c89eaa8e28edcc9ea42c0fea222a2844","permalink":"https://qnxr.xyz/post/use-downward-api-get-pod-info/","publishdate":"2018-03-02T00:00:00Z","readingtime":3,"relpermalink":"/post/use-downward-api-get-pod-info/","section":"post","summary":"\u003cp\u003e前面在\u003ccode\u003ek8s技术圈\u003c/code\u003e微信群里面有朋友问到如何在容器中获取 POD 的基本信息，其实\u003ccode\u003ekubernetes\u003c/code\u003e原生就提供了支持的，那就是\u003ccode\u003eDownward API\u003c/code\u003e。\u003c/p\u003e","tags":["kubernetes","pod","downward"],"title":"Kubernetes Downward API 基本用法","type":"post","url":"/post/use-downward-api-get-pod-info/","weight":0,"wordcount":1094},{"author":null,"categories":null,"content":null,"date":1519344000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1519344000,"objectID":"","permalink":"https://qnxr.xyz/tags/algolia/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/algolia/","section":"tags","summary":"","tags":null,"title":"Algolia","type":"tags","url":"/tags/algolia/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1519344000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":["Hugo","Algolia","搜索"],"kind":"page","lang":"en","lastmod":1519344000,"objectID":"5c90700a450f4f11edd842bf77c9c748","permalink":"https://qnxr.xyz/post/hugo-integrated-algolia-search/","publishdate":"2018-02-23T00:00:00Z","readingtime":5,"relpermalink":"/post/hugo-integrated-algolia-search/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://gohugo.io/\"\u003eHugo\u003c/a\u003e是由 Steve Francis 大神(\u003ca href=\"http://spf13.com/\"\u003ehttp://spf13.com/\u003c/a\u003e)基于\u003ccode\u003eGo\u003c/code\u003e语言开发的静态网站构建工具。没错你现在看到的本博客就是基于\u003ccode\u003eHugo\u003c/code\u003e的，使用 Hugo 创建一个网站是非常简单的，基本上没有什么门槛，官方还提供了大量的主题供你选择，你只需要专心写的文章就行。不过有个问题是搜索，我们知道搜索属于动态行为了，如何给静态网站增加搜索功能呢？当然我们可以使用\u003ccode\u003eGoogle\u003c/code\u003e的站内搜索功能，Hugo 官方也提供了一些开源的和商业的解决方案，今天我们要介绍的就是一个非常优秀的商业解决方案：\u003ca href=\"https://www.algolia.com/\"\u003eAlgolia\u003c/a\u003e。\u003c/p\u003e","tags":["Hugo","Algolia"],"title":"Hugo 集成 Algolia 搜索","type":"post","url":"/post/hugo-integrated-algolia-search/","weight":0,"wordcount":2008},{"author":null,"categories":null,"content":null,"date":1518220800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2800,"html":null,"keywords":["kubernetes","ConfigMap","Secretes","使用"],"kind":"page","lang":"en","lastmod":1518220800,"objectID":"826edbe75e7d3834d4893e270a8d1bfd","permalink":"https://qnxr.xyz/post/understand-kubernetes-configmap-and-secrets/","publishdate":"2017-01-18T00:00:00Z","readingtime":6,"relpermalink":"/post/understand-kubernetes-configmap-and-secrets/","section":"post","summary":"\u003cp\u003e我们经常都需要为我们的应用程序配置一些特殊的数据，比如密钥、Token 、数据库连接地址或者其他私密的信息。你的应用可能会使用一些特定的配置文件进行配置，比如\u003ccode\u003esettings.py\u003c/code\u003e文件，或者我们可以在应用的业务逻辑中读取环境变量或者某些标志来处理配置信息。\u003c/p\u003e\n\u003cp\u003e当然你可以直接将这些应用配置信息直接硬编码到你的应用程序中去，对于一个小型的应用，这或许是可以接受的，但是，对于一个相对较大的应用程序或者微服务的话，硬编码就会变得难以管理了。比如你现在有10个微服务，都连接了数据库A，如果现在需要更改数据库A的连接地址的话，就需要修改10个地方，显然这是难以忍受的。\u003c/p\u003e","tags":["kubernetes","ConfigMap","Secretes"],"title":"kubernetes ConfigMap 和 Secrets","type":"post","url":"/post/understand-kubernetes-configmap-and-secrets/","weight":0,"wordcount":2784},{"author":null,"categories":null,"content":null,"date":1518220800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1518220800,"objectID":"","permalink":"https://qnxr.xyz/tags/secretes/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/secretes/","section":"tags","summary":"","tags":null,"title":"Secretes","type":"tags","url":"/tags/secretes/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1518174000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1518174000,"objectID":"","permalink":"https://qnxr.xyz/tags/vim/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/vim/","section":"tags","summary":"","tags":null,"title":"Vim","type":"tags","url":"/tags/vim/","weight":0,"wordcount":0},{"author":null,"categories":["Tips"],"content":"Vim Tips and tricks","date":1518174000,"description":"Vim Tips and tricks","dir":"post\\","excerpt_html":"Vim Tips and tricks","excerpt_text":"Vim Tips and tricks","expirydate":-62135596800,"fuzzywordcount":200,"html":"Vim Tips and tricks","keywords":null,"kind":"page","lang":"en","lastmod":1518174000,"objectID":"2d0e4272390337188b486ff2335caebb","permalink":"https://qnxr.xyz/2018/02/09/vim-tips/","publishdate":"2018-02-09T11:00:00Z","readingtime":1,"relpermalink":"/2018/02/09/vim-tips/","section":"post","summary":"\u003ch2 id=\"vim-graphical-cheat-sheet\"\u003evim graphical cheat sheet\u003c/h2\u003e\n\u003cp\u003e\n  \u003cimg src=\"/https://img.zhaohuabing.com/in-post/2018-02-09-vim-tips/vi-vim-cheat-sheet.svg\" alt=\"\"\u003e\n\n\u003c/p\u003e","tags":["Tips","Vim"],"title":"Vim Tips","type":"post","url":"/2018/02/09/vim-tips/","weight":0,"wordcount":181},{"author":null,"categories":["Tips"],"content":"如何使用非root用户执行docker命令","date":1518170400,"description":"如何使用非root用户执行docker命令","dir":"post\\","excerpt_html":"如何使用非root用户执行docker命令","excerpt_text":"如何使用非root用户执行docker命令","expirydate":-62135596800,"fuzzywordcount":100,"html":"如何使用非root用户执行docker命令","keywords":null,"kind":"page","lang":"en","lastmod":1518170400,"objectID":"92d7e3e34329f74a5a955e31f5743bae","permalink":"https://qnxr.xyz/2018/02/09/docker-without-sudo/","publishdate":"2018-02-09T10:00:00Z","readingtime":1,"relpermalink":"/2018/02/09/docker-without-sudo/","section":"post","summary":"Add the docker group if it doesn\u0026rsquo;t already exist: sudo groupadd docker Add the connected user \u0026ldquo;$USER\u0026rdquo; to the docker group. Change the user name to match your preferred user if you do not want to use your current user: sudo gpasswd -a $USER docker Either do a newgrp docker or log out/in to activate the changes to groups.","tags":["Tips","Docker"],"title":"如何使用非root用户执行docker命令","type":"post","url":"/2018/02/09/docker-without-sudo/","weight":0,"wordcount":59},{"author":null,"categories":null,"content":null,"date":1518048000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":["kubernetes","docker","golang","服务"],"kind":"page","lang":"en","lastmod":1518048000,"objectID":"7a128deecd81ed1f17377ed5c9969898","permalink":"https://qnxr.xyz/post/write-kubernets-golang-service-step-by-step/","publishdate":"2018-02-08T00:00:00Z","readingtime":4,"relpermalink":"/post/write-kubernets-golang-service-step-by-step/","section":"post","summary":"\u003cp\u003e我们前面介绍了很多关于\u003ccode\u003ekubernetes\u003c/code\u003e本身的操作，但是对于如何写一个完整的\u003ccode\u003ekubernetes\u003c/code\u003e应用还没有介绍过。在这篇文章中我们将介绍如何一步一步的写一个\u003ccode\u003ekubernetes\u003c/code\u003e的\u003ccode\u003egolang\u003c/code\u003e服务。\u003c/p\u003e","tags":["kubernetes","docker","golang"],"title":"手摸手教你写 Kubernetes 的 golang 服务","type":"post","url":"/post/write-kubernets-golang-service-step-by-step/","weight":0,"wordcount":1930},{"author":null,"categories":null,"content":null,"date":1517702400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1517702400,"objectID":"","permalink":"https://qnxr.xyz/tags/alpine/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/alpine/","section":"tags","summary":"","tags":null,"title":"alpine","type":"tags","url":"/tags/alpine/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1517702400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":["kubernetes","docker","golang","服务"],"kind":"page","lang":"en","lastmod":1517702400,"objectID":"4ff81220ca76f4888e5cfd61aeada436","permalink":"https://qnxr.xyz/post/multi-stage-build-for-docker/","publishdate":"2018-02-04T00:00:00Z","readingtime":3,"relpermalink":"/post/multi-stage-build-for-docker/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eDocker\u003c/code\u003e的口号是 \u003cstrong\u003eBuild,Ship,and Run Any App,Anywhere\u003c/strong\u003e，在我们使用 Docker 的大部分时候，的确能感觉到其优越性，但是往往在我们 Build 一个应用的时候，是将我们的源代码也构建进去的，这对于类似于 golang 这样的编译型语言肯定是不行的，因为实际运行的时候我只需要把最终构建的二进制包给你就行，把源码也一起打包在镜像中，需要承担很多风险，即使是脚本语言，在构建的时候也可能需要使用到一些上线的工具，这样无疑也增大了我们的镜像体积。\u003c/p\u003e","tags":["docker","alpine"],"title":"Docker 的多阶段构建","type":"post","url":"/post/multi-stage-build-for-docker/","weight":0,"wordcount":1389},{"author":null,"categories":["Tech"],"content":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","date":1517659200,"description":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","dir":"post\\","excerpt_html":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","excerpt_text":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","expirydate":-62135596800,"fuzzywordcount":5500,"html":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","keywords":null,"kind":"page","lang":"en","lastmod":1517659200,"objectID":"c1d32da205ea082b3dd7061c39ea7e8b","permalink":"https://qnxr.xyz/2018/05/22/user_authentication_authorization/","publishdate":"2018-02-03T12:00:00Z","readingtime":11,"relpermalink":"/2018/05/22/user_authentication_authorization/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003e微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。\u003c/p\u003e","tags":["Microservice","Security"],"title":"如何构建安全的微服务应用？","type":"post","url":"/2018/05/22/user_authentication_authorization/","weight":0,"wordcount":5453},{"author":null,"categories":null,"content":null,"date":1517529600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":["kubernetes","YAML","Deployment"],"kind":"page","lang":"en","lastmod":1517529600,"objectID":"2b98127a3e2437034b0ac8ec50c55b60","permalink":"https://qnxr.xyz/post/use-yaml-create-kubernetes-deployment/","publishdate":"2018-02-02T00:00:00Z","readingtime":6,"relpermalink":"/post/use-yaml-create-kubernetes-deployment/","section":"post","summary":"\u003cp\u003e在之前的文章中，我们一直在讨论如何使用\u003ccode\u003ekubernetes\u003c/code\u003e，很多时候我们知道怎么使用\u003ccode\u003ekubectl\u003c/code\u003e命令行工具来启动一个\u003ccode\u003ePOD\u003c/code\u003e，也看到我们在安装kubernetes 过程中使用了一些 YAML 文件来创建，但是发现很多朋友对 YAML 文件来创建一个 POD 还是非常陌生。所以我们来简单看看 YAML 文件是如何工作的，并使用 YAML 文件来定义一个 kubernetes pod，然后再来定义一个 kubernetes deployment吧。\u003c/p\u003e","tags":["kubernetes","yaml","Deployment"],"title":"使用YAML 文件创建 Kubernetes Deployment","type":"post","url":"/post/use-yaml-create-kubernetes-deployment/","weight":0,"wordcount":2976},{"author":null,"categories":null,"content":null,"date":1516838400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":["kubernetes","helm","用法"],"kind":"page","lang":"en","lastmod":1516838400,"objectID":"cb540b7340974a8755af30e52e94d096","permalink":"https://qnxr.xyz/post/first-use-helm-on-kubernetes/","publishdate":"2017-01-25T00:00:00Z","readingtime":5,"relpermalink":"/post/first-use-helm-on-kubernetes/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eHelm\u003c/code\u003e这个东西其实早有耳闻，但是一直没有用在生产环境，而且现在对这货的评价也是褒贬不一。正好最近需要再次部署一套测试环境，对于单体服务，部署一套测试环境我相信还是非常快的，但是对于微服务架构的应用，要部署一套新的环境，就有点折磨人了，微服务越多、你就会越绝望的。虽然我们线上和测试环境已经都迁移到了\u003ccode\u003ekubernetes\u003c/code\u003e环境，但是每个微服务也得维护一套\u003ccode\u003eyaml\u003c/code\u003e文件，而且每个环境下的配置文件也不太一样，部署一套新的环境成本是真的很高。如果我们能使用类似于\u003ccode\u003eyum\u003c/code\u003e的工具来安装我们的应用的话是不是就很爽歪歪了啊？\u003ccode\u003eHelm\u003c/code\u003e就相当于\u003ccode\u003ekubernetes\u003c/code\u003e环境下的\u003ccode\u003eyum\u003c/code\u003e包管理工具。\u003c/p\u003e","tags":["kubernetes","helm"],"title":"Kubernetes Helm 初体验","type":"post","url":"/post/first-use-helm-on-kubernetes/","weight":0,"wordcount":2127},{"author":null,"categories":null,"content":null,"date":1516665600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":["kubernetes","PodPreset","用法"],"kind":"page","lang":"en","lastmod":1516665600,"objectID":"bb8778a211b8972b3461dd9715307b94","permalink":"https://qnxr.xyz/post/how-to-use-podpreset-in-kubernetes/","publishdate":"2018-01-23T00:00:00Z","readingtime":3,"relpermalink":"/post/how-to-use-podpreset-in-kubernetes/","section":"post","summary":"\u003cp\u003e最近在\u003ccode\u003ekubernetes\u003c/code\u003e上安装 \u003ca href=\"https://github.com/cnych/k8s-repo/tree/master/sentry\"\u003esentry\u003c/a\u003e 的时候，我将\u003ccode\u003esentry\u003c/code\u003e需要运行的3个服务放到同一个\u003cstrong\u003ePOD\u003c/strong\u003e中的，WEB、Celery Worker、Crontab 分别用一个独立的容器来运行的，但是这三个容器需要用到环境变量基本上都是一样的，比如数据库的配置、消息队列的配置，这样就造成一个问题是我需要把完全一模一样的环境配置复制3份，因为3个容器都需要使用，这样如果需要更改的话也要改3个地方。幸好\u003ccode\u003ekubernetes\u003c/code\u003e给我们提供了一种新的特性：\u003cstrong\u003ePodPreset\u003c/strong\u003e，该对象用来在 Pod 创建的时候向 Pod 中注入某些特定信息，可以包括 secret、volume、volume mount 和环境变量等。\u003c/p\u003e","tags":["kubernetes","PodPreset"],"title":"kubernetes PodPreset 的使用","type":"post","url":"/post/how-to-use-podpreset-in-kubernetes/","weight":0,"wordcount":1452},{"author":null,"categories":null,"content":null,"date":1516665600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1516665600,"objectID":"","permalink":"https://qnxr.xyz/tags/podpreset/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/podpreset/","section":"tags","summary":"","tags":null,"title":"PodPreset","type":"tags","url":"/tags/podpreset/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1516233600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1516233600,"objectID":"","permalink":"https://qnxr.xyz/tags/dashboard/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dashboard/","section":"tags","summary":"","tags":null,"title":"dashboard","type":"tags","url":"/tags/dashboard/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1516233600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":["kubernetes","dashboard","rbac","权限"],"kind":"page","lang":"en","lastmod":1516233600,"objectID":"9ace6fda42b829a2dc543a30af4c1d7a","permalink":"https://qnxr.xyz/post/add-authorization-for-kubernetes-dashboard/","publishdate":"2017-01-18T00:00:00Z","readingtime":5,"relpermalink":"/post/add-authorization-for-kubernetes-dashboard/","section":"post","summary":"\u003cp\u003e前面我们在\u003ca href=\"/post/update-kubernetes-dashboard-more-secure\"\u003ekubernetes dashboard 升级之路\u003c/a\u003e一文中成功的将\u003ccode\u003eDashboard\u003c/code\u003e升级到最新版本了，增加了身份认证功能，之前为了方便增加了一个\u003ccode\u003eadmin\u003c/code\u003e用户，然后授予了\u003ccode\u003ecluster-admin\u003c/code\u003e的角色绑定，而该角色绑定是系统内置的一个超级管理员权限，也就是用该用户的\u003ccode\u003etoken\u003c/code\u003e登录\u003ccode\u003eDashboard\u003c/code\u003e后会很\u003cstrong\u003e强势\u003c/strong\u003e，什么权限都有，想干嘛干嘛，这样的操作显然是非常危险的。接下来我们来为一个新的用户添加访问权限控制。\u003c/p\u003e","tags":["kubernetes","dashboard","rbac"],"title":"为kubernetes dashboard访问用户添加权限控制","type":"post","url":"/post/add-authorization-for-kubernetes-dashboard/","weight":0,"wordcount":2036},{"author":null,"categories":null,"content":null,"date":1515801600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1515801600,"objectID":"","permalink":"https://qnxr.xyz/tags/flask/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/flask/","section":"tags","summary":"","tags":null,"title":"flask","type":"tags","url":"/tags/flask/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1515801600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1515801600,"objectID":"","permalink":"https://qnxr.xyz/tags/react/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/react/","section":"tags","summary":"","tags":null,"title":"react","type":"tags","url":"/tags/react/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1515801600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1515801600,"objectID":"","permalink":"https://qnxr.xyz/tags/tdd/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tdd/","section":"tags","summary":"","tags":null,"title":"TDD","type":"tags","url":"/tags/tdd/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1515801600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":13900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1515801600,"objectID":"1d9b43009a381ebafdd0c5d1b98172eb","permalink":"https://qnxr.xyz/post/tdd-develop-python-microservice-app-part2/","publishdate":"2018-01-13T00:00:00Z","readingtime":28,"relpermalink":"/post/tdd-develop-python-microservice-app-part2/","section":"post","summary":"\u003cp\u003e本节课我们将我们的项目拆分成3个工程，我们也会增加一些集成测试来确保每一个服务都能够正确的运行，引入持续集成概念，最后，我们还将添加一个\u003ccode\u003eReactJS\u003c/code\u003e的客户端。\u003c/p\u003e","tags":["python","flask","TDD","docker","react","kubernetes","Microservice"],"title":"TDD开发容器化的Python微服务应用(二)","type":"post","url":"/post/tdd-develop-python-microservice-app-part2/","weight":0,"wordcount":13828},{"author":null,"categories":null,"content":null,"date":1515456000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1515456000,"objectID":"","permalink":"https://qnxr.xyz/tags/pyenv/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pyenv/","section":"tags","summary":"","tags":null,"title":"pyenv","type":"tags","url":"/tags/pyenv/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1515456000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3400,"html":null,"keywords":["python","pyenv","virtualenv","docker","虚拟"],"kind":"page","lang":"en","lastmod":1515456000,"objectID":"c3917f42421ba7321e8220002e055ee4","permalink":"https://qnxr.xyz/post/python-virtualenv-all-know/","publishdate":"2018-01-09T00:00:00Z","readingtime":7,"relpermalink":"/post/python-virtualenv-all-know/","section":"post","summary":"\u003cp\u003e对于每个\u003ccode\u003epython\u003c/code\u003e项目依赖的库版本都有可能不一样，如果将依赖包都安装到公共环境的话显然是没法进行区分的，甚至是不同的项目使用的\u003ccode\u003epython\u003c/code\u003e版本都不尽相同，有的用\u003ccode\u003epython2.7\u003c/code\u003e，有的用\u003ccode\u003epython3.6\u003c/code\u003e，所以对于\u003ccode\u003epython\u003c/code\u003e项目的环境进行隔离管理就成为一个必然的需求了。\u003c/p\u003e","tags":["python","pyenv","virtualenv","docker"],"title":"Python 虚拟环境全知道","type":"post","url":"/post/python-virtualenv-all-know/","weight":0,"wordcount":3324},{"author":null,"categories":null,"content":null,"date":1515456000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1515456000,"objectID":"","permalink":"https://qnxr.xyz/tags/virtualenv/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/virtualenv/","section":"tags","summary":"","tags":null,"title":"virtualenv","type":"tags","url":"/tags/virtualenv/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1514894400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1514894400,"objectID":"","permalink":"https://qnxr.xyz/tags/nginmesh/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nginmesh/","section":"tags","summary":"","tags":null,"title":"nginmesh","type":"tags","url":"/tags/nginmesh/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","date":1514894400,"description":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","dir":"post\\","excerpt_html":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","excerpt_text":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","expirydate":-62135596800,"fuzzywordcount":2700,"html":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","keywords":null,"kind":"page","lang":"en","lastmod":1514894400,"objectID":"f12f8e4e5417662ca5f2745b62aadb1e","permalink":"https://qnxr.xyz/2018/01/02/nginmesh-install/","publishdate":"2018-01-02T12:00:00Z","readingtime":6,"relpermalink":"/2018/01/02/nginmesh-install/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003eNginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。\u003c/p\u003e","tags":["Istio","service Mesh","nginmesh"],"title":"Nginx开源Service Mesh组件Nginmesh安装指南","type":"post","url":"/2018/01/02/nginmesh-install/","weight":0,"wordcount":2677},{"author":null,"categories":null,"content":null,"date":1514851200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1514851200,"objectID":"","permalink":"https://qnxr.xyz/tags/django2.0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/django2.0/","section":"tags","summary":"","tags":null,"title":"django2.0","type":"tags","url":"/tags/django2.0/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1514851200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1514851200,"objectID":"46030feb78831c0c571c5e549b5662d1","permalink":"https://qnxr.xyz/post/upgrading-django-20-10-tips/","publishdate":"2018-01-02T00:00:00Z","readingtime":2,"relpermalink":"/post/upgrading-django-20-10-tips/","section":"post","summary":"\u003cp\u003e备受期待的\u003ca href=\"https://www.djangoproject.com/start/overview/\"\u003edjango 2.0\u003c/a\u003e已经发布了，最大的一个变化就是不再支持\u003ccode\u003epython2.x\u003c/code\u003e版本了，这也为我们还在保守使用的2.x的同学们敲响了警钟，赶紧学习\u003ccode\u003epython3.x\u003c/code\u003e吧，虽然大同小异，但是\u003ccode\u003epython3.x\u003c/code\u003e还是提供了很多更高级的用法。\u003c/p\u003e","tags":["django","django2.0"],"title":"更新django2.0的10条注意事项","type":"post","url":"/post/upgrading-django-20-10-tips/","weight":0,"wordcount":903},{"author":null,"categories":null,"content":null,"date":1514419200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":10900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1514419200,"objectID":"027f5115632b4832d9e1102f3a5d24cd","permalink":"https://qnxr.xyz/post/tdd-develop-python-microservice-app/","publishdate":"2017-12-28T00:00:00Z","readingtime":22,"relpermalink":"/post/tdd-develop-python-microservice-app/","section":"post","summary":"\u003cp\u003e在这个课程中，你将学习如何使用\u003ccode\u003eDocker\u003c/code\u003e快速创建开发环境、管理多个微服务，应用程序在本地运行后，您将学习怎样在生产环境部署应用。我们也会练习\u003ccode\u003eTDD\u003c/code\u003e(测试驱动开发)，在你的项目中测试先行，我们重点将放在服务端的单元测试、功能和集成测试以及端到端的测试上面，以确保整个系统按预期工作。\u003c/p\u003e","tags":["python","flask","TDD","docker","react","kubernetes","Microservice"],"title":"TDD开发容器化的Python微服务应用(一)","type":"post","url":"/post/tdd-develop-python-microservice-app/","weight":0,"wordcount":10817},{"author":null,"categories":null,"content":null,"date":1514332800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":["kubernetes","prometheus","alertmanager","报警","钉钉","webhook"],"kind":"page","lang":"en","lastmod":1514332800,"objectID":"fa729b17d24610227f431a21fbdfab87","permalink":"https://qnxr.xyz/post/alertmanager-of-prometheus-in-practice/","publishdate":"2017-12-27T00:00:00Z","readingtime":6,"relpermalink":"/post/alertmanager-of-prometheus-in-practice/","section":"post","summary":"\u003cp\u003e在前面一文\u003ca href=\"/post/kubernetes-monitor-prometheus-grafana/\"\u003eKubernetes使用Prometheus搭建监控平台\u003c/a\u003e中我们知道了怎么使用\u003ccode\u003ePrometheus\u003c/code\u003e来搭建监控平台，也了解了\u003ccode\u003egrafana\u003c/code\u003e的使用。这篇文章就来说说报警系统的搭建，有人说报警用\u003ccode\u003egrafana\u003c/code\u003e就行了，实际上\u003ccode\u003egrafana\u003c/code\u003e对报警的支持真的很弱，而\u003ccode\u003ePrometheus\u003c/code\u003e提供的报警系统就强大很多，今天我们的主角就是\u003ccode\u003eAlertManager\u003c/code\u003e。\u003c/p\u003e","tags":["kubernetes","prometheus","alertmanager"],"title":"Prometheus报警AlertManager实战","type":"post","url":"/post/alertmanager-of-prometheus-in-practice/","weight":0,"wordcount":2642},{"author":null,"categories":null,"content":null,"date":1514246400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1514246400,"objectID":"3e8b20be90914a47f30edded19066bfa","permalink":"https://qnxr.xyz/post/webpack3-get-started/","publishdate":"2017-12-26T00:00:00Z","readingtime":1,"relpermalink":"/post/webpack3-get-started/","section":"post","summary":"\u003cp\u003e前段时间花了点时间做了一个视频教学网站：\u003ca href=\"https://www.haimaxy.com?utm_source=blog\u0026amp;utm_campaign=webpack-started\u0026amp;utm_medium=article\"\u003e海马学院\u003c/a\u003e，该产品的核心是围绕\u003ccode\u003epython\u003c/code\u003e全栈(也会涉及到\u003ccode\u003enodejs\u003c/code\u003e、\u003ccode\u003egolang\u003c/code\u003e等)相关的知识教学，基础的一些教学视频全免费的，但是也会推出很多付费的教学视频，付费的以实际的实战项目为主，如果你愿意的话，只需要花费一顿饭钱就可以学习到很多项目实战的经验。\u003c/p\u003e","tags":["webpack","视频"],"title":"webpack3入门到放肆视频教程","type":"post","url":"/post/webpack3-get-started/","weight":0,"wordcount":472},{"author":null,"categories":null,"content":null,"date":1514246400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1514246400,"objectID":"","permalink":"https://qnxr.xyz/tags/%E8%A7%86%E9%A2%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%A7%86%E9%A2%91/","section":"tags","summary":"","tags":null,"title":"视频","type":"tags","url":"/tags/%E8%A7%86%E9%A2%91/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1513728000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1513728000,"objectID":"","permalink":"https://qnxr.xyz/tags/git/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/git/","section":"tags","summary":"","tags":null,"title":"git","type":"tags","url":"/tags/git/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1513728000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1513728000,"objectID":"","permalink":"https://qnxr.xyz/tags/log/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/log/","section":"tags","summary":"","tags":null,"title":"log","type":"tags","url":"/tags/log/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1513728000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1513728000,"objectID":"004e4968720627c1088cf56495292d19","permalink":"https://qnxr.xyz/post/a-better-git-log/","publishdate":"2017-12-20T00:00:00Z","readingtime":1,"relpermalink":"/post/a-better-git-log/","section":"post","summary":"\u003cp\u003e对于码农来说\u003ccode\u003egit log\u003c/code\u003e是自然熟悉不过的了，但是每天面对\u003ccode\u003egit log\u003c/code\u003e原始的日志格式，你是不是觉得很烦人啊，因为上面的给的信息太不人性化了，而且我相信大部分的码农的提交日志都是随心所欲的\u003c/p\u003e","tags":["git","log","ops"],"title":"更优雅的git log","type":"post","url":"/post/a-better-git-log/","weight":0,"wordcount":271},{"author":null,"categories":["Tech"],"content":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","date":1511870400,"description":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","dir":"post\\","excerpt_html":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","excerpt_text":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","expirydate":-62135596800,"fuzzywordcount":5600,"html":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","keywords":null,"kind":"page","lang":"en","lastmod":1511870400,"objectID":"62314fd01037305fcf6b8c9ad3b3b02d","permalink":"https://qnxr.xyz/2017/11/28/access-application-from-outside/","publishdate":"2017-11-28T12:00:00Z","readingtime":12,"relpermalink":"/2017/11/28/access-application-from-outside/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003e我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。\u003c/p\u003e","tags":["Kubernetes"],"title":"如何从外部访问Kubernetes集群中的应用？","type":"post","url":"/2017/11/28/access-application-from-outside/","weight":0,"wordcount":5543},{"author":null,"categories":null,"content":null,"date":1511308800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":["kubernetes","prometheus2","grafana","升级"],"kind":"page","lang":"en","lastmod":1511308800,"objectID":"7adfbf63a62d4132bea5388b80e8db23","permalink":"https://qnxr.xyz/post/update-prometheus-2-in-kubernetes/","publishdate":"2017-11-22T00:00:00Z","readingtime":2,"relpermalink":"/post/update-prometheus-2-in-kubernetes/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eprometheus\u003c/code\u003e2.0正式版已经发布了，新增了很多特性，特别是底层存储性能提升了不少：\u003ca href=\"https://prometheus.io/blog/2017/11/08/announcing-prometheus-2-0/\"\u003ehttps://prometheus.io/blog/2017/11/08/announcing-prometheus-2-0/\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e在将之前监控平台升级到2.0 的过程中还是有一些坑的，因为有很多参数已经更改了，还不清除怎么在\u003ccode\u003ekubernetes\u003c/code\u003e上搭建\u003ccode\u003eprometheus\u003c/code\u003e监控平台的，可以查看前面的文章\u003ca href=\"/post/kubernetes-monitor-prometheus-grafana/\"\u003eKubernetes使用Prometheus搭建监控平台\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e本文章中涉及到的\u003ccode\u003eyaml\u003c/code\u003e文件可以在\u003ca href=\"https://github.com/cnych/k8s-repo/tree/master/prometheus\"\u003egithub\u003c/a\u003e中查看。\u003c/p\u003e","tags":["kubernetes","prometheus","grafana"],"title":"Kubernetes 下升级Prometheus2.0","type":"post","url":"/post/update-prometheus-2-in-kubernetes/","weight":0,"wordcount":934},{"author":null,"categories":null,"content":null,"date":1511308800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":["kubernetes","EFK","ElasticSearch","Kibana","Fluentd","阿里云"],"kind":"page","lang":"en","lastmod":1511308800,"objectID":"f82215c996ce25b6115bc93140df1577","permalink":"https://qnxr.xyz/post/kubernetes-logs-collect/","publishdate":"2017-11-22T00:00:00Z","readingtime":3,"relpermalink":"/post/kubernetes-logs-collect/","section":"post","summary":"\u003cp\u003e完善的日志系统是保证系统持续稳定运行的基石，帮助提升运维、运营效率，建立大数据时代的海量日志处理等能力都需要日志系统的支持，所以搭建一套行之有效的日志系统至关重要。\u003c/p\u003e\n\u003cp\u003e本文将介绍两种kubernetes 集群下日志收集的方案：阿里云日志服务或者\u003ccode\u003eEFK\u003c/code\u003e方案\u003c/p\u003e","tags":["kubernetes","ElasticSearch","阿里云"],"title":"kubernetes 日志收集方案","type":"post","url":"/post/kubernetes-logs-collect/","weight":0,"wordcount":1216},{"author":null,"categories":null,"content":null,"date":1511222400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1511222400,"objectID":"","permalink":"https://qnxr.xyz/tags/cluster/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cluster/","section":"tags","summary":"","tags":null,"title":"cluster","type":"tags","url":"/tags/cluster/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1511222400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":["kubernetes","socket.io","cluster","集群","nodejs"],"kind":"page","lang":"en","lastmod":1511222400,"objectID":"815e2271395e5642aa761bb01db9baa8","permalink":"https://qnxr.xyz/post/socketio-multiple-nodes-in-kubernetes/","publishdate":"2017-11-21T00:00:00Z","readingtime":5,"relpermalink":"/post/socketio-multiple-nodes-in-kubernetes/","section":"post","summary":"\u003cp\u003e\u003ccode\u003esocket.io\u003c/code\u003e 单节点模式是很容易部署的，但是往往在生产环境一个节点不能满足业务需求，况且还要保证节点挂掉的情况仍能正常提供服务，所以多节点模式就成为了生成环境的一种必须的部署模式。\u003c/p\u003e\n\u003cp\u003e本文将介绍如何在kubernetes 集群上部署多节点的\u003ccode\u003esocket.io\u003c/code\u003e服务。\u003c/p\u003e\n\u003cp\u003e文章中涉及到的代码可以前往\u003ca href=\"https://github.com/cnych/k8s-socketio-cluster-demo\"\u003ehttps://github.com/cnych/k8s-socketio-cluster-demo\u003c/a\u003e查看。\u003c/p\u003e","tags":["kubernetes","socket.io","cluster"],"title":"kubernetes 下实现socket.io 的集群模式","type":"post","url":"/post/socketio-multiple-nodes-in-kubernetes/","weight":0,"wordcount":2145},{"author":null,"categories":null,"content":null,"date":1511222400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1511222400,"objectID":"","permalink":"https://qnxr.xyz/tags/socket.io/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/socket.io/","section":"tags","summary":"","tags":null,"title":"socket.io","type":"tags","url":"/tags/socket.io/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1511136000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3100,"html":null,"keywords":["kubernetes","docker","Harbor","私有仓库"],"kind":"page","lang":"en","lastmod":1511136000,"objectID":"2384b308273d64c1345febbcd6e802b7","permalink":"https://qnxr.xyz/post/install-docker-registry-harbor-in-kubernetes/","publishdate":"2017-11-20T00:00:00Z","readingtime":7,"relpermalink":"/post/install-docker-registry-harbor-in-kubernetes/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eHarbor\u003c/code\u003e是一个用于存储和分发Docker 镜像的企业级Registry 服务器，通过添加一些企业必需的功能特性，例如安全、标识和管理等，扩展了开源Docker Distribution。作为一个企业级私有Registry 服务器，Harbor 提供了更好的性能和安全。提升用户使用Registry构建和运行环境传输镜像的效率。Harbor 支持安装在多个Registry节点的镜像资源复制，镜像全部保存在私有Registry 中， 确保数据和知识产权在公司内部网络中管控。另外，Harbor也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等。\u003c/p\u003e\n\u003cp\u003e本文将介绍如何在kubernetes 集群上搭建一个高可用的Harbor 服务。\u003c/p\u003e","tags":["kubernetes","docker","Harbor"],"title":"在kubernetes 集群上搭建docker 私有仓库Harbor","type":"post","url":"/post/install-docker-registry-harbor-in-kubernetes/","weight":0,"wordcount":3038},{"author":null,"categories":null,"content":null,"date":1510531200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":["kubernetes","dashboard","https","登录","认证","升级"],"kind":"page","lang":"en","lastmod":1510531200,"objectID":"21d08b8a5eacf5b9e87a5cc9ee12efd1","permalink":"https://qnxr.xyz/post/update-kubernetes-dashboard-more-secure/","publishdate":"2017-11-13T00:00:00Z","readingtime":6,"relpermalink":"/post/update-kubernetes-dashboard-more-secure/","section":"post","summary":"\u003cp\u003e在前面\u003ca href=\"/post/manual-install-high-available-kubernetes-cluster\"\u003e手动搭建高可用的kubernetes 集群\u003c/a\u003e一文中我们安装的\u003ca href=\"/tags/kubernetes/\"\u003ekubernetes\u003c/a\u003e集群是\u003ccode\u003ev1.8.2\u003c/code\u003e版本，该版本的\u003ccode\u003edashboard\u003c/code\u003e插件还是\u003cstrong\u003e1.6.x\u003c/strong\u003e，如果你把\u003ccode\u003edashboard\u003c/code\u003e暴露在公网环境下面访问的话，是非常不安全的，因为该版本没有任何的安全登录之类的处理，在最新版本的\u003cstrong\u003e1.7.x\u003c/strong\u003e中则新增了更多安全相关的特性，我们可以升级到该版本或以上来暴露我们的\u003ccode\u003edashboard\u003c/code\u003e到公网环境下面，当然安全都是相对的，能不暴露在公网环境下面当然是最好的。\u003c/p\u003e","tags":["kubernetes","dashboard","https"],"title":"kubernetes dashboard 升级之路","type":"post","url":"/post/update-kubernetes-dashboard-more-secure/","weight":0,"wordcount":2625},{"author":null,"categories":["Tech"],"content":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","date":1510153200,"description":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","dir":"post\\","excerpt_html":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","excerpt_text":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","expirydate":-62135596800,"fuzzywordcount":3300,"html":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","keywords":null,"kind":"page","lang":"en","lastmod":1510153200,"objectID":"320d9f0641802d90086c08b5cf554c4d","permalink":"https://qnxr.xyz/2017/11/08/istio-canary-release/","publishdate":"2017-11-08T15:00:00Z","readingtime":7,"relpermalink":"/2017/11/08/istio-canary-release/","section":"post","summary":"灰度发布（又名金丝雀发布）介绍 当应用上线以后，运维面临的一大挑战是如何能够在不影响已上线业务的情况下进行升级。做过产品的同学都清楚，不管在发","tags":["Istio"],"title":"采用Istio实现灰度发布(金丝雀发布)","type":"post","url":"/2017/11/08/istio-canary-release/","weight":0,"wordcount":3210},{"author":null,"categories":["Tech"],"content":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","date":1510012800,"description":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","dir":"post\\","excerpt_html":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","excerpt_text":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","expirydate":-62135596800,"fuzzywordcount":1400,"html":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","keywords":null,"kind":"page","lang":"en","lastmod":1510012800,"objectID":"5ae8190e8b21dc18fae6ba6a26ad2f8e","permalink":"https://qnxr.xyz/2017/11/07/istio-traffic-shifting/","publishdate":"2017-11-07T00:00:00Z","readingtime":3,"relpermalink":"/2017/11/07/istio-traffic-shifting/","section":"post","summary":"\u003cp\u003e关于Istio的更多内容请参考\u003ca href=\"http://istio.doczh.cn/\"\u003eistio中文文档\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e原文参见\u003ca href=\"https://istio.io/docs/tasks/traffic-management/traffic-shifting.html\"\u003eTraffic Shifting\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。\u003c/p\u003e","tags":["Istio"],"title":"使用Istio实现应用流量转移","type":"post","url":"/2017/11/07/istio-traffic-shifting/","weight":0,"wordcount":1313},{"author":null,"categories":null,"content":null,"date":1509926400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":19800,"html":null,"keywords":["kubernetes","安装","二进制","高可用","集群","docker","kubectl","Haproxy","Keepalived"],"kind":"page","lang":"en","lastmod":1509926400,"objectID":"f29dcde4e1f56771d29d12e698e89b3d","permalink":"https://qnxr.xyz/post/manual-install-high-available-kubernetes-cluster/","publishdate":"2017-11-06T00:00:00Z","readingtime":40,"relpermalink":"/post/manual-install-high-available-kubernetes-cluster/","section":"post","summary":"\u003cp\u003e之前按照\u003ca href=\"https://github.com/opsnull/follow-me-install-kubernetes-cluster\"\u003e和我一步步部署 kubernetes 集群\u003c/a\u003e的步骤一步一步的成功的使用二进制的方式安装了\u003ccode\u003ekubernetes\u003c/code\u003e集群，在该文档的基础上重新部署了最新的\u003ccode\u003ev1.8.2\u003c/code\u003e版本，实现了\u003ccode\u003ekube-apiserver\u003c/code\u003e的高可用、\u003ccode\u003etraefik ingress\u003c/code\u003e 的部署、在\u003ccode\u003ekubernetes\u003c/code\u003e上安装\u003ccode\u003edocker\u003c/code\u003e的私有仓库\u003ccode\u003eharbor\u003c/code\u003e、容器化\u003ccode\u003ekubernetes\u003c/code\u003e部分组建、使用阿里云日志服务收集日志。\u003c/p\u003e\n\u003cp\u003e部署完成后，你将理解系统各组件的交互原理，进而能快速解决实际问题，所以本文档主要适合于那些有一定\u003ccode\u003ekubernetes\u003c/code\u003e基础，想通过一步步部署的方式来学习和了解系统配置、运行原理的人。\u003c/p\u003e\n\u003cp\u003e本系列系文档适用于 \u003ccode\u003eCentOS 7\u003c/code\u003e、\u003ccode\u003eUbuntu 16.04\u003c/code\u003e 及以上版本系统，由于启用了 \u003ccode\u003eTLS\u003c/code\u003e 双向认证、\u003ccode\u003eRBAC\u003c/code\u003e 授权等严格的安全机制，建议\u003cstrong\u003e从头开始部署\u003c/strong\u003e，否则可能会认证、授权等失败！\u003c/p\u003e","tags":["kubernetes","高可用","集群","docker"],"title":"手动搭建高可用的kubernetes 集群","type":"post","url":"/post/manual-install-high-available-kubernetes-cluster/","weight":0,"wordcount":19757},{"author":null,"categories":null,"content":null,"date":1509926400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509926400,"objectID":"9b1ca136188146385ba2a8a3ce427b2b","permalink":"https://qnxr.xyz/post/make-https-blog/","publishdate":"2017-11-06T00:00:00Z","readingtime":2,"relpermalink":"/post/make-https-blog/","section":"post","summary":"\u003cp\u003e谁都不愿意在使用网站服务的时候，被恶心的运营商劫持加上一些他们的服务(真的很贱，不是吗？)，不过这能难道我们程序员吗？当然不能，上\u003ccode\u003ehttps\u003c/code\u003e，老子全站\u003ccode\u003ehttps\u003c/code\u003e，你再劫持给我看看。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps\u003c/code\u003e证书服务大部分都是收费的，而且很贵，阿里云可以申请一个免费的证书，只能绑定一个域名，这里我们使用更加友好的免费\u003ccode\u003ehttps\u003c/code\u003e服务：\u003ca href=\"https://letsencrypt.org/\"\u003eLet’s Encrypt\u003c/a\u003e\u003c/p\u003e","tags":["https","nginx","ops"],"title":"给博客加上HTTPS","type":"post","url":"/post/make-https-blog/","weight":0,"wordcount":939},{"author":null,"categories":null,"content":null,"date":1509926400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1509926400,"objectID":"","permalink":"https://qnxr.xyz/tags/%E9%9B%86%E7%BE%A4/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%9B%86%E7%BE%A4/","section":"tags","summary":"","tags":null,"title":"集群","type":"tags","url":"/tags/%E9%9B%86%E7%BE%A4/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1509926400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1509926400,"objectID":"","permalink":"https://qnxr.xyz/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/","section":"tags","summary":"","tags":null,"title":"高可用","type":"tags","url":"/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","date":1509796800,"description":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","dir":"post\\","excerpt_html":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","excerpt_text":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","expirydate":-62135596800,"fuzzywordcount":5600,"html":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","keywords":null,"kind":"page","lang":"en","lastmod":1509796800,"objectID":"d993f98f09d7341809e97a3c1ba8e960","permalink":"https://qnxr.xyz/2017/11/04/istio-install_and_example/","publishdate":"2017-11-04T12:00:00Z","readingtime":12,"relpermalink":"/2017/11/04/istio-install_and_example/","section":"post","summary":"\u003ch2 id=\"服务网格简介\"\u003e服务网格简介\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e服务网格\u003c/strong\u003e（Service Mesh）是为解决微服务的通信和治理而出现的一种\u003cstrong\u003e架构模式\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e服务网格将服务间通讯以及与此相关的管理控制功能从业务程序中下移到一个基础设施层，从而彻底隔离了业务逻辑和服务通讯两个关注点。采用服务网格后，应用开发者只需要关注并实现应用业务逻辑。服务之间的通信，包括服务发现，通讯的可靠性，通讯的安全性，服务路由等由服务网格层进行处理，并对应用程序透明。\u003c/p\u003e","tags":["Istio"],"title":"Istio及Bookinfo示例程序安装试用笔记","type":"post","url":"/2017/11/04/istio-install_and_example/","weight":0,"wordcount":5529},{"author":null,"categories":null,"content":null,"date":1509753600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509753600,"objectID":"cf37d97d83d29e7c3f79c50c928a7a4d","permalink":"https://qnxr.xyz/2017/11/03/hello-world/","publishdate":"2017-11-04T00:00:00Z","readingtime":1,"relpermalink":"/2017/11/03/hello-world/","section":"post","summary":"“Yeah It\u0026rsquo;s on. ” Hello World!","tags":null,"title":"Welcome to Zhaohuabing Blog","type":"post","url":"/2017/11/03/hello-world/","weight":0,"wordcount":10},{"author":null,"categories":null,"content":null,"date":1509494400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509494400,"objectID":"316482dc213402ed1fcd5ed9693c4511","permalink":"https://qnxr.xyz/post/django-staticroot-staticfilesdirs-function/","publishdate":"2017-11-01T00:00:00Z","readingtime":4,"relpermalink":"/post/django-staticroot-staticfilesdirs-function/","section":"post","summary":"\u003cp\u003e在做\u003ccode\u003eDjango\u003c/code\u003e项目的时候，经常会遇到静态文件访问的问题，在本地开发的时候可以正常的访问静态文件，部署到服务器上后就出现各种幺蛾子了，我猜你一定也遇到过吧？之前在\u003ccode\u003esettings.py\u003c/code\u003e配置文件中对\u003ccode\u003eSTATIC_ROOT\u003c/code\u003e与\u003ccode\u003eSTATICFILES_DIRS\u003c/code\u003e两个配置项不是特别理解，总感觉都差不多，在线上就把\u003ccode\u003eSTATIC_ROOT\u003c/code\u003e替换成\u003ccode\u003eSTATICFILES_DIRS\u003c/code\u003e了，虽然可以解决问题，但是却没有知其所以然。\u003c/p\u003e","tags":["python","django"],"title":"Django 中STATIC_ROOT 与STATICFILES_DIRS的区别","type":"post","url":"/post/django-staticroot-staticfilesdirs-function/","weight":0,"wordcount":1576},{"author":null,"categories":null,"content":null,"date":1509321600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1509321600,"objectID":"","permalink":"https://qnxr.xyz/tags/pdf/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pdf/","section":"tags","summary":"","tags":null,"title":"PDF","type":"tags","url":"/tags/pdf/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1509321600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509321600,"objectID":"7c74d47592c4810cdf56878149f3b4ea","permalink":"https://qnxr.xyz/post/python-convert-pdf-images/","publishdate":"2017-12-06T00:00:00Z","readingtime":2,"relpermalink":"/post/python-convert-pdf-images/","section":"post","summary":"\u003cp\u003e之前收集了很多优秀的\u003ccode\u003ePDF\u003c/code\u003e文档，但是需要看的时候不是很方便，需要去找到这个文件，如果是在手机上的话往往还需要下载\u003ccode\u003ePDF\u003c/code\u003e相关的插件才行，而且最大的问题是不便于资料的整理和分享。如果能够将\u003ccode\u003ePDF\u003c/code\u003e转换成网页，岂不是就能解决这些问题了？还能直接分享出去。\u003c/p\u003e\n\u003cp\u003e这里利用\u003ccode\u003ePyPDF\u003c/code\u003e包来处理\u003ccode\u003ePDF\u003c/code\u003e文件，为了方便快捷，我这里直接将一个页面转换成图片，就不需要去识别页面中的每一个\u003ccode\u003ePDF\u003c/code\u003e元素了，这是没必要的。\u003c/p\u003e","tags":["python","PDF"],"title":"利用Python 优雅的将PDF 转换成图片","type":"post","url":"/post/python-convert-pdf-images/","weight":0,"wordcount":685},{"author":null,"categories":null,"content":null,"date":1508544000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1508544000,"objectID":"","permalink":"https://qnxr.xyz/tags/%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC/","section":"tags","summary":"","tags":null,"title":"服务网格","type":"tags","url":"/tags/%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1508544000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":["microservice","Service Mesh","服务网格","微服务"],"kind":"page","lang":"en","lastmod":1508544000,"objectID":"f41b4b1c9f75423866c795fbe1fff26d","permalink":"https://qnxr.xyz/post/what-is-service-mesh/","publishdate":"2017-10-21T00:00:00Z","readingtime":4,"relpermalink":"/post/what-is-service-mesh/","section":"post","summary":"\u003cp\u003e现在最火的后端架构无疑是\u003ccode\u003e微服务\u003c/code\u003e了，微服务将之前的单体应用拆分成了许多独立的服务应用，每个微服务都是独立的，好处自然很多，但是随着应用的越来越大，微服务暴露出来的问题也就随之而来了，微服务越来越多，管理越来越麻烦，特别是要你部署一套新环境的时候，你就能体会到这种痛苦了，随之而来的\u003cstrong\u003e服务发现、负载均衡、Trace跟踪、流量管理、安全认证\u003c/strong\u003e等等问题。如果从头到尾完成过一套微服务框架的话，你就会知道这里面涉及到的东西真的非常多。当然随着微服务的不断发展，微服务的生态也不断完善，最近就发现新一代的微服务开发就悄然兴起了，那就是\u003ccode\u003e服务网格/Service Mesh\u003c/code\u003e。\u003c/p\u003e","tags":["microservice","Service Mesh","服务网格","微服务"],"title":"服务网格(Service Mesh)是什么?","type":"post","url":"/post/what-is-service-mesh/","weight":0,"wordcount":1633},{"author":null,"categories":null,"content":null,"date":1508284800,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":["kubernetes","deployment","滚动","升级","回滚","更新"],"kind":"page","lang":"en","lastmod":1508284800,"objectID":"7cbe0f373fc196cf5940433db6049f82","permalink":"https://qnxr.xyz/post/kubernetes-rollout-update/","publishdate":"2017-10-18T00:00:00Z","readingtime":5,"relpermalink":"/post/kubernetes-rollout-update/","section":"post","summary":"\u003cp\u003e我们\u003ccode\u003ek8s\u003c/code\u003e集群使用的是1.7.7版本的，该版本中官方已经推荐使用\u003ccode\u003eDeployment\u003c/code\u003e代替\u003ccode\u003eReplication Controller\u003c/code\u003e(rc)了，\u003ccode\u003eDeployment\u003c/code\u003e继承了rc的全部功能外，还可以查看升级详细进度和状态，当升级出现问题的时候，可以使用回滚操作回滚到指定的版本，每一次对Deployment的操作，都会保存下来，变能方便的进行回滚操作了，另外对于每一次升级都可以随时暂停和启动，拥有多种升级方案：\u003ccode\u003eRecreate\u003c/code\u003e删除现在的\u003ccode\u003ePod\u003c/code\u003e，重新创建；\u003ccode\u003eRollingUpdate\u003c/code\u003e滚动升级，逐步替换现有\u003ccode\u003ePod\u003c/code\u003e，对于生产环境的服务升级，显然这是一种最好的方式。\u003c/p\u003e","tags":["kubernetes","deployment"],"title":"Kubernetes Deployment滚动升级","type":"post","url":"/post/kubernetes-rollout-update/","weight":0,"wordcount":2275},{"author":null,"categories":null,"content":null,"date":1508198400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1508198400,"objectID":"","permalink":"https://qnxr.xyz/tags/influxdb/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/influxdb/","section":"tags","summary":"","tags":null,"title":"influxdb","type":"tags","url":"/tags/influxdb/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1508198400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2800,"html":null,"keywords":["kubernetes","监控","prometheus","grafana","influxdb"],"kind":"page","lang":"en","lastmod":1508198400,"objectID":"fae029ec02b2199a0340f503cf8878ec","permalink":"https://qnxr.xyz/post/kubernetes-monitor-prometheus-grafana/","publishdate":"2017-10-17T00:00:00Z","readingtime":6,"relpermalink":"/post/kubernetes-monitor-prometheus-grafana/","section":"post","summary":"\u003cp\u003e最近在测试环境搭建了\u003ccode\u003eKubernetes\u003c/code\u003e集群环境，迁移了部分测试环境的应用，由于测试集群性能不是很好，有时会遇到集群资源不够的情况，一般情况下我们是直接通过Dashboard的资源统计图标进行观察的，但是很显然如果要上到生产环境，就需要更自动化的方式来对集群、Pod甚至容器进行监控了。\u003ccode\u003eKubernetes\u003c/code\u003e内置了一套监控方案：influxdb+grafana+heapster。但由于之前我们的应用的业务监控使用的是\u003ccode\u003ePrometheus\u003c/code\u003e，所以这里准备使用\u003ccode\u003ePrometheus\u003c/code\u003e来完成k8s的集群监控。\u003c/p\u003e","tags":["kubernetes","prometheus","grafana","influxdb"],"title":"Kubernetes使用Prometheus搭建监控平台","type":"post","url":"/post/kubernetes-monitor-prometheus-grafana/","weight":0,"wordcount":2772},{"author":null,"categories":null,"content":null,"date":1479081600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479081600,"objectID":"2dc2ef5c092750d27e3b862c073ae4ae","permalink":"https://qnxr.xyz/post/django-decorator-usage/","publishdate":"2016-11-14T00:00:00Z","readingtime":4,"relpermalink":"/post/django-decorator-usage/","section":"post","summary":"\u003cp\u003e装饰器本质上是一个\u003ccode\u003ePython\u003c/code\u003e函数，它可以让其他函数在不需要做任何代码变动的前提下增加额外功能，装饰器的返回值也是一个函数对象。它经常用于有切面需求的场景，比如：插入日志、性能测试、事务处理、缓存、权限校验等场景。装饰器是解决这类问题的绝佳设计，有了装饰器，我们就可以抽离出大量与函数功能本身无关的雷同代码并继续重用。概括的讲，\u003cstrong\u003e装饰器的作用就是为已经存在的对象添加额外的功能\u003c/strong\u003e。\u003c/p\u003e","tags":["python","装饰器"],"title":"Python装饰器简介","type":"post","url":"/post/django-decorator-usage/","weight":0,"wordcount":1817},{"author":null,"categories":null,"content":null,"date":1479081600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1479081600,"objectID":"","permalink":"https://qnxr.xyz/tags/%E8%A3%85%E9%A5%B0%E5%99%A8/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%A3%85%E9%A5%B0%E5%99%A8/","section":"tags","summary":"","tags":null,"title":"装饰器","type":"tags","url":"/tags/%E8%A3%85%E9%A5%B0%E5%99%A8/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1459382400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1459382400,"objectID":"","permalink":"https://qnxr.xyz/tags/awk/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/awk/","section":"tags","summary":"","tags":null,"title":"awk","type":"tags","url":"/tags/awk/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1459382400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1459382400,"objectID":"","permalink":"https://qnxr.xyz/tags/linux/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/linux/","section":"tags","summary":"","tags":null,"title":"linux","type":"tags","url":"/tags/linux/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1459382400,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459382400,"objectID":"5c800ad38878077fab86c5e512bbb2c5","permalink":"https://qnxr.xyz/post/awk-base-compute/","publishdate":"2016-03-31T00:00:00Z","readingtime":2,"relpermalink":"/post/awk-base-compute/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eawk\u003c/code\u003e是非常强大的文本处理工具，之前经常见到脚本里面有使用，但是没有自己完完整整来写过awk命令。正好今天公司里有一个非常的大的日志文件需要分析。需求是将日志文件中记录的耗时时间评价值、最大值、最小值计算出来。日志的格式如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"color:#ff79c6\"\u003e[\u003c/span\u003e2016-03-30 00:02:02,475\u003cspan style=\"color:#ff79c6\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#ff79c6\"\u003e[\u003c/span\u003e17243\u003cspan style=\"color:#ff79c6\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#ff79c6\"\u003e[\u003c/span\u003e140344433927936\u003cspan style=\"color:#ff79c6\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#ff79c6\"\u003e[\u003c/span\u003eMainThread\u003cspan style=\"color:#ff79c6\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#ff79c6\"\u003e[\u003c/span\u003etasks.py:733\u003cspan style=\"color:#ff79c6\"\u003e]\u003c/span\u003e DEBUG \u003cspan style=\"color:#ff79c6\"\u003e[\u003c/span\u003eupload to oss\u003cspan style=\"color:#ff79c6\"\u003e]\u003c/span\u003e upload file /data/image5/user_upload_image/20160330/00/1458483897397580_101183475_1459267295740.jpg to oss cost \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003etime\u003c/span\u003e \u003cspan style=\"color:#bd93f9\"\u003e28\u003c/span\u003e ms\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["ops","linux","awk"],"title":"用awk做基本运算","type":"post","url":"/post/awk-base-compute/","weight":0,"wordcount":598},{"author":null,"categories":null,"content":null,"date":1456608060,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1456608060,"objectID":"","permalink":"https://qnxr.xyz/tags/301/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/301/","section":"tags","summary":"","tags":null,"title":"301","type":"tags","url":"/tags/301/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1456608060,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456608060,"objectID":"ee38a23d31160966a8a260114fbfbcb5","permalink":"https://qnxr.xyz/post/nginx-301-redirect/","publishdate":"2016-02-27T21:21:00Z","readingtime":1,"relpermalink":"/post/nginx-301-redirect/","section":"post","summary":"\u003cp\u003e网站中带\u003ccode\u003ewww\u003c/code\u003e和不带都可以访问，但是这样却会不利于网站\u003ccode\u003eSEO\u003c/code\u003e的，会分权，所以需要将二者的访问合并到一起，这特别在网站架设之初就应该好好规划。\u003c/p\u003e\n\u003cp\u003e有很多的第三方DNS解析服务，提供了直接的显示跳转的服务，比如\u003ccode\u003ednspod\u003c/code\u003e，但是最近我在使用的过程中发现该服务非常的不稳定，导致网站经常性的访问不了。所以就打算自己来做，方法很简单，就是\u003ccode\u003e301跳转\u003c/code\u003e，\u003cstrong\u003e301是永久跳转\u003c/strong\u003e，\u003cstrong\u003e302是临时性跳转\u003c/strong\u003e。\u003c/p\u003e","tags":["ops","nginx","301"],"title":"Nginx中如何设置301跳转","type":"post","url":"/post/nginx-301-redirect/","weight":0,"wordcount":238},{"author":null,"categories":null,"content":null,"date":1430784000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1430784000,"objectID":"","permalink":"https://qnxr.xyz/tags/csv/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/csv/","section":"tags","summary":"","tags":null,"title":"csv","type":"tags","url":"/tags/csv/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1430784000,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1430784000,"objectID":"fc4954ffc9d77a0879ff8446d348d999","permalink":"https://qnxr.xyz/post/python-process-csv-file/","publishdate":"2015-05-05T00:00:00Z","readingtime":1,"relpermalink":"/post/python-process-csv-file/","section":"post","summary":"\u003cp\u003e\u003ccode\u003eCSV\u003c/code\u003e通常是纯文本文件。可以用\u003ccode\u003eSublime Text\u003c/code\u003e或者\u003ccode\u003eEXCEL\u003c/code\u003e打开，\u003ccode\u003epython\u003c/code\u003e提供了一个非常强大的处理csv文件的库csv。\u003c/p\u003e\n\u003cp\u003e一般情况，如果csv文件不是很复杂则可以直接输出文件中每行的数据，代码如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"color:#ff79c6\"\u003eimport\u003c/span\u003e csv\n\n\u003cspan style=\"color:#ff79c6\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eread_csv_file\u003c/span\u003e(path):\n    \u003cspan style=\"color:#ff79c6\"\u003ewith\u003c/span\u003e \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003eopen\u003c/span\u003e(path, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#39;rb\u0026#39;\u003c/span\u003e) \u003cspan style=\"color:#ff79c6\"\u003eas\u003c/span\u003e f:  \u003cspan style=\"color:#6272a4\"\u003e# r表示读取，b表示读取的文件\u003c/span\u003e\n        reader \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e csv\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003ereader(f)\n        \u003cspan style=\"color:#ff79c6\"\u003efor\u003c/span\u003e row \u003cspan style=\"color:#ff79c6\"\u003ein\u003c/span\u003e reader:\n            \u003cspan style=\"color:#ff79c6\"\u003eprint\u003c/span\u003e row\n    f\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003eclose()\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["python","csv"],"title":"用python处理csv文件","type":"post","url":"/post/python-process-csv-file/","weight":0,"wordcount":451},{"author":null,"categories":null,"content":null,"date":1404259200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1404259200,"objectID":"","permalink":"https://qnxr.xyz/tags/action/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/action/","section":"tags","summary":"","tags":null,"title":"action","type":"tags","url":"/tags/action/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1404259200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1404259200,"objectID":"","permalink":"https://qnxr.xyz/tags/admin/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/admin/","section":"tags","summary":"","tags":null,"title":"admin","type":"tags","url":"/tags/admin/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1404259200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1404259200,"objectID":"970945dd6c951dbd12d79336b4be9798","permalink":"https://qnxr.xyz/post/custom-django-admin-actions/","publishdate":"2014-07-02T00:00:00Z","readingtime":1,"relpermalink":"/post/custom-django-admin-actions/","section":"post","summary":"\u003cp\u003e提到强大的\u003ccode\u003edjango\u003c/code\u003e，最能引起大家共鸣的可能是其自带的\u003ccode\u003eadmin\u003c/code\u003e了，提供了默认的强大的功能，而且我们还能根据自己的需求进行定制。\u003ccode\u003edjango admin\u003c/code\u003e的列表页自带了一个批量删除所选对象的action，我们还可以添加自定义的功能action来实现其他功能，比如批量标记将文章标记为已发布。如下代码：\u003c/p\u003e","tags":["django","admin","action"],"title":"自定义django admin后台的action","type":"post","url":"/post/custom-django-admin-actions/","weight":0,"wordcount":351},{"author":null,"categories":null,"content":null,"date":1402617600,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1402617600,"objectID":"db9c871375bf7869018dccfb322d3f53","permalink":"https://qnxr.xyz/post/django-url-function-usage/","publishdate":"2014-06-13T00:00:00Z","readingtime":4,"relpermalink":"/post/django-url-function-usage/","section":"post","summary":"\u003cp\u003eDjango下有一个比较隐含的函数\u003cstrong\u003eurl\u003c/strong\u003e，在\u003ccode\u003edjango/conf/urls/defaults\u003c/code\u003e模块中，虽然只有短短的10行代码，但功能却很了得。起初初学\u003ccode\u003eDjango\u003c/code\u003e，并没有发现它，Templates的链接地址都是根据\u003ccode\u003eurlpatterns\u003c/code\u003e定义的地址，拼凑成地址字符串，很难看，而且Templates里拼凑成的地址，随着页面的增加而不断增加，一旦在\u003ccode\u003eurlpatterns\u003c/code\u003e里的某个地址改变了名称，那眼泪可是哗哗的，有多少的拼凑的地址就得改动多少处！这时发现了url函数，这下可都好了，不管\u003ccode\u003eurlpatterns\u003c/code\u003e里的某个地址叫法怎么改变，\u003ccode\u003eTemplates\u003c/code\u003e里的地址都不用修改了。\u003c/p\u003e\n\u003cp\u003e比如没有采用url函数的时候：\u003ccode\u003eurlpatterns\u003c/code\u003e里定义了资讯的首页地址,\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003eurlpatterns = patterns(\u0026#39;\u0026#39;,\n    (r\u0026#39;^article$\u0026#39;,\u0026#39;news_index\u0026#39; ),\n)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["django","url"],"title":"django下url函数的用法","type":"post","url":"/post/django-url-function-usage/","weight":0,"wordcount":1522},{"author":null,"categories":null,"content":null,"date":1402617600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1402617600,"objectID":"","permalink":"https://qnxr.xyz/tags/url/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/url/","section":"tags","summary":"","tags":null,"title":"url","type":"tags","url":"/tags/url/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1401235200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1401235200,"objectID":"5e9d99a9c14e9480b370c8a41397201d","permalink":"https://qnxr.xyz/post/django-i18n/","publishdate":"2014-05-28T00:00:00Z","readingtime":2,"relpermalink":"/post/django-i18n/","section":"post","summary":"\u003cp\u003e最近准备用用django的国际化功能，用的django1.6.5版本，按照网上说的教程始终不生效，最终只能去看官方文档，不得不说还是官方文档靠谱啊，下面记录了下django1.6+启用国际化的相关步骤。\u003c/p\u003e","tags":["django","国际化"],"title":"django国际化问题","type":"post","url":"/post/django-i18n/","weight":0,"wordcount":651},{"author":null,"categories":null,"content":null,"date":1401235200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1401235200,"objectID":"4211ecea5cb115bae48662b47a9ce6cc","permalink":"https://qnxr.xyz/post/django-custom-tag-inclusion_tag/","publishdate":"2014-05-28T00:00:00Z","readingtime":2,"relpermalink":"/post/django-custom-tag-inclusion_tag/","section":"post","summary":"\u003cp\u003e\u003ccode\u003edjango\u003c/code\u003e提供了强大的自定义标签、自定义过滤器等强大功能，今天首先介绍一下自定义标签的\u003ccode\u003einclusion_tags\u003c/code\u003e的用法。\u003c/p\u003e","tags":["django","标签"],"title":"django自定义标签之inclusion_tag的用法","type":"post","url":"/post/django-custom-tag-inclusion_tag/","weight":0,"wordcount":642},{"author":null,"categories":null,"content":null,"date":1401235200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1401235200,"objectID":"","permalink":"https://qnxr.xyz/tags/memcached/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/memcached/","section":"tags","summary":"","tags":null,"title":"Memcached","type":"tags","url":"/tags/memcached/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1401235200,"description":"","dir":"post\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1401235200,"objectID":"8874b28724c6b05e0669f621a6c16de0","permalink":"https://qnxr.xyz/post/some-pits-of-memcached/","publishdate":"2014-05-28T00:00:00Z","readingtime":3,"relpermalink":"/post/some-pits-of-memcached/","section":"post","summary":"\u003cp\u003e我们的网站用\u003ccode\u003edjango\u003c/code\u003e跑了很久了，一直没出现什么大的问题，突然一天晚上网站访问超级慢，出现大量的\u003ccode\u003e502\u003c/code\u003e错误码，难不成用户量猛增么，要是这样就好了。请教了很多运维高手帮忙排查问题、代码也回滚到上一个正常运行的版本了，但依然负载一会高一会低。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e捣腾了一天，最后定位到我们的代码有问题，有几个经常访问的API缓存了15分钟，经过分析发现其中一个API始终缓存不上，但在本地和测试环境都是没有问题的，这真是搞死人啊。后面发现这个API的请求的数据非常之大，接近2M了。而\u003cstrong\u003eMemcache有很多限制，其中就有value值大小的限制\u003c/strong\u003e，终于找到问题了，泪牛满面啊\u0026hellip;\u0026hellip;\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["django","Memcached"],"title":"Memcached的一些坑!!!","type":"post","url":"/post/some-pits-of-memcached/","weight":0,"wordcount":1181},{"author":null,"categories":null,"content":null,"date":1401235200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1401235200,"objectID":"","permalink":"https://qnxr.xyz/tags/%E5%9B%BD%E9%99%85%E5%8C%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%9B%BD%E9%99%85%E5%8C%96/","section":"tags","summary":"","tags":null,"title":"国际化","type":"tags","url":"/tags/%E5%9B%BD%E9%99%85%E5%8C%96/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1401235200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":1401235200,"objectID":"","permalink":"https://qnxr.xyz/tags/%E6%A0%87%E7%AD%BE/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%A0%87%E7%AD%BE/","section":"tags","summary":"","tags":null,"title":"标签","type":"tags","url":"/tags/%E6%A0%87%E7%AD%BE/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://qnxr.xyz/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"7a0da914bde98a7d3fcc7f6c5886633c","permalink":"https://qnxr.xyz/top/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/about/","section":"top","summary":"Huabing Zhao is an ICT veteran with a passion for open source. He has a solid experience in the telecommunication and information technology industry for more than 17 years. Throughout his career, he has built a number of large-scale, cross-country OSS/BSS platforms/systems and operation tools, most of them are still running in productions. He loves open source and has been contributing to a variety of open source projects, including Istio(Service","tags":null,"title":"","type":"top","url":"/top/about/","weight":0,"wordcount":252},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"54ccacff97b96806d49760361ef17350","permalink":"https://qnxr.xyz/top/books/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/books/","section":"top","summary":"Machine learning学习笔记 Coursera 在线课程 Machine learning 笔记讲师: 吴恩达(Andrew Ng) 课程地址：https://www.coursera.org/lear","tags":null,"title":"","type":"top","url":"/top/books/","weight":0,"wordcount":88},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://qnxr.xyz/tags/ci/cd/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ci/cd/","section":"tags","summary":"","tags":null,"title":"CI/CD","type":"tags","url":"/tags/ci/cd/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://qnxr.xyz/search/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/","section":"search","summary":"","tags":null,"title":"Searches","type":"search","url":"/search/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://qnxr.xyz/top/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/top/","section":"top","summary":"","tags":null,"title":"Tops","type":"top","url":"/top/","weight":0,"wordcount":0}]